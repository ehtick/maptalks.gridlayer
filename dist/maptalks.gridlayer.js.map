{"version":3,"file":"maptalks.gridlayer.js","sources":["../src/common.js","../src/gridlayer.js","../src/renderer/canvas-renderer.js","../node_modules/.pnpm/clone@1.0.4/node_modules/clone/clone.js","../node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/conversions.js","../node_modules/.pnpm/color-name@1.1.3/node_modules/color-name/index.js","../node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/route.js","../node_modules/.pnpm/color-convert@1.9.3/node_modules/color-convert/index.js","../node_modules/.pnpm/color-string@0.3.0/node_modules/color-string/color-string.js","../node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js","../node_modules/.pnpm/color@0.11.4/node_modules/color/index.js","../src/renderer/gl-renderer.js","../src/index.js"],"sourcesContent":["import { Coordinate } from 'maptalks';\r\n\r\nexport function getCellPointSize(layer, grid) {\r\n    const projection = layer.getGridProjection(),\r\n        map = layer.getMap(),\r\n        gridCenter = new Coordinate(grid.center),\r\n        center = map.coordinateToPoint(gridCenter),\r\n        target = projection.project(gridCenter)._add(grid.width, grid.height),\r\n        ptarget = map._prjToPoint(target),\r\n        width = Math.abs(ptarget.x - center.x),\r\n        height = Math.abs(ptarget.y - center.y);\r\n    return [width, height];\r\n}\r\n\r\n\r\nexport const defaultSymbol = {\r\n    'lineColor' : '#bbb',\r\n    'lineWidth' : 1,\r\n    'lineOpacity' : 1,\r\n    'lineDasharray': [],\r\n    'lineCap' : 'butt',\r\n    'lineJoin' : 'round',\r\n    'polygonOpacity' : 0\r\n};\r\n","import { getCellPointSize, defaultSymbol } from './common';\n\nimport * as maptalks from 'maptalks';\n\nconst options = {\n    'symbol' : maptalks.Util.extend({}, defaultSymbol),\n    'debug'  : false\n};\n\n/**\n * @classdesc\n * A layer draws grid.\n * A grid config contains:\n * {\n        center : [0, 0],     // center of the grid\n        width  : 100,        // width of the grid cell\n        height : 100,        // height of the grid cell\n        unit : 'projection' ,   // 网格的单位: projection指投影坐标, meter指真实距离, degree指经纬度\n        altitude: 0,         // altitude of the grid\n        cols      : [1, Infinity],\n        rows      : [2, 5],\n        data   : [\n          //长度为3的数组, arr[0]是x序号, arr[0]为y的序号, arr[2]为对象, properties属性为数据, symbol属性为样式\n          [1, 2, { properties : { foo : 1, foo2 : 'foo' }, symbol : { ... } }],\n          //arr[0]为数组, 表示区间内的格子, 此处表示第5行,2到4列的格子\n          [[2, 4] , 5, { symbo : {...} }] //[]\n        ]\n    }\n * @class\n * @category layer\n * @extends {maptalks.Layer}\n * @param {String|Number} id        - layer's id\n * @param {Object} grid             - grid\n * @param {Object} [options=null]   - construct options\n * @param {*} options.* - options defined in [maptalks.Layer]{@link maptalks.Layer#options}\n */\nexport class GridLayer extends maptalks.Layer {\n\n    static getPainterClass() {\n        return maptalks.VectorLayer.getPainterClass();\n    }\n\n    constructor(id, grids, options) {\n        super(id, options);\n        if (!grids) {\n            this._gridCenters = [];\n            this._grids = [];\n            return;\n        }\n        if (!Array.isArray(grids)) {\n            grids = [grids];\n        }\n\n        grids.forEach(grid => {\n            if (!grid['unit']) {\n                grid['unit'] = 'projection';\n            }\n            if (grid.center.toArray) {\n                grid.center = grid.center.toArray();\n            }\n        });\n        this._gridCenters = grids.map(grid => grid.center.slice(0));\n        this._grids = grids;\n    }\n\n    getGridCount() {\n        if (!this._grids) {\n            return 0;\n        }\n        return this._grids.length;\n    }\n\n    /**\n     * Get grid at given index\n     * @return {Object} grid object\n     */\n    getGrid(gridIndex = 0) {\n        const grid = this._grids[gridIndex];\n        if (!grid) {\n            return null;\n        }\n        let offset = grid['offset'];\n        if (offset) {\n            if (maptalks.Util.isFunction(offset)) {\n                offset = offset();\n            }\n            grid.center[0] = this._gridCenters[gridIndex][0] + offset[0];\n            grid.center[1] = this._gridCenters[gridIndex][1] + offset[1];\n        }\n        return grid;\n    }\n\n    setGrid(grid, gridIndex = 0) {\n        if (!grid['unit']) {\n            grid['unit'] = 'projection';\n        }\n        if (grid.center.toArray) {\n            grid.center = grid.center.toArray();\n        }\n        this._gridCenters[gridIndex] = grid.center.slice(0);\n        this._grids[gridIndex] = grid;\n        return this.redraw();\n    }\n\n    setGridData(data, gridIndex = 0) {\n        this._grids[gridIndex].data = data;\n        return this.redraw();\n    }\n\n    redraw() {\n        const renderer = this._getRenderer();\n        if (!renderer) {\n            return this;\n        }\n        renderer.redraw();\n        return this;\n    }\n\n    isEmpty(gridIndex = 0) {\n        if (!this._grids || !this._grids[gridIndex]) {\n            return true;\n        }\n        return false;\n    }\n\n    clear() {\n        delete this._grids;\n        this.fire('clear');\n        return this.redraw();\n    }\n\n    getGridProjection() {\n        if (this.options['projectionName']) {\n            return maptalks.projection[this.options['projectionName'].toUpperCase()];\n        } else {\n            return this.getMap().getProjection();\n        }\n    }\n\n    /**\n     * Get grid's geographic exteng\n     * @param {Number} [gridIndex=0] - grid's gridIndex\n     * @return {Extent}\n     */\n    getGridExtent(gridIndex = 0) {\n        const grid = this.getGrid(gridIndex),\n            center = new maptalks.Coordinate(grid.center),\n            map = this.getMap(),\n            w = grid.width,\n            h = grid.height,\n            cols = grid.cols || [-Infinity, Infinity],\n            rows = grid.rows || [-Infinity, Infinity];\n        if (maptalks.Util.isNil(cols[0])) cols[0] = -Infinity;\n        if (maptalks.Util.isNil(cols[1])) cols[1] = Infinity;\n        if (maptalks.Util.isNil(rows[0])) rows[0] = -Infinity;\n        if (maptalks.Util.isNil(rows[1])) rows[1] = Infinity;\n        if (grid['unit'] === 'projection') {\n            // meters in projected coordinate system\n            const projection = this.getGridProjection(),\n                pcenter = projection.project(center);\n            let xmin = pcenter.x + cols[0] * w,\n                xmax = pcenter.x + cols[1] * w,\n                ymin = pcenter.y + cols[0] * h,\n                ymax = pcenter.y + cols[1] * h;\n            const fullExtent = map.getFullExtent();\n            if (xmin === -Infinity) {\n                xmin = fullExtent['xmin'] + 1;\n            }\n            if (xmax === Infinity) {\n                xmax = fullExtent['xmax'];\n            }\n            if (ymin === -Infinity) {\n                ymin = fullExtent['ymin'];\n            }\n            if (ymax === Infinity) {\n                ymax = fullExtent['ymax'];\n            }\n            return new maptalks.Extent(xmin, ymin, xmax, ymax).convertTo(c => projection.unproject(c));\n        } else if (grid['unit'] === 'meter') {\n            // distance in geographic meters\n            const sw = map.locate(center, w * cols[0], -h * rows[0]),\n                ne = map.locate(center, w * cols[1], -h * rows[1]);\n            return new maptalks.Extent(sw, ne);\n        } else if (grid['unit'] === 'degree') {\n            const sw = center.add(w * cols[0], h * rows[0]),\n                ne = center.add(w * cols[1], h * rows[1]);\n            return new maptalks.Extent(sw, ne);\n        }\n        return null;\n    }\n\n    /**\n     * Get cell index at coordinate\n     * @param  {Coordinate} coordinate\n     * @param  {Number} gridIndex\n     * @return {Object}\n     * @private\n     */\n    getCellAt(coordinate, gridIndex = 0) {\n        const grid = this.getGrid(gridIndex),\n            map = this.getMap(),\n            extent = this.getGridExtent(gridIndex);\n        if (!extent.contains(coordinate)) {\n            return null;\n        }\n        const gridCenter = new maptalks.Coordinate(grid.center);\n        if (grid['unit'] === 'projection') {\n            const center = map.coordinateToPoint(gridCenter),\n                size = getCellPointSize(this, grid);\n            const p = map.coordinateToPoint(coordinate),\n                col = Math.floor((p.x - center.x) / size[0]),\n                row = Math.floor((p.y - center.y) / size[0]);\n            return [col, row];\n        } else if (grid['unit'] === 'meter') {\n            const distX = map.computeLength(new maptalks.Coordinate(coordinate.x, gridCenter.y), gridCenter),\n                col = Math.floor(distX / grid.width);\n            const distY = map.computeLength(new maptalks.Coordinate(gridCenter.x, coordinate.y), gridCenter),\n                row = Math.floor(distY / grid.height);\n            const dx = coordinate.x > gridCenter.x ? 1 : -1;\n            const dy = coordinate.y > gridCenter.y ? -1 : 1;\n            return [col * dx, row * dy];\n        } else if (grid['unit'] === 'degree') {\n            const distX = coordinate.x - gridCenter.x,\n                col = Math.floor(distX / grid.width);\n            const distY = coordinate.y - gridCenter.y,\n                row = Math.floor(distY / grid.height);\n            return [col, row];\n        }\n        return null;\n    }\n\n    /**\n     * Get cell's geometry\n     * @param {Number} col cell col\n     * @param {Number} row cell row\n     * @param  {Number} gridIndex\n     * @returns {maptalks.Geometry}\n     */\n    getCellGeometry(col, row, gridIndex = 0) {\n        const map = this.getMap(),\n            grid = this.getGrid(gridIndex);\n        const gridCenter = new maptalks.Coordinate(grid.center);\n        if (grid['unit'] === 'projection') {\n            const center = map.coordinateToPoint(gridCenter),\n                size = getCellPointSize(this, grid),\n                width = size[0],\n                height = size[1];\n            const cnw = center.add(width * col, height * row);\n            const nw = map.pointToCoordinate(cnw),\n                ne = map.pointToCoordinate(cnw.add(width, 0)),\n                sw = map.pointToCoordinate(cnw.add(0, height));\n            const w = map.computeLength(nw, ne),\n                h = map.computeLength(nw, sw);\n            if (grid.altitude) {\n                nw.z = grid.altitude;\n            }\n            return new maptalks.Rectangle(nw, w, h);\n        } else if (grid['unit'] === 'meter') {\n            const { width, height } = grid;\n            const nw = map.locate(gridCenter, col * width, -row * height);\n            if (grid.altitude) {\n                nw.z = grid.altitude;\n            }\n            return new maptalks.Rectangle(nw, width, height);\n        } else if (grid['unit'] === 'degree') {\n            const { width, height } = grid;\n            const nw = gridCenter.add(col * width, -row * height);\n            const ne = nw.add(width, 0);\n            const sw = nw.add(0, -height);\n            const w = map.computeLength(nw, ne),\n                h = map.computeLength(nw, sw);\n            if (grid.altitude) {\n                nw.z = grid.altitude;\n            }\n            return new maptalks.Rectangle(nw, w, h);\n        }\n        return null;\n    }\n\n    /**\n     * Visit data cells around given coordinate\n     * @param  {maptalks.Coordinate} coordinate\n     * @param {Function}  cb  callback function, parameter is [col, row, { properties, symbol }], return false to break the visiting\n     * @param  {Number} gridIndex\n     */\n    visitAround(coordinate, cb, gridIndex = 0) {\n        const grid = this.getGrid(gridIndex),\n            gridData = grid.data;\n        if (!coordinate || !grid.data || !cb) {\n            return;\n        }\n        const data = [];\n        for (let i = 0; i < gridData.length; i++) {\n            let cols = gridData[i][0],\n                rows = gridData[i][1];\n            const value = gridData[i][2];\n            if (!Array.isArray(cols)) {\n                cols = [cols, cols];\n            }\n            if (!Array.isArray(rows)) {\n                rows = [rows, rows];\n            }\n            for (let ii = cols[0]; ii <= cols[1]; ii++) {\n                for (let iii = rows[0]; iii <= rows[1]; iii++) {\n                    data.push([ii, iii, value]);\n                }\n            }\n        }\n        if (!data.length) {\n            return;\n        }\n\n        const startCell = this.getCellAt(coordinate, gridIndex);\n        if (!startCell) {\n            return;\n        }\n        //根据与开始网格的距离对所有网格排序\n        const sorted = data.sort((a, b) => {\n            return Math.pow((a[0] - startCell[0]), 2) + Math.pow((a[1] - startCell[1]), 2) - Math.pow((b[0] - startCell[0]), 2) - Math.pow((b[1] - startCell[1]), 2);\n        });\n\n        for (let i = 0, l = sorted.length; i < l; i++) {\n            if (cb(sorted[i]) === false) {\n                break;\n            }\n        }\n    }\n\n    /**\n     * Return cell index and cell geometry at coordinate\n     * @param {maptalks.Coordinate} coordinate coordinate\n     * @param  {Number} gridIndex\n     * @returns {Object} { col : col, row : row, geometry : cellGeometry }\n     */\n    identify(coordinate, gridIndex = 0) {\n        if (!coordinate) {\n            return null;\n        }\n        const extent = this.getGridExtent(gridIndex);\n        if (!extent.contains(coordinate)) {\n            return null;\n        }\n        const idx = this.getCellAt(coordinate, gridIndex);\n        const rectangle = this.getCellGeometry(idx[0], idx[1], gridIndex);\n        return {\n            col : idx[0],\n            row : idx[1],\n            geometry : rectangle\n        };\n    }\n\n    /**\n     * Export the GridLayer's JSON.\n     * @return {Object} layer's JSON\n     */\n    toJSON() {\n        const grid = this._grids;\n        return {\n            'type'      : 'GridLayer',\n            'id'        : this.getId(),\n            'options'   : this.config(),\n            'grid'      : grid\n        };\n    }\n\n    /**\n     * Reproduce a GridLayer from layer's JSON.\n     * @param  {Object} json - layer's JSON\n     * @return {maptalks.GridLayer}\n     * @static\n     * @private\n     * @function\n     */\n    static fromJSON(json) {\n        if (!json || json['type'] !== 'GridLayer') { return null; }\n        return new GridLayer(json['id'], json['grid'], json['options']);\n    }\n}\n\nGridLayer.mergeOptions(options);\n\nGridLayer.registerJSONType('GridLayer');\n","import * as maptalks from 'maptalks';\nimport { getCellPointSize, defaultSymbol } from '../common';\n\nconst symbolizers = [\n    maptalks.symbolizer.ImageMarkerSymbolizer,\n    maptalks.symbolizer.TextMarkerSymbolizer,\n    maptalks.symbolizer.VectorMarkerSymbolizer,\n    maptalks.symbolizer.VectorPathMarkerSymbolizer\n];\n\nexport default class GridCanvasRenderer extends maptalks.renderer.CanvasRenderer {\n\n    needToRedraw() {\n        const map = this.getMap();\n        if (!map.getPitch() && map.isZooming()) {\n            return false;\n        }\n        return super.needToRedraw();\n    }\n\n    draw() {\n        const grid = this.layer.getGrid(0);\n        if (!grid) {\n            this.completeRender();\n            return;\n        }\n        this.prepareCanvas();\n        this._setCanvasStyle(this._compiledGridStyle);\n        this._drawGrid();\n        this._drawData();\n        this.completeRender();\n    }\n\n    drawOnInteracting() {\n        this.draw();\n    }\n\n    checkResources() {\n        this._compileStyles();\n        if (this._resources) {\n            return null;\n        }\n        let resources = [];\n        if (this._compiledGridStyle) {\n            resources = maptalks.Util.getExternalResources(this._compiledGridStyle);\n        }\n        if (this._compiledSymbols) {\n            for (let i = 0; i < this._compiledSymbols.length; i++) {\n                const gridSymbols = this._compiledSymbols[i];\n                for (let ii = 0; ii < gridSymbols.length; ii++) {\n                    const c = maptalks.Util.getExternalResources(gridSymbols[ii]);\n                    if (c) {\n                        resources = resources.concat(c);\n                    }\n                }\n            }\n        }\n        return resources;\n    }\n\n    redraw() {\n        this.reset();\n        this.setToRedraw();\n    }\n\n    reset() {\n        delete this._compiledSymbols;\n    }\n\n    _compileStyles() {\n        if (!this._compiledGridStyle) {\n            const symbol = maptalks.Util.convertResourceUrl(this.layer.options['symbol']);\n            this._compiledGridStyle = maptalks.MapboxUtil.loadFunctionTypes(symbol, () => {\n                return [this.getMap() ? this.getMap().getZoom() : null, null];\n            });\n        }\n        if (!this._compiledSymbols) {\n            const map = this.getMap(),\n                gridCount = this.layer.getGridCount();\n            this._compiledSymbols = [];\n            for (let i = 0; i < gridCount; i++) {\n                const grid = this.layer.getGrid(i),\n                    data = grid['data'];\n                this._compiledSymbols[i] = [];\n                if (data) {\n                    data.forEach((gridData, index) => {\n                        if (!gridData[2]['symbol']) {\n                            return;\n                        }\n                        const argFn = (function (props) {\n                            return function () {\n                                return [map.getZoom(), props];\n                            };\n                        })(gridData[2]['properties']);\n                        const s = maptalks.Util.convertResourceUrl(gridData[2]['symbol']);\n                        this._compiledSymbols[i][index] = maptalks.MapboxUtil.loadFunctionTypes(s, argFn);\n                    });\n                }\n            }\n\n        }\n    }\n\n    _preDrawGrid() {\n        const map = this.getMap();\n        const count = this.layer.getGridCount();\n        const gridInfos = [];\n        for (let i = 0; i < count; i++) {\n            const grid = this.layer.getGrid(i),\n                gridInfo = grid['unit'] === 'projection' ? this._getProjGridToDraw(grid, i) : this._getGridToDraw(grid, i);\n            if (!gridInfo || this._compiledGridStyle.lineOpacity <= 0 || this._compiledGridStyle.lineWidth <= 0) {\n                gridInfos.push(null);\n                continue;\n            }\n            const cols = gridInfo.cols,\n                rows = gridInfo.rows;\n            const p0 = this._getCellNW(cols[0], rows[0], gridInfo);\n            if (map.getPitch() === 0) {\n                const p1 = this._getCellNW(cols[0] + 1, rows[0] + 1, gridInfo);\n                const width = Math.abs(p0.x - p1.x);\n                const height = Math.abs(p0.y - p1.y);\n                if (width < 0.5 || height < 0.5 || (this._compiledGridStyle['polygonOpacity'] > 0 || this._compiledGridStyle['polygonColor'] || this._compiledGridStyle['polygonPatternFile'])) {\n                    const p2 = this._getCellNW(cols[1] + 1, rows[0], gridInfo);\n                    const p3 = this._getCellNW(cols[1] + 1, rows[1] + 1, gridInfo);\n                    const p4 = this._getCellNW(cols[0], rows[1] + 1, gridInfo);\n                    this.context.beginPath();\n                    // this.context.rect(p0.x, p0.y, p2.x - p0.x, p2.y - p0.y);\n                    this.context.moveTo(p0.x, p0.y);\n                    this.context.lineTo(p2.x, p2.y);\n                    this.context.lineTo(p3.x, p3.y);\n                    this.context.lineTo(p4.x, p4.y);\n                    this.context.closePath();\n\n                    this.context.fillStyle = this._compiledGridStyle.lineColor;\n                    if (this._compiledGridStyle['polygonOpacity'] > 0) {\n                        maptalks.Canvas.fillCanvas(this.context, this._compiledGridStyle['polygonOpacity'], p0.x, p0.y);\n                    } else {\n                        maptalks.Canvas.fillCanvas(this.context, 1, p0.x, p0.y);\n                    }\n                    if (width < 0.5 || height < 0.5) {\n                        gridInfos.push(null);\n                        continue;\n                    }\n                }\n            }\n            gridInfos.push({\n                cols : cols,\n                rows : rows,\n                altitude : grid.altitude || 0,\n                gridInfo : gridInfo,\n                p0 : p0\n            });\n        }\n        return gridInfos;\n    }\n\n    _drawGrid() {\n        const colRows = this._preDrawGrid();\n        for (let i = 0; i < colRows.length; i++) {\n            const colRow = colRows[i];\n            if (!colRow) {\n                continue;\n            }\n            this.context.beginPath();\n            const cols = colRow['cols'],\n                rows = colRow['rows'],\n                gridInfo = colRow['gridInfo'],\n                p0 = colRow['p0'];\n            let p1, p2;\n            for (let i = cols[0]; i <= cols[1]; i++) {\n                p1 = this._getCellNW(i, rows[0], gridInfo);\n                p2 = this._getCellNW(i, rows[1], gridInfo);\n                this.context.moveTo(p1.x, p1.y);\n                this.context.lineTo(p2.x, p2.y);\n            }\n            for (let i = rows[0]; i <= rows[1]; i++) {\n                p1 = this._getCellNW(cols[0], i, gridInfo);\n                p2 = this._getCellNW(cols[1], i, gridInfo);\n                this.context.moveTo(p1.x, p1.y);\n                this.context.lineTo(p2.x, p2.y);\n            }\n            maptalks.Canvas._stroke(this.context, this._compiledGridStyle['lineOpacity'], p0.x, p0.y);\n        }\n\n    }\n\n    _getProjGridToDraw(grid) {\n        const map = this.getMap(),\n            // projection = map.getProjection(),\n            extent = map._get2DExtent(),\n            gridX = grid.cols || [-Infinity, Infinity],\n            gridY = grid.rows || [-Infinity, Infinity],\n            gridCenter = new maptalks.Coordinate(grid.center),\n            center = map.coordinateToPoint(gridCenter),\n            size = getCellPointSize(this.layer, grid),\n            width = size[0],\n            height = size[1];\n        if (maptalks.Util.isNil(gridX[0])) gridX[0] = -Infinity;\n        if (maptalks.Util.isNil(gridX[1])) gridX[1] = Infinity;\n        if (maptalks.Util.isNil(gridY[0])) gridY[0] = -Infinity;\n        if (maptalks.Util.isNil(gridY[1])) gridY[1] = Infinity;\n        const gridExtent = new maptalks.PointExtent(\n            center.x + gridX[0] * width,\n            center.y + gridY[0] * height,\n            center.x + gridX[1] * width,\n            center.y + gridY[1] * height\n        );\n        const intersection = extent.intersection(gridExtent);\n        if (!intersection) {\n            return null;\n        }\n        const delta = 1E-6;\n        const cols = [\n            -Math.ceil((center.x - intersection.xmin - delta) / width),\n            Math.ceil((intersection.xmax - center.x - delta) / width)\n        ];\n        const rows = [\n            -Math.ceil((center.y - intersection.ymin - delta) / height),\n            Math.ceil((intersection.ymax - center.y - delta) / height)\n        ];\n        return {\n            cols : cols,\n            rows : rows,\n            altitude: grid.altitude || 0,\n            width : width,\n            height : height,\n            center : center,\n            unit : grid.unit\n        };\n    }\n\n    _getGridToDraw(grid, index) {\n        const map = this.getMap(),\n            // projection = map.getProjection(),\n            extent = map.getExtent(),\n            gridCenter = new maptalks.Coordinate(grid.center),\n            gridExtent = this.layer.getGridExtent(index),\n            w = grid.width,\n            h = grid.height;\n\n        const intersection = extent.intersection(gridExtent);\n        if (!intersection) {\n            return null;\n        }\n        const delta = 1E-6;\n        let cols, rows;\n        if (grid['unit'] === 'meter') {\n            const dx1 = map.computeLength(new maptalks.Coordinate(intersection.xmin, gridCenter.y), gridCenter),\n                dx2 = map.computeLength(new maptalks.Coordinate(intersection.xmax, gridCenter.y), gridCenter);\n            //经纬度里，ymax在上方，ymin在下方，和projection时是反的\n            const dy1 = map.computeLength(new maptalks.Coordinate(gridCenter.x, intersection.ymax), gridCenter),\n                dy2 = map.computeLength(new maptalks.Coordinate(gridCenter.x, intersection.ymin), gridCenter);\n            cols = [\n                -Math.round(dx1 / grid.width),\n                Math.round(dx2 / grid.width)\n            ];\n            rows = [\n                -Math.round(dy1 / grid.height),\n                Math.round(dy2 / grid.height)\n            ];\n        } else if (grid['unit'] === 'degree') {\n            cols = [\n                -Math.ceil((gridCenter.x - intersection.xmin - delta) / w),\n                Math.ceil((intersection.xmax - gridCenter.x - delta) / w)\n            ];\n            rows = [\n                -Math.ceil((intersection.ymax - gridCenter.y - delta) / h),\n                Math.ceil((gridCenter.y - intersection.ymin - delta) / h)\n            ];\n        }\n\n        return {\n            cols : cols,\n            rows : rows,\n            center : gridCenter,\n            altitude: grid.altitude || 0,\n            unit : grid.unit,\n            width : grid.width,\n            height : grid.height\n        };\n    }\n\n    _getCellNWPoint(col, row, gridInfo, targetZ) {\n        const map = this.getMap();\n        if (gridInfo['unit'] === 'projection') {\n            const p = new maptalks.Point(\n                gridInfo.center.x + col * gridInfo.width,\n                gridInfo.center.y + row * gridInfo.height\n            );\n            if (map._pointToPointAtZoom) {\n                return map._pointToPointAtZoom(p, targetZ);\n            } else {\n                return map._pointToPointAtRes(p, map.getResolution(targetZ));\n            }\n        } else if (gridInfo['unit'] === 'meter') {\n            const center = gridInfo.center;\n            const target = map.locate(center, gridInfo.width * col, -gridInfo.height * row);\n            return map.coordToPoint(target, targetZ);\n        } else if (gridInfo['unit'] === 'degree') {\n            const center = gridInfo.center;\n            const target = center.add(col * gridInfo.width, -row * gridInfo.height);\n            return map.coordToPoint(target, targetZ);\n        }\n        return null;\n    }\n\n    _getCellNW(col, row, gridInfo) {\n        const point = this._getCellNWPoint(col, row, gridInfo);\n        return this.getMap()._pointToContainerPoint(point);\n    }\n\n    _getCellCenter(col, row, gridInfo) {\n        const map = this.getMap();\n        if (gridInfo['unit'] === 'projection') {\n            const p = new maptalks.Point(\n                gridInfo.center.x + (col + 1 / 2) * gridInfo.width,\n                gridInfo.center.y + (row + 1 / 2) * gridInfo.height\n            );\n            return map.pointToCoordinate(p);\n        } else if (gridInfo['unit'] === 'meter') {\n            const center = gridInfo.center;\n            return map.locate(center, gridInfo.width * (col + 1 / 2), -gridInfo.height * (row + 1 / 2));\n        } else if (gridInfo['unit'] === 'degree') {\n            const center = gridInfo.center;\n            return center.add(gridInfo.width * (col + 1 / 2), -gridInfo.height * (row + 1 / 2));\n        }\n        return null;\n    }\n\n    _drawData() {\n        const count = this.layer.getGridCount();\n        for (let i = 0; i < count; i++) {\n            const grid = this.layer.getGrid(i),\n                gridInfo = grid['unit'] === 'projection' ? this._getProjGridToDraw(grid, i) : this._getGridToDraw(grid, i),\n                data = grid['data'];\n            if (!Array.isArray(data) || !data.length) {\n                return;\n            }\n            data.forEach((gridData, index) => {\n                if (!gridData[2]['symbol'] || !gridInfo) {\n                    return;\n                }\n                this._drawDataGrid(gridData, this._compiledSymbols[i][index], gridInfo);\n                this._drawLabel(i, gridData, index, gridInfo);\n            });\n        }\n\n    }\n\n    _drawDataGrid(gridData, symbol, gridInfo) {\n        const ctx = this.context,\n            map = this.getMap(),\n            mapExtent = map.getContainerExtent();\n        let painted = false;\n        const cols = Array.isArray(gridData[0]) ? gridData[0] : [gridData[0], gridData[0]],\n            rows = Array.isArray(gridData[1]) ? gridData[1] : [gridData[1], gridData[1]],\n            p0 = this._getCellNW(cols[0], rows[0], gridInfo);\n        let p1, p2, p3, p4, gridExtent;\n        for (let i = cols[0]; i <= cols[1]; i++) {\n            for (let ii = rows[0]; ii <= rows[1]; ii++) {\n                p1 = this._getCellNW(i, ii, gridInfo);\n                p2 = this._getCellNW(i + 1, ii, gridInfo);\n                p3 = this._getCellNW(i + 1, ii + 1, gridInfo);\n                p4 = this._getCellNW(i, ii + 1, gridInfo);\n                gridExtent = new maptalks.PointExtent(p1.x, p1.y, p3.x, p3.y);\n                // marker as an invalid grid if width or height is abnormally large, due to containerPoint conversion\n                if (gridExtent.getWidth() > 1E4 || gridExtent.getHeight() > 1E4 || !mapExtent.intersects(gridExtent)) {\n                    continue;\n                }\n                if (!painted) {\n                    painted = true;\n                    this._setCanvasStyle(symbol);\n                    ctx.beginPath();\n                }\n                ctx.moveTo(p1.x, p1.y);\n                ctx.lineTo(p2.x, p2.y);\n                ctx.lineTo(p3.x, p3.y);\n                ctx.lineTo(p4.x, p4.y);\n                ctx.closePath();\n            }\n        }\n        if (painted) {\n            maptalks.Canvas.fillCanvas(ctx, symbol['polygonOpacity'], p0.x, p0.y);\n            maptalks.Canvas._stroke(ctx, symbol['lineOpacity']);\n        }\n    }\n\n    _testSymbol(symbol) {\n        for (let i = symbolizers.length - 1; i >= 0; i--) {\n            if (symbolizers[i].test(symbol)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    _drawLabel(gridIndex, gridData, index, gridInfo) {\n        if (!this._gridSymbolTests) {\n            this._gridSymbolTests = {};\n        }\n        if (!this._gridSymbolTests[gridIndex]) {\n            this._gridSymbolTests[gridIndex] = [];\n        }\n        if (maptalks.Util.isNil(this._gridSymbolTests[gridIndex][index])) {\n            this._gridSymbolTests[gridIndex][index] = this._testSymbol(gridData[2]['symbol']);\n        }\n        if (!this._gridSymbolTests[gridIndex][index]) {\n            return;\n        }\n        const symbol = gridData[2]['symbol'];\n        const map = this.getMap(),\n            extent = map.getExtent();\n        if (!this._dataMarkers) {\n            this._dataMarkers = {};\n        }\n        let dataMarkers = this._dataMarkers[gridIndex];\n        if (!dataMarkers) {\n            this._dataMarkers[gridIndex] = dataMarkers = [];\n        }\n        const coordinates = [];\n        if (!Array.isArray(gridData[0]) && !Array.isArray(gridData[1])) {\n            const p = this._getCellCenter(gridData[0], gridData[1], gridInfo);\n            if (extent.contains(p)) {\n                coordinates.push(p);\n            }\n        } else {\n            const cols = Array.isArray(gridData[0]) ? gridData[0] : [gridData[0], gridData[0]],\n                rows = Array.isArray(gridData[1]) ? gridData[1] : [gridData[1], gridData[1]];\n            for (let i = cols[0]; i <= cols[1]; i++) {\n                for (let ii = rows[0]; ii <= rows[1]; ii++) {\n                    const p = this._getCellCenter(i, ii, gridInfo);\n                    if (extent.contains(p)) {\n                        coordinates.push(p);\n                    }\n                }\n            }\n        }\n\n        if (coordinates.length === 0) {\n            return;\n        }\n        let line = dataMarkers[index];\n        const altitude = gridInfo.altitude + (this.layer.options['altitude'] || 0);\n        if (altitude) {\n            for (let i = 0; i < coordinates.length; i++) {\n                coordinates[i].z = altitude;\n            }\n        }\n        if (!line) {\n            const lineSymbol = maptalks.Util.extend({}, symbol);\n            lineSymbol['markerPlacement'] = 'point';\n            lineSymbol['textPlacement'] = 'point';\n            lineSymbol['lineOpacity'] = 0;\n            lineSymbol['polygonOpacity'] = 0;\n            line = new maptalks.LineString(coordinates, {\n                'symbol' : lineSymbol,\n                'properties' : gridData[2]['properties'],\n                'debug' : this.layer.options['debug']\n            });\n            line._bindLayer(this.layer);\n            dataMarkers[index] = line;\n        } else {\n            const redraw = this._toRedraw;\n            line.setCoordinates(coordinates);\n            this._toRedraw = redraw;\n        }\n        line._getPainter().paint();\n    }\n\n    _setCanvasStyle(symbol) {\n        const s = maptalks.Util.extend({}, defaultSymbol, symbol);\n        maptalks.Canvas.prepareCanvas(this.context, s, this._resources);\n    }\n\n    onRemove() {\n        delete this._compiledGridStyle;\n        delete this._compiledSymbols;\n        delete this._gridSymbolTests;\n        delete this._dataMarkers;\n    }\n}\n","var clone = (function() {\n'use strict';\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n*/\nfunction clone(parent, circular, depth, prototype) {\n  var filter;\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    filter = circular.filter;\n    circular = circular.circular\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth == 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n};\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n};\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n};\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n};\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\n       hex =  /^#([a-fA-F0-9]{6})$/,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\n       keyword = /(\\D+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar clone = require('clone');\nvar convert = require('color-convert');\nvar string = require('color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else {\n\t\t\tthrow new Error('Unable to parse color from string \"' + obj + '\"');\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t} else {\n\t\t\tthrow new Error('Unable to parse color from object ' + JSON.stringify(obj));\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tif (this.values.alpha !== 1) {\n\t\t\treturn this.values.hwb.concat([this.values.alpha]);\n\t\t}\n\t\treturn this.values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn rgb.concat([this.values.alpha]);\n\t},\n\trgbaArrayNormalized: function () {\n\t\tvar rgb = this.values.rgb;\n\t\tvar glRgba = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tglRgba[i] = rgb[i] / 255;\n\t\t}\n\t\tglRgba.push(this.values.alpha);\n\t\treturn glRgba;\n\t},\n\thslaArray: function () {\n\t\tvar hsl = this.values.hsl;\n\t\treturn hsl.concat([this.values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\treturn (this.values.rgb[0] << 16) | (this.values.rgb[1] << 8) | this.values.rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tthis.values.hsl[2] += this.values.hsl[2] * ratio;\n\t\tthis.setValues('hsl', this.values.hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tthis.values.hsl[2] -= this.values.hsl[2] * ratio;\n\t\tthis.setValues('hsl', this.values.hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tthis.values.hsl[1] += this.values.hsl[1] * ratio;\n\t\tthis.setValues('hsl', this.values.hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tthis.values.hsl[1] -= this.values.hsl[1] * ratio;\n\t\tthis.setValues('hsl', this.values.hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tthis.values.hwb[1] += this.values.hwb[1] * ratio;\n\t\tthis.setValues('hwb', this.values.hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tthis.values.hwb[2] += this.values.hwb[2] * ratio;\n\t\tthis.setValues('hwb', this.values.hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tthis.setValues('alpha', this.values.alpha - (this.values.alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tthis.setValues('alpha', this.values.alpha + (this.values.alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hue = this.values.hsl[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\tthis.values.hsl[0] = hue;\n\t\tthis.setValues('hsl', this.values.hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\tvar col = new Color();\n\t\tcol.values = clone(this.values);\n\t\treturn col;\n\t}\n};\n\nColor.prototype.getValues = function (space) {\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = this.values[space][i];\n\t}\n\n\tif (this.values.alpha !== 1) {\n\t\tvals.a = this.values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar spaces = {\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\thsv: ['hue', 'saturation', 'value'],\n\t\thwb: ['hue', 'whiteness', 'blackness'],\n\t\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n\t};\n\n\tvar maxes = {\n\t\trgb: [255, 255, 255],\n\t\thsl: [360, 100, 100],\n\t\thsv: [360, 100, 100],\n\t\thwb: [360, 100, 100],\n\t\tcmyk: [100, 100, 100, 100]\n\t};\n\n\tvar i;\n\tvar alpha = 1;\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tthis.values[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tthis.values[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tthis.values[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tthis.values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? this.values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], this.values[space][i]));\n\t\tthis.values[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tthis.values[sname] = convert[space][sname](this.values[space]);\n\t\t}\n\n\t\t// cap values\n\t\tfor (i = 0; i < sname.length; i++) {\n\t\t\tcapped = Math.max(0, Math.min(maxes[sname][i], this.values[sname][i]));\n\t\t\tthis.values[sname][i] = Math.round(capped);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn this.values[space][index];\n\t} else if (val === this.values[space][index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tthis.values[space][index] = val;\n\tthis.setValues(space, this.values[space]);\n\n\treturn this;\n};\n\nmodule.exports = Color;\n","import GridCanvasRenderer from './canvas-renderer';\nimport * as maptalks from 'maptalks';\nimport Color from 'color';\n\nconst shaders = {\n    'vertexShader' : `\n        attribute vec3 a_position;\n\n        uniform mat4 u_matrix;\n\n        void main() {\n            gl_Position = u_matrix * vec4(a_position, 1.0);\n        }\n    `,\n    // fragment shader, can be replaced by layer.options.fragmentShader\n    'fragmentShader' : `\n        precision mediump float;\n\n        uniform float u_opacity;\n\n        uniform vec4 u_color;\n\n        void main() {\n            gl_FragColor = u_color * u_opacity;\n        }\n    `\n};\n\nconst dataGridShaders = {\n    'vertexShader' : `\n        attribute vec3 a_position;\n        attribute vec3 a_color;\n        attribute float a_opacity;\n\n        varying vec4 v_color;\n\n        uniform mat4 u_matrix;\n\n        void main() {\n            v_color = vec4(a_color / 255.0, 1.0) * (a_opacity / 255.0);\n            gl_Position = u_matrix * vec4(a_position, 1.0);\n        }\n    `,\n    // fragment shader, can be replaced by layer.options.fragmentShader\n    'fragmentShader' : `\n        precision mediump float;\n\n        varying vec4 v_color;\n\n        void main() {\n            vec4 color = v_color;\n            // color = vec4(0.0, 0.0, 0.0, 1.0);\n            gl_FragColor = color;\n        }\n    `\n};\n\nexport default class GridGLRenderer extends GridCanvasRenderer {\n\n    draw() {\n        const grid = this.layer.getGrid();\n        if (!grid) {\n            this.completeRender();\n            return;\n        }\n        this.prepareCanvas();\n        this._setCanvasStyle(this._compiledGridStyle);\n        this._drawGrid();\n        this._glDrawDataGrid();\n        this._drawGlCanvas();\n        this._drawAllLabels();\n        this.completeRender();\n    }\n\n    drawOnInteracting() {\n        this.draw();\n    }\n\n    reset() {\n        super.reset();\n        delete this.paintedGridNum;\n        delete this._dataVertices;\n        delete this._dataColors;\n        delete this._dataIndices;\n        if (this.gl) {\n            if (this._buffers) {\n                this._buffers.forEach(buffer => {\n                    this.gl.deleteBuffer(buffer);\n                });\n            }\n        }\n        delete this.gridBuffer;\n        delete this.dataGridBuffer;\n        delete this.dataGridIndexBuffer;\n        delete this.dataColorsBuffer;\n        this._buffers = [];\n    }\n\n    _meterToPoint(center, altitude) {\n        const map = this.getMap();\n        if (map.getGLZoom) {\n            // compliance for older version of maptalks\n            const z = map.getGLZoom();\n            const target = map.locate(center, altitude, 0);\n            const p0 = map.coordToPoint(center, z),\n                p1 = map.coordToPoint(target, z);\n            return Math.abs(p1.x - p0.x) * maptalks.Util.sign(altitude);\n        } else if (map.altitudeToPoint) {\n            if (!this._meterToGL) {\n                this._meterToGL = map.altitudeToPoint(1, map.getGLRes());\n            }\n            return this._meterToGL * altitude;\n        } else {\n            const res = map.getGLRes();\n            const target = map.locate(center, altitude, 0);\n            const p0 = map.coordToPointAtRes(center, res),\n                p1 = map.coordToPointAtRes(target, res);\n            return Math.abs(p1.x - p0.x) * maptalks.Util.sign(altitude);\n        }\n    }\n\n    _updateUniforms() {\n        const gl = this.gl;\n        gl.uniformMatrix4fv(this.program['u_matrix'], false, this.getMap().projViewMatrix);\n    }\n\n    _useGridProgram() {\n        if (!this.gridProgram) {\n            this.gridProgram = this.createProgram(shaders['vertexShader'], shaders['fragmentShader'], ['u_matrix', 'u_color', 'u_opacity']);\n        }\n        this.useProgram(this.gridProgram);\n        this.program = this.gridProgram;\n    }\n\n    _drawGrid() {\n        if (!this.gridBuffer) {\n            this.gridBuffer = [];\n        }\n        this._useGridProgram();\n        const colRows = this._preDrawGrid();\n        const map = this.getMap();\n        const layerAltitude = this.layer.options['altitude'] || 0;\n        for (let i = 0; i < colRows.length; i++) {\n            const colRow = colRows[i];\n            if (!colRow) {\n                continue;\n            }\n            const cols = colRow['cols'],\n                rows = colRow['rows'],\n                gridInfo = colRow['gridInfo'];\n            let p1, p2;\n            let z = 0;\n            const altitude = (colRow.altitude || 0) + layerAltitude;\n            if (altitude) {\n                z = this._meterToPoint(map.getCenter(), altitude);\n            }\n\n            const count = (cols[1] - cols[0] + 1) * 6 + (rows[1] - rows[0] + 1) * 6;\n            const vertices = new Float32Array(count);\n            let c = 0;\n            const set = p => {\n                vertices[c++] = p;\n            };\n            //划线\n            for (let i = cols[0]; i <= cols[1]; i++) {\n                p1 = this._getCellNWPoint(i, rows[0], gridInfo);\n                p2 = this._getCellNWPoint(i, rows[1], gridInfo);\n                [p1.x, p1.y, z, p2.x, p2.y, z].forEach(set);\n            }\n            for (let i = rows[0]; i <= rows[1]; i++) {\n                p1 = this._getCellNWPoint(cols[0], i, gridInfo);\n                p2 = this._getCellNWPoint(cols[1], i, gridInfo);\n                [p1.x, p1.y, z, p2.x, p2.y, z].forEach(set);\n            }\n\n            if (!this.gridBuffer[i]) {\n                this.gridBuffer[i] = this.createBuffer();\n            }\n            const gl = this.gl;\n            gl.lineWidth(this._compiledGridStyle.lineWidth || 1);\n\n            this._updateUniforms();\n\n            gl.uniform1f(this.program['u_opacity'], this._compiledGridStyle.lineOpacity || 1);\n            const color = Color(this._compiledGridStyle.lineColor || '#000').rgbaArrayNormalized();\n            gl.uniform4fv(this.program['u_color'], color || [0, 0, 0, 1]);\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.gridBuffer[i]);\n            gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n            this.enableVertexAttrib(['a_position', 3]);\n            gl.drawArrays(gl.LINES, 0, vertices.length / 3);\n            gl.lineWidth(1);\n        }\n    }\n\n    _useDataGridProgram() {\n        if (!this.dataGridProgram) {\n            this.dataGridProgram = this.createProgram(dataGridShaders['vertexShader'], dataGridShaders['fragmentShader'], ['u_matrix']);\n        }\n        this.useProgram(this.dataGridProgram);\n        this.program = this.dataGridProgram;\n    }\n\n    _glDrawDataGrid() {\n        if (!this.paintedGridNum) {\n            this.paintedGridNum = [];\n            this._dataVertices = [];\n            this._dataColors = [];\n            this._dataIndices = [];\n            this.dataGridBuffer = [];\n            this.dataGridIndexBuffer = [];\n            this.dataColorsBuffer = [];\n        }\n        const gl = this.gl;\n        this._useDataGridProgram();\n        const count = this.layer.getGridCount();\n        for (let i = 0; i < count; i++) {\n            const grid = this.layer.getGrid(i),\n                gridInfo = grid['unit'] === 'projection' ? this._getProjGridToDraw(grid, i) : this._getGridToDraw(grid, i),\n                data = grid['data'];\n            if (!gridInfo || !Array.isArray(data) || !data.length) {\n                continue;\n            }\n\n            const isDynamic = maptalks.Util.isFunction(grid.offset);\n            let vertices = this._dataVertices[i] || [], colors = this._dataColors[i] || [];\n            let indices = this._dataIndices[i] || [];\n            if (!this.paintedGridNum[i] || isDynamic) {\n                let c = 0;\n                data.forEach((gridData, index) => {\n                    if (!gridData[2]['symbol']) {\n                        return;\n                    }\n                    c = this._drawDataGrid({ vertices, colors, indices }, c, gridData, this._compiledSymbols[i][index], gridInfo);\n                });\n            }\n\n            if (!this.dataGridBuffer[i]) {\n                vertices = this._dataVertices[i] = new Float32Array(vertices);\n                colors = this._dataColors[i] = new Uint8Array(colors);\n                indices = this._dataIndices[i] = new Uint32Array(indices);\n                this.dataGridBuffer[i] = this.createBuffer();\n                this.dataGridIndexBuffer[i] = this.createBuffer();\n                this.dataColorsBuffer[i] = this.createBuffer();\n            }\n\n            this._updateUniforms();\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.dataGridBuffer[i]);\n            this.enableVertexAttrib([['a_position', 3]]);\n            if (vertices.length > 0) {\n                gl.bufferData(gl.ARRAY_BUFFER, vertices, isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW);\n            }\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.dataColorsBuffer[i]);\n            this.enableVertexAttrib([['a_color', 3, 'UNSIGNED_BYTE'], ['a_opacity', 1, 'UNSIGNED_BYTE']]);\n            if (colors.length > 0) {\n                gl.bufferData(gl.ARRAY_BUFFER, colors, isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW);\n            }\n\n            // Write the indices to the buffer object\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.dataGridIndexBuffer[i]);\n            if (indices.length > 0) {\n                gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, isDynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW);\n                this.paintedGridNum[i] = indices.length;\n            }\n            gl.drawElements(gl.TRIANGLES, this.paintedGridNum[i], gl.UNSIGNED_INT, 0);\n\n        }\n\n        gl.disableVertexAttribArray(gl.getAttribLocation(gl.program, 'a_position'));\n        gl.disableVertexAttribArray(gl.getAttribLocation(gl.program, 'a_color'));\n        gl.disableVertexAttribArray(gl.getAttribLocation(gl.program, 'a_opacity'));\n    }\n\n    _drawDataGrid({ vertices, indices, colors }, c, gridData, symbol, gridInfo) {\n        const map = this.getMap();\n        const cols = Array.isArray(gridData[0]) ? gridData[0] : [gridData[0], gridData[0]],\n            rows = Array.isArray(gridData[1]) ? gridData[1] : [gridData[1], gridData[1]];\n        const altitude = (this.layer.options['altitude'] || 0) + (gridInfo.altitude || 0);\n        let z = 0;\n        if (altitude) {\n            z = this._meterToPoint(map.getCenter(), altitude);\n        }\n\n        let b = c / 3 * 4,\n            a = c / 2;\n\n        const set = p => {\n            vertices[c++] = p;\n        };\n\n        const setIndices = p => {\n            indices[a++] = p;\n        };\n\n        const setColor = p => {\n            colors[b++] = p;\n        };\n\n        let color = symbol['polygonFill'];\n        let opacity = symbol['polygonOpacity'] === undefined ? 1 : symbol['polygonOpacity'];\n        if (!color) {\n            color = '#fff';\n            opacity = 0;\n        }\n\n        const style = Color(color).rgbaArray();\n        style[3] *= opacity * 255;\n\n        let p1, p2, p3, p4;\n        for (let i = cols[0]; i <= cols[1]; i++) {\n            for (let ii = rows[0]; ii <= rows[1]; ii++) {\n                p1 = this._getCellNWPoint(i, ii, gridInfo);\n                p3 = this._getCellNWPoint(i + 1, ii + 1, gridInfo);\n\n                p2 = p1.add(p3.x - p1.x, 0);\n                // p3 = p1.add(w, h);\n                p4 = p1.add(0, p3.y - p1.y);\n                const idx = c / 3;\n                setIndices(idx);\n                setIndices(idx + 1);\n                setIndices(idx + 2);\n                setIndices(idx);\n                setIndices(idx + 2);\n                setIndices(idx + 3);\n                set(p1.x);\n                set(p1.y);\n                set(z);\n                style.forEach(setColor);\n                set(p2.x);\n                set(p2.y);\n                set(z);\n                style.forEach(setColor);\n                set(p3.x);\n                set(p3.y);\n                set(z);\n                style.forEach(setColor);\n                set(p4.x);\n                set(p4.y);\n                set(z);\n                style.forEach(setColor);\n            }\n        }\n\n        return c;\n    }\n\n\n\n    _getCellNWPoint(col, row, gridInfo) {\n        const map = this.getMap();\n        const res = map.getGLRes ? map.getGLRes() : null;\n        const glZoom = map.getGLZoom ? map.getGLZoom() : null;\n        if (gridInfo['unit'] === 'projection') {\n            const p = new maptalks.Point(\n                gridInfo.center.x + col * gridInfo.width,\n                gridInfo.center.y + row * gridInfo.height\n            );\n            if (res !== null) {\n                return map._pointToPointAtRes(p, res);\n            } else {\n                return map._pointToPointAtZoom(p, glZoom);\n            }\n        } else if (gridInfo['unit'] === 'meter') {\n            const center = gridInfo.center;\n            const target = map.locate(center, gridInfo.width * col, -gridInfo.height * row);\n            if (res !== null) {\n                return map.coordToPointAtRes(target, res);\n            } else {\n                return map.coordToPoint(target, glZoom);\n            }\n        } else if (gridInfo['unit'] === 'degree') {\n            const center = gridInfo.center;\n            const target = center.add(col * gridInfo.width, -row * gridInfo.height);\n            if (res !== null) {\n                return map.coordToPointAtRes(target, res);\n            } else {\n                return map.coordToPoint(target, glZoom);\n            }\n        }\n        return null;\n    }\n\n\n\n    _drawAllLabels() {\n        const count = this.layer.getGridCount();\n        for (let i = 0; i < count; i++) {\n            const grid = this.layer.getGrid(i),\n                gridInfo = grid['unit'] === 'projection' ? this._getProjGridToDraw(grid, i) : this._getGridToDraw(grid, i),\n                data = grid['data'];\n            if (!gridInfo || !Array.isArray(data) || !data.length) {\n                continue;\n            }\n            data.forEach((gridData, index) => {\n                this._drawLabel(i, gridData, index, gridInfo);\n            });\n        }\n\n    }\n\n    onRemove() {\n        super.onRemove();\n        // release resources\n        const gl = this.gl;\n        if (!gl) {\n            return;\n        }\n        if (this._buffers) {\n            this._buffers.forEach(function (b) {\n                gl.deleteBuffer(b);\n            });\n            delete this._buffers;\n        }\n        if (this._textures) {\n            this._textures.forEach(t => gl.deleteTexture(t));\n            delete this._textures;\n        }\n        const program = gl.program;\n        gl.deleteProgram(program);\n        gl.deleteShader(program.fragmentShader);\n        gl.deleteShader(program.vertexShader);\n        delete this.paintedGridNum;\n        delete this._dataVertices;\n        delete this._dataColors;\n        delete this._dataIndices;\n    }\n\n    onCanvasCreate() {\n        //create a canvas2 to draw grids with webgl\n        //texts will be still drawn by (this.canvas + this.context)\n        this.canvas2 = maptalks.Canvas.createCanvas(this.canvas.width, this.canvas.height);\n        const gl = this.gl = this._createGLContext(this.canvas2, this.layer.options['glOptions']);\n        gl.getExtension('OES_element_index_uint');\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n        // const map = this.getMap();\n        // gl.viewport(0, 0, map.width, map.height);\n        // gl.disable(gl.DEPTH_TEST);\n        // gl.disable(gl.STENCIL_TEST);\n    }\n\n    resizeCanvas(canvasSize) {\n        if (!this.canvas) {\n            return;\n        }\n        super.resizeCanvas(canvasSize);\n        if (this.canvas2.width !== this.canvas.width || this.canvas2.height !== this.canvas.height) {\n            this.canvas2.width = this.canvas.width;\n            this.canvas2.height = this.canvas.height;\n            this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n        }\n    }\n\n    clearCanvas() {\n        if (!this.canvas) {\n            return;\n        }\n        super.clearCanvas();\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n\n    _drawGlCanvas() {\n        const ctx = this.context;\n        const map = this.getMap();\n        const dpr = map.getDevicePixelRatio ? map.getDevicePixelRatio() : 2;\n        if (maptalks.Browser.retina) {\n            ctx.save();\n            // ctx.translate(map.width / 2 / dpr, map.height / 2 / dpr);\n            ctx.scale(1 / dpr, 1 / dpr);\n        }\n        // draw gl canvas on layer canvas\n        ctx.drawImage(this.canvas2, 0, 0, this.canvas2.width, this.canvas2.height);\n        if (maptalks.Browser.retina) {\n            ctx.restore();\n        }\n    }\n\n    //----------------------- webgl utils unlike to change ---------------------------------\n\n    createBuffer() {\n        const gl = this.gl;\n        // Create the buffer object\n        const buffer = gl.createBuffer();\n        if (!buffer) {\n            throw new Error('Failed to create the buffer object');\n        }\n        if (!this._buffers) {\n            this._buffers = [];\n        }\n        this._buffers.push(buffer);\n        return buffer;\n    }\n\n    /**\n     *\n     * @param {Array} attributes [[name, stride, type], [name, stride, type]...]\n     */\n    enableVertexAttrib(attributes) {\n        const gl = this.gl;\n        if (Array.isArray(attributes[0])) {\n            let STRIDE = 0;\n            for (let i = 0; i < attributes.length; i++) {\n                STRIDE += (attributes[i][1] || 0);\n            }\n            let offset = 0;\n            for (let i = 0; i < attributes.length; i++) {\n                const attr = gl.getAttribLocation(gl.program, attributes[i][0]);\n                if (attr < 0) {\n                    throw new Error('Failed to get the storage location of ' + attributes[i][0]);\n                }\n                let FSIZE;\n                if (!attributes[i][2] || attributes[i][2] === 'FLOAT') {\n                    FSIZE = 4;\n                } else if (attributes[i][2] === 'BYTE' || attributes[i][2] === 'UNSIGNED_BYTE') {\n                    FSIZE = 1;\n                } else {\n                    FSIZE = 2;\n                }\n                gl.enableVertexAttribArray(attr);\n                gl.vertexAttribPointer(attr, attributes[i][1], gl[attributes[i][2] || 'FLOAT'], false, FSIZE * STRIDE, FSIZE * offset);\n                offset += (attributes[i][1] || 0);\n\n            }\n        } else {\n            const attr = gl.getAttribLocation(gl.program, attributes[0]);\n            gl.enableVertexAttribArray(attr);\n            gl.vertexAttribPointer(attr, attributes[1], gl[attributes[2] || 'FLOAT'], false, 0, 0);\n        }\n    }\n\n    /**\n     * Create the linked program object\n     * @param vshader a vertex shader program (string)\n     * @param fshader a fragment shader program (string)\n     * @return created program object, or null if the creation has failed\n     */\n    createProgram(vshader, fshader, uniforms) {\n        const gl = this.gl;\n        // Create shader object\n        const vertexShader = this._compileShader(gl, gl.VERTEX_SHADER, vshader);\n        const fragmentShader = this._compileShader(gl, gl.FRAGMENT_SHADER, fshader);\n        if (!vertexShader || !fragmentShader) {\n            return null;\n        }\n\n        // Create a program object\n        const program = gl.createProgram();\n        if (!program) {\n            return null;\n        }\n\n        // Attach the shader objects\n        gl.attachShader(program, vertexShader);\n        gl.attachShader(program, fragmentShader);\n\n        // Link the program object\n        gl.linkProgram(program);\n        gl.vertexShader = vertexShader;\n        gl.fragmentShader = fragmentShader;\n        // Check the result of linking\n        const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n        if (!linked) {\n            const error = gl.getProgramInfoLog(program);\n            gl.deleteProgram(program);\n            gl.deleteShader(fragmentShader);\n            gl.deleteShader(vertexShader);\n            throw new Error('Failed to link program: ' + error);\n        }\n\n        this._initUniforms(program, uniforms);\n\n        return program;\n    }\n\n    useProgram(program) {\n        const gl = this.gl;\n        gl.useProgram(program);\n        gl.program = program;\n        return this;\n    }\n\n    enableSampler(sampler, texIdx) {\n        const gl = this.gl;\n        const uSampler = this._getUniform(gl.program, sampler);\n        if (!texIdx) {\n            texIdx = 0;\n        }\n        // Set the texture unit to the sampler\n        gl.uniform1i(uSampler, texIdx);\n        return uSampler;\n    }\n\n    _createGLContext(canvas) {\n        const attributes = {\n            'alpha': true,\n            'preserveDrawingBuffer': true\n        };\n        const names = ['webgl', 'experimental-webgl'];\n        let context = null;\n        /* eslint-disable no-empty */\n        for (let i = 0; i < names.length; ++i) {\n            try {\n                context = canvas.getContext(names[i], attributes);\n            } catch (e) {}\n            if (context) {\n                break;\n            }\n        }\n        return context;\n        /* eslint-enable no-empty */\n    }\n\n    /**\n     * Create a shader object\n     * @param gl GL context\n     * @param type the type of the shader object to be created\n     * @param source shader program (string)\n     * @return created shader object, or null if the creation has failed.\n     */\n    _compileShader(gl, type, source) {\n        // Create shader object\n        const shader = gl.createShader(type);\n        if (shader == null) {\n            throw new Error('unable to create shader');\n        }\n\n        // Set the shader program\n        gl.shaderSource(shader, source);\n        // Compile the shader\n        gl.compileShader(shader);\n\n        // Check the result of compilation\n        const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n        if (!compiled) {\n            const error = gl.getShaderInfoLog(shader);\n\n            gl.deleteShader(shader);\n            throw new Error('Failed to compile shader: ' + error);\n        }\n\n        return shader;\n    }\n\n    _initUniforms(program, uniforms) {\n        for (let i = 0; i < uniforms.length; i++) {\n            let name = uniforms[i];\n            let uniform = uniforms[i];\n            const b = name.indexOf('[');\n            if (b >= 0) {\n                name = name.substring(0, b);\n                uniform = uniform.substring(0, b);\n            }\n            program[name] = this._getUniform(program, uniform);\n        }\n    }\n\n    _getUniform(program, uniformName) {\n        const gl = this.gl;\n        const uniform = gl.getUniformLocation(program, uniformName);\n        if (!uniform) {\n            throw new Error('Failed to get the storage location of ' + uniformName);\n        }\n        return uniform;\n    }\n}\n\nGridGLRenderer.include({\n\n    copy16: function () {\n        const m = maptalks.Browser.ie9 ? null : new Float32Array(16);\n        return function (arr) {\n            for (let i = 0; i < 16; i++) {\n                m[i] = arr[i];\n            }\n            return m;\n        };\n    }()\n});\n","import { GridLayer } from './gridlayer';\r\nimport GridCanvasRenderer from './renderer/canvas-renderer';\r\nimport GridGLRenderer from './renderer/gl-renderer';\r\n\r\nGridLayer.registerRenderer('canvas', GridCanvasRenderer);\r\nGridLayer.registerRenderer('gl', GridGLRenderer);\r\n\r\nGridLayer.mergeOptions({\r\n    'renderer' : 'gl'\r\n});\r\n\r\nexport { GridLayer };\r\n"],"names":["getCellPointSize","layer","grid","projection","getGridProjection","map","getMap","gridCenter","Coordinate","center","coordinateToPoint","target","project","_add","width","height","ptarget","_prjToPoint","Math","abs","x","y","defaultSymbol","lineColor","lineWidth","lineOpacity","lineDasharray","lineCap","lineJoin","polygonOpacity","options","symbol","maptalks","Util","extend","debug","GridLayer","Layer","getPainterClass","VectorLayer","constructor","id","grids","super","this","_gridCenters","_grids","Array","isArray","forEach","toArray","slice","getGridCount","length","getGrid","gridIndex","offset","isFunction","setGrid","redraw","setGridData","data","renderer","_getRenderer","isEmpty","clear","fire","toUpperCase","getProjection","getGridExtent","w","h","cols","Infinity","rows","isNil","pcenter","xmin","xmax","ymin","ymax","fullExtent","getFullExtent","Extent","convertTo","c","unproject","sw","locate","ne","add","getCellAt","coordinate","contains","size","p","floor","distX","computeLength","col","distY","row","getCellGeometry","cnw","nw","pointToCoordinate","altitude","z","Rectangle","visitAround","cb","gridData","i","value","ii","iii","push","startCell","sorted","sort","a","b","pow","l","identify","idx","rectangle","geometry","toJSON","type","getId","config","fromJSON","json","mergeOptions","registerJSONType","symbolizers","symbolizer","ImageMarkerSymbolizer","TextMarkerSymbolizer","VectorMarkerSymbolizer","VectorPathMarkerSymbolizer","GridCanvasRenderer","CanvasRenderer","needToRedraw","getPitch","isZooming","draw","prepareCanvas","_setCanvasStyle","_compiledGridStyle","_drawGrid","_drawData","completeRender","drawOnInteracting","checkResources","_compileStyles","_resources","resources","getExternalResources","_compiledSymbols","gridSymbols","concat","reset","setToRedraw","convertResourceUrl","MapboxUtil","loadFunctionTypes","getZoom","gridCount","index","argFn","props","s","_preDrawGrid","count","gridInfos","gridInfo","_getProjGridToDraw","_getGridToDraw","p0","_getCellNW","p1","p2","p3","p4","context","beginPath","moveTo","lineTo","closePath","fillStyle","Canvas","fillCanvas","colRows","colRow","_stroke","extent","_get2DExtent","gridX","gridY","gridExtent","PointExtent","intersection","delta","ceil","unit","getExtent","dx1","dx2","dy1","dy2","round","_getCellNWPoint","targetZ","Point","_pointToPointAtZoom","_pointToPointAtRes","getResolution","coordToPoint","point","_pointToContainerPoint","_getCellCenter","_drawDataGrid","_drawLabel","ctx","mapExtent","getContainerExtent","painted","getWidth","getHeight","intersects","_testSymbol","test","_gridSymbolTests","_dataMarkers","dataMarkers","coordinates","line","_toRedraw","setCoordinates","lineSymbol","LineString","properties","_bindLayer","_getPainter","paint","onRemove","clone","parent","circular","depth","prototype","filter","allParents","allChildren","useBuffer","Buffer","_clone","child","proto","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","copy","Object","getPrototypeOf","create","indexOf","attrs","getOwnPropertyDescriptor","set","__objToStr","o","toString","call","re","flags","global","ignoreCase","multiline","clonePrototype","module","exports","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","reverseKeywords","key","hasOwnProperty","convert","conversionsModule","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","model","Error","defineProperty","r","g","min","max","rdif","gdif","bdif","v","diff","diffc","k","reversed","currentClosestKeyword","currentClosestDistance","distance","t1","t2","t3","val","smin","lmin","hi","f","q","t","sl","vmin","n","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","args","arguments","ansi","color","mult","rem","string","substring","match","colorString","split","char","join","integer","parseInt","hue","chroma","mg","pure","conversions","require$$0","deriveBFS","fromModel","graph","models","keys","len","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","to","wrapConversion","toModel","path","fn","cur","conversion","route","routes","wrappedFn","result","wrapRounded","raw","wrapRaw","colorConvert","colorNames","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","vals","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","undefined","reverseNames","parseFloat","scale","isNaN","num","str","name","require$$1","require$$2","Color","obj","values","setValues","lightness","whiteness","JSON","stringify","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","rgbaArrayNormalized","glRgba","hslaArray","setChannel","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","getValues","space","charAt","capped","spaces","maxes","chans","sname","shaders","vertexShader","fragmentShader","dataGridShaders","GridGLRenderer","_glDrawDataGrid","_drawGlCanvas","_drawAllLabels","paintedGridNum","_dataVertices","_dataColors","_dataIndices","gl","_buffers","buffer","deleteBuffer","gridBuffer","dataGridBuffer","dataGridIndexBuffer","dataColorsBuffer","_meterToPoint","getGLZoom","sign","altitudeToPoint","_meterToGL","getGLRes","res","coordToPointAtRes","_updateUniforms","uniformMatrix4fv","program","projViewMatrix","_useGridProgram","gridProgram","createProgram","useProgram","layerAltitude","getCenter","vertices","Float32Array","createBuffer","uniform1f","uniform4fv","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","enableVertexAttrib","drawArrays","LINES","_useDataGridProgram","dataGridProgram","isDynamic","colors","indices","Uint8Array","Uint32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","drawElements","TRIANGLES","UNSIGNED_INT","disableVertexAttribArray","getAttribLocation","setIndices","setColor","opacity","style","glZoom","_textures","deleteTexture","deleteProgram","deleteShader","onCanvasCreate","canvas2","createCanvas","canvas","_createGLContext","getExtension","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","clearColor","viewport","resizeCanvas","canvasSize","clearCanvas","COLOR_BUFFER_BIT","dpr","getDevicePixelRatio","Browser","retina","save","drawImage","restore","attributes","STRIDE","attr","FSIZE","enableVertexAttribArray","vertexAttribPointer","vshader","fshader","uniforms","_compileShader","VERTEX_SHADER","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","error","getProgramInfoLog","_initUniforms","enableSampler","sampler","texIdx","uSampler","_getUniform","uniform1i","preserveDrawingBuffer","names","getContext","e","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","uniform","uniformName","getUniformLocation","include","copy16","ie9","arr","registerRenderer"],"mappings":";;;;;sjBAEO,SAASA,EAAiBC,EAAOC,GACpC,MAAMC,EAAaF,EAAMG,oBACrBC,EAAMJ,EAAMK,SACZC,EAAa,IAAIC,EAAAA,WAAWN,EAAKO,QACjCA,EAASJ,EAAIK,kBAAkBH,GAC/BI,EAASR,EAAWS,QAAQL,GAAYM,KAAKX,EAAKY,MAAOZ,EAAKa,QAC9DC,EAAUX,EAAIY,YAAYN,GAG9B,MAAO,CAFKO,KAAKC,IAAIH,EAAQI,EAAIX,EAAOW,GAC3BF,KAAKC,IAAIH,EAAQK,EAAIZ,EAAOY,GAE7C,CAGO,MAAMC,EAAgB,CACzBC,UAAc,OACdC,UAAc,EACdC,YAAgB,EAChBC,cAAiB,GACjBC,QAAY,OACZC,SAAa,QACbC,eAAmB,GClBjBC,EAAU,CACZC,OAAWC,EAASC,KAAKC,OAAO,CAAA,EAAIZ,GACpCa,OAAW,GA8BR,MAAMC,UAAkBJ,EAASK,MAEpC,sBAAOC,GACH,OAAON,EAASO,YAAYD,iBACpC,CAEI,WAAAE,CAAYC,EAAIC,EAAOZ,GAEnB,GADAa,MAAMF,EAAIX,IACLY,EAGD,OAFAE,KAAKC,aAAe,QACpBD,KAAKE,OAAS,IAGbC,MAAMC,QAAQN,KACfA,EAAQ,CAACA,IAGbA,EAAMO,SAAQ/C,IACLA,EAAW,OACZA,EAAW,KAAI,cAEfA,EAAKO,OAAOyC,UACZhD,EAAKO,OAASP,EAAKO,OAAOyC,UAC1C,IAEQN,KAAKC,aAAeH,EAAMrC,KAAIH,GAAQA,EAAKO,OAAO0C,MAAM,KACxDP,KAAKE,OAASJ,CACtB,CAEI,YAAAU,GACI,OAAKR,KAAKE,OAGHF,KAAKE,OAAOO,OAFR,CAGnB,CAMI,OAAAC,CAAQC,EAAY,GAChB,MAAMrD,EAAO0C,KAAKE,OAAOS,GACzB,IAAKrD,EACD,OAAO,KAEX,IAAIsD,EAAStD,EAAa,OAQ1B,OAPIsD,IACIxB,EAASC,KAAKwB,WAAWD,KACzBA,EAASA,KAEbtD,EAAKO,OAAO,GAAKmC,KAAKC,aAAaU,GAAW,GAAKC,EAAO,GAC1DtD,EAAKO,OAAO,GAAKmC,KAAKC,aAAaU,GAAW,GAAKC,EAAO,IAEvDtD,CACf,CAEI,OAAAwD,CAAQxD,EAAMqD,EAAY,GAStB,OARKrD,EAAW,OACZA,EAAW,KAAI,cAEfA,EAAKO,OAAOyC,UACZhD,EAAKO,OAASP,EAAKO,OAAOyC,WAE9BN,KAAKC,aAAaU,GAAarD,EAAKO,OAAO0C,MAAM,GACjDP,KAAKE,OAAOS,GAAarD,EAClB0C,KAAKe,QACpB,CAEI,WAAAC,CAAYC,EAAMN,EAAY,GAE1B,OADAX,KAAKE,OAAOS,GAAWM,KAAOA,EACvBjB,KAAKe,QACpB,CAEI,MAAAA,GACI,MAAMG,EAAWlB,KAAKmB,eACtB,OAAKD,GAGLA,EAASH,SACFf,MAHIA,IAInB,CAEI,OAAAoB,CAAQT,EAAY,GAChB,OAAKX,KAAKE,SAAWF,KAAKE,OAAOS,EAIzC,CAEI,KAAAU,GAGI,cAFOrB,KAAKE,OACZF,KAAKsB,KAAK,SACHtB,KAAKe,QACpB,CAEI,iBAAAvD,GACI,OAAIwC,KAAKd,QAAwB,eACtBE,EAAS7B,WAAWyC,KAAKd,QAAwB,eAAEqC,eAEnDvB,KAAKtC,SAAS8D,eAEjC,CAOI,aAAAC,CAAcd,EAAY,GACtB,MAAMrD,EAAO0C,KAAKU,QAAQC,GACtB9C,EAAS,IAAIuB,EAASxB,WAAWN,EAAKO,QACtCJ,EAAMuC,KAAKtC,SACXgE,EAAIpE,EAAKY,MACTyD,EAAIrE,EAAKa,OACTyD,EAAOtE,EAAKsE,MAAQ,EAAEC,IAAUA,KAChCC,EAAOxE,EAAKwE,MAAQ,EAAED,IAAUA,KAKpC,GAJIzC,EAASC,KAAK0C,MAAMH,EAAK,MAAKA,EAAK,IAAMC,KACzCzC,EAASC,KAAK0C,MAAMH,EAAK,MAAKA,EAAK,GAAKC,KACxCzC,EAASC,KAAK0C,MAAMD,EAAK,MAAKA,EAAK,IAAMD,KACzCzC,EAASC,KAAK0C,MAAMD,EAAK,MAAKA,EAAK,GAAKD,KACvB,eAAjBvE,EAAW,KAAoB,CAE/B,MAAMC,EAAayC,KAAKxC,oBACpBwE,EAAUzE,EAAWS,QAAQH,GACjC,IAAIoE,EAAOD,EAAQxD,EAAIoD,EAAK,GAAKF,EAC7BQ,EAAOF,EAAQxD,EAAIoD,EAAK,GAAKF,EAC7BS,EAAOH,EAAQvD,EAAImD,EAAK,GAAKD,EAC7BS,EAAOJ,EAAQvD,EAAImD,EAAK,GAAKD,EACjC,MAAMU,EAAa5E,EAAI6E,gBAavB,OAZIL,KAAUJ,MACVI,EAAOI,EAAiB,KAAI,GAE5BH,IAASL,MACTK,EAAOG,EAAiB,MAExBF,KAAUN,MACVM,EAAOE,EAAiB,MAExBD,IAASP,MACTO,EAAOC,EAAiB,MAErB,IAAIjD,EAASmD,OAAON,EAAME,EAAMD,EAAME,GAAMI,WAAUC,GAAKlF,EAAWmF,UAAUD,IAC1F,CAAM,GAAqB,UAAjBnF,EAAW,KAAe,CAEjC,MAAMqF,EAAKlF,EAAImF,OAAO/E,EAAQ6D,EAAIE,EAAK,IAAKD,EAAIG,EAAK,IACjDe,EAAKpF,EAAImF,OAAO/E,EAAQ6D,EAAIE,EAAK,IAAKD,EAAIG,EAAK,IACnD,OAAO,IAAI1C,EAASmD,OAAOI,EAAIE,EAClC,CAAM,GAAqB,WAAjBvF,EAAW,KAAgB,CAClC,MAAMqF,EAAK9E,EAAOiF,IAAIpB,EAAIE,EAAK,GAAID,EAAIG,EAAK,IACxCe,EAAKhF,EAAOiF,IAAIpB,EAAIE,EAAK,GAAID,EAAIG,EAAK,IAC1C,OAAO,IAAI1C,EAASmD,OAAOI,EAAIE,EAC3C,CACQ,OAAO,IACf,CASI,SAAAE,CAAUC,EAAYrC,EAAY,GAC9B,MAAMrD,EAAO0C,KAAKU,QAAQC,GACtBlD,EAAMuC,KAAKtC,SAEf,IADasC,KAAKyB,cAAcd,GACpBsC,SAASD,GACjB,OAAO,KAEX,MAAMrF,EAAa,IAAIyB,EAASxB,WAAWN,EAAKO,QAChD,GAAqB,eAAjBP,EAAW,KAAoB,CAC/B,MAAMO,EAASJ,EAAIK,kBAAkBH,GACjCuF,EAAO9F,EAAiB4C,KAAM1C,GAC5B6F,EAAI1F,EAAIK,kBAAkBkF,GAGhC,MAAO,CAFG1E,KAAK8E,OAAOD,EAAE3E,EAAIX,EAAOW,GAAK0E,EAAK,IACnC5E,KAAK8E,OAAOD,EAAE1E,EAAIZ,EAAOY,GAAKyE,EAAK,IAEhD,CAAM,GAAqB,UAAjB5F,EAAW,KAAe,CACjC,MAAM+F,EAAQ5F,EAAI6F,cAAc,IAAIlE,EAASxB,WAAWoF,EAAWxE,EAAGb,EAAWc,GAAId,GACjF4F,EAAMjF,KAAK8E,MAAMC,EAAQ/F,EAAKY,OAC5BsF,EAAQ/F,EAAI6F,cAAc,IAAIlE,EAASxB,WAAWD,EAAWa,EAAGwE,EAAWvE,GAAId,GACjF8F,EAAMnF,KAAK8E,MAAMI,EAAQlG,EAAKa,QAGlC,MAAO,CAACoF,GAFGP,EAAWxE,EAAIb,EAAWa,EAAI,GAAM,GAE7BiF,GADPT,EAAWvE,EAAId,EAAWc,GAAI,EAAK,GAEjD,CAAM,GAAqB,WAAjBnB,EAAW,KAAgB,CAClC,MAAM+F,EAAQL,EAAWxE,EAAIb,EAAWa,EACpC+E,EAAMjF,KAAK8E,MAAMC,EAAQ/F,EAAKY,OAC5BsF,EAAQR,EAAWvE,EAAId,EAAWc,EAExC,MAAO,CAAC8E,EADEjF,KAAK8E,MAAMI,EAAQlG,EAAKa,QAE9C,CACQ,OAAO,IACf,CASI,eAAAuF,CAAgBH,EAAKE,EAAK9C,EAAY,GAClC,MAAMlD,EAAMuC,KAAKtC,SACbJ,EAAO0C,KAAKU,QAAQC,GAClBhD,EAAa,IAAIyB,EAASxB,WAAWN,EAAKO,QAChD,GAAqB,eAAjBP,EAAW,KAAoB,CAC/B,MAAMO,EAASJ,EAAIK,kBAAkBH,GACjCuF,EAAO9F,EAAiB4C,KAAM1C,GAC9BY,EAAQgF,EAAK,GACb/E,EAAS+E,EAAK,GACZS,EAAM9F,EAAOiF,IAAI5E,EAAQqF,EAAKpF,EAASsF,GACvCG,EAAKnG,EAAIoG,kBAAkBF,GAC7Bd,EAAKpF,EAAIoG,kBAAkBF,EAAIb,IAAI5E,EAAO,IAC1CyE,EAAKlF,EAAIoG,kBAAkBF,EAAIb,IAAI,EAAG3E,IACpCuD,EAAIjE,EAAI6F,cAAcM,EAAIf,GAC5BlB,EAAIlE,EAAI6F,cAAcM,EAAIjB,GAI9B,OAHIrF,EAAKwG,WACLF,EAAGG,EAAIzG,EAAKwG,UAET,IAAI1E,EAAS4E,UAAUJ,EAAIlC,EAAGC,EACxC,CAAM,GAAqB,UAAjBrE,EAAW,KAAe,CACjC,MAAMY,MAAEA,EAAKC,OAAEA,GAAWb,EACpBsG,EAAKnG,EAAImF,OAAOjF,EAAY4F,EAAMrF,GAAQuF,EAAMtF,GAItD,OAHIb,EAAKwG,WACLF,EAAGG,EAAIzG,EAAKwG,UAET,IAAI1E,EAAS4E,UAAUJ,EAAI1F,EAAOC,EAC5C,CAAM,GAAqB,WAAjBb,EAAW,KAAgB,CAClC,MAAMY,MAAEA,EAAKC,OAAEA,GAAWb,EACpBsG,EAAKjG,EAAWmF,IAAIS,EAAMrF,GAAQuF,EAAMtF,GACxC0E,EAAKe,EAAGd,IAAI5E,EAAO,GACnByE,EAAKiB,EAAGd,IAAI,GAAI3E,GAChBuD,EAAIjE,EAAI6F,cAAcM,EAAIf,GAC5BlB,EAAIlE,EAAI6F,cAAcM,EAAIjB,GAI9B,OAHIrF,EAAKwG,WACLF,EAAGG,EAAIzG,EAAKwG,UAET,IAAI1E,EAAS4E,UAAUJ,EAAIlC,EAAGC,EACjD,CACQ,OAAO,IACf,CAQI,WAAAsC,CAAYjB,EAAYkB,EAAIvD,EAAY,GACpC,MAAMrD,EAAO0C,KAAKU,QAAQC,GACtBwD,EAAW7G,EAAK2D,KACpB,IAAK+B,IAAe1F,EAAK2D,OAASiD,EAC9B,OAEJ,MAAMjD,EAAO,GACb,IAAK,IAAImD,EAAI,EAAGA,EAAID,EAAS1D,OAAQ2D,IAAK,CACtC,IAAIxC,EAAOuC,EAASC,GAAG,GACnBtC,EAAOqC,EAASC,GAAG,GACvB,MAAMC,EAAQF,EAASC,GAAG,GACrBjE,MAAMC,QAAQwB,KACfA,EAAO,CAACA,EAAMA,IAEbzB,MAAMC,QAAQ0B,KACfA,EAAO,CAACA,EAAMA,IAElB,IAAK,IAAIwC,EAAK1C,EAAK,GAAI0C,GAAM1C,EAAK,GAAI0C,IAClC,IAAK,IAAIC,EAAMzC,EAAK,GAAIyC,GAAOzC,EAAK,GAAIyC,IACpCtD,EAAKuD,KAAK,CAACF,EAAIC,EAAKF,GAGxC,CACQ,IAAKpD,EAAKR,OACN,OAGJ,MAAMgE,EAAYzE,KAAK+C,UAAUC,EAAYrC,GAC7C,IAAK8D,EACD,OAGJ,MAAMC,EAASzD,EAAK0D,MAAK,CAACC,EAAGC,IAClBvG,KAAKwG,IAAKF,EAAE,GAAKH,EAAU,GAAK,GAAKnG,KAAKwG,IAAKF,EAAE,GAAKH,EAAU,GAAK,GAAKnG,KAAKwG,IAAKD,EAAE,GAAKJ,EAAU,GAAK,GAAKnG,KAAKwG,IAAKD,EAAE,GAAKJ,EAAU,GAAK,KAG1J,IAAK,IAAIL,EAAI,EAAGW,EAAIL,EAAOjE,OAAQ2D,EAAIW,IACb,IAAlBb,EAAGQ,EAAON,IADwBA,KAKlD,CAQI,QAAAY,CAAShC,EAAYrC,EAAY,GAC7B,IAAKqC,EACD,OAAO,KAGX,IADehD,KAAKyB,cAAcd,GACtBsC,SAASD,GACjB,OAAO,KAEX,MAAMiC,EAAMjF,KAAK+C,UAAUC,EAAYrC,GACjCuE,EAAYlF,KAAK0D,gBAAgBuB,EAAI,GAAIA,EAAI,GAAItE,GACvD,MAAO,CACH4C,IAAM0B,EAAI,GACVxB,IAAMwB,EAAI,GACVE,SAAWD,EAEvB,CAMI,MAAAE,GACI,MAAM9H,EAAO0C,KAAKE,OAClB,MAAO,CACHmF,KAAc,YACdxF,GAAcG,KAAKsF,QACnBpG,QAAcc,KAAKuF,SACnBjI,KAAcA,EAE1B,CAUI,eAAOkI,CAASC,GACZ,OAAKA,GAAyB,cAAjBA,EAAW,KACjB,IAAIjG,EAAUiG,EAAS,GAAGA,EAAW,KAAGA,EAAc,SADT,IAE5D,EAGAjG,EAAUkG,aAAaxG,GAEvBM,EAAUmG,iBAAiB,aC1X3B,MAAMC,EAAc,CAChBxG,EAASyG,WAAWC,sBACpB1G,EAASyG,WAAWE,qBACpB3G,EAASyG,WAAWG,uBACpB5G,EAASyG,WAAWI,4BAGT,MAAMC,UAA2B9G,EAAS8B,SAASiF,eAE9D,YAAAC,GACI,MAAM3I,EAAMuC,KAAKtC,SACjB,SAAKD,EAAI4I,YAAc5I,EAAI6I,cAGpBvG,MAAMqG,cACrB,CAEI,IAAAG,GACiBvG,KAAK3C,MAAMqD,QAAQ,IAKhCV,KAAKwG,gBACLxG,KAAKyG,gBAAgBzG,KAAK0G,oBAC1B1G,KAAK2G,YACL3G,KAAK4G,YACL5G,KAAK6G,kBAPD7G,KAAK6G,gBAQjB,CAEI,iBAAAC,GACI9G,KAAKuG,MACb,CAEI,cAAAQ,GAEI,GADA/G,KAAKgH,iBACDhH,KAAKiH,WACL,OAAO,KAEX,IAAIC,EAAY,GAIhB,GAHIlH,KAAK0G,qBACLQ,EAAY9H,EAASC,KAAK8H,qBAAqBnH,KAAK0G,qBAEpD1G,KAAKoH,iBACL,IAAK,IAAIhD,EAAI,EAAGA,EAAIpE,KAAKoH,iBAAiB3G,OAAQ2D,IAAK,CACnD,MAAMiD,EAAcrH,KAAKoH,iBAAiBhD,GAC1C,IAAK,IAAIE,EAAK,EAAGA,EAAK+C,EAAY5G,OAAQ6D,IAAM,CAC5C,MAAM7B,EAAIrD,EAASC,KAAK8H,qBAAqBE,EAAY/C,IACrD7B,IACAyE,EAAYA,EAAUI,OAAO7E,GAErD,CACA,CAEQ,OAAOyE,CACf,CAEI,MAAAnG,GACIf,KAAKuH,QACLvH,KAAKwH,aACb,CAEI,KAAAD,UACWvH,KAAKoH,gBACpB,CAEI,cAAAJ,GACI,IAAKhH,KAAK0G,mBAAoB,CAC1B,MAAMvH,EAASC,EAASC,KAAKoI,mBAAmBzH,KAAK3C,MAAM6B,QAAgB,QAC3Ec,KAAK0G,mBAAqBtH,EAASsI,WAAWC,kBAAkBxI,GAAQ,IAC7D,CAACa,KAAKtC,SAAWsC,KAAKtC,SAASkK,UAAY,KAAM,OAExE,CACQ,IAAK5H,KAAKoH,iBAAkB,CACxB,MAAM3J,EAAMuC,KAAKtC,SACbmK,EAAY7H,KAAK3C,MAAMmD,eAC3BR,KAAKoH,iBAAmB,GACxB,IAAK,IAAIhD,EAAI,EAAGA,EAAIyD,EAAWzD,IAAK,CAChC,MACInD,EADSjB,KAAK3C,MAAMqD,QAAQ0D,GACV,KACtBpE,KAAKoH,iBAAiBhD,GAAK,GACvBnD,GACAA,EAAKZ,SAAQ,CAAC8D,EAAU2D,KACpB,IAAK3D,EAAS,GAAW,OACrB,OAEJ,MAAM4D,GAAmBC,EAItB7D,EAAS,GAAe,WAHhB,WACH,MAAO,CAAC1G,EAAImK,UAAWI,EAC1B,GAHS,IAAWA,EAKzB,MAAMC,EAAI7I,EAASC,KAAKoI,mBAAmBtD,EAAS,GAAW,QAC/DnE,KAAKoH,iBAAiBhD,GAAG0D,GAAS1I,EAASsI,WAAWC,kBAAkBM,EAAGF,EAAM,GAGzG,CAEA,CACA,CAEI,YAAAG,GACI,MAAMzK,EAAMuC,KAAKtC,SACXyK,EAAQnI,KAAK3C,MAAMmD,eACnB4H,EAAY,GAClB,IAAK,IAAIhE,EAAI,EAAGA,EAAI+D,EAAO/D,IAAK,CAC5B,MAAM9G,EAAO0C,KAAK3C,MAAMqD,QAAQ0D,GAC5BiE,EAA4B,eAAjB/K,EAAW,KAAqB0C,KAAKsI,mBAAmBhL,EAAM8G,GAAKpE,KAAKuI,eAAejL,EAAM8G,GAC5G,IAAKiE,GAAYrI,KAAK0G,mBAAmB7H,aAAe,GAAKmB,KAAK0G,mBAAmB9H,WAAa,EAAG,CACjGwJ,EAAU5D,KAAK,MACf,QAChB,CACY,MAAM5C,EAAOyG,EAASzG,KAClBE,EAAOuG,EAASvG,KACd0G,EAAKxI,KAAKyI,WAAW7G,EAAK,GAAIE,EAAK,GAAIuG,GAC7C,GAAuB,IAAnB5K,EAAI4I,WAAkB,CACtB,MAAMqC,EAAK1I,KAAKyI,WAAW7G,EAAK,GAAK,EAAGE,EAAK,GAAK,EAAGuG,GAC/CnK,EAAQI,KAAKC,IAAIiK,EAAGhK,EAAIkK,EAAGlK,GAC3BL,EAASG,KAAKC,IAAIiK,EAAG/J,EAAIiK,EAAGjK,GAClC,GAAIP,EAAQ,IAAOC,EAAS,IAAQ6B,KAAK0G,mBAAmC,eAAI,GAAK1G,KAAK0G,mBAAiC,cAAK1G,KAAK0G,mBAAuC,mBAAI,CAC5K,MAAMiC,EAAK3I,KAAKyI,WAAW7G,EAAK,GAAK,EAAGE,EAAK,GAAIuG,GAC3CO,EAAK5I,KAAKyI,WAAW7G,EAAK,GAAK,EAAGE,EAAK,GAAK,EAAGuG,GAC/CQ,EAAK7I,KAAKyI,WAAW7G,EAAK,GAAIE,EAAK,GAAK,EAAGuG,GAejD,GAdArI,KAAK8I,QAAQC,YAEb/I,KAAK8I,QAAQE,OAAOR,EAAGhK,EAAGgK,EAAG/J,GAC7BuB,KAAK8I,QAAQG,OAAON,EAAGnK,EAAGmK,EAAGlK,GAC7BuB,KAAK8I,QAAQG,OAAOL,EAAGpK,EAAGoK,EAAGnK,GAC7BuB,KAAK8I,QAAQG,OAAOJ,EAAGrK,EAAGqK,EAAGpK,GAC7BuB,KAAK8I,QAAQI,YAEblJ,KAAK8I,QAAQK,UAAYnJ,KAAK0G,mBAAmB/H,UAC7CqB,KAAK0G,mBAAmC,eAAI,EAC5CtH,EAASgK,OAAOC,WAAWrJ,KAAK8I,QAAS9I,KAAK0G,mBAAmC,eAAG8B,EAAGhK,EAAGgK,EAAG/J,GAE7FW,EAASgK,OAAOC,WAAWrJ,KAAK8I,QAAS,EAAGN,EAAGhK,EAAGgK,EAAG/J,GAErDP,EAAQ,IAAOC,EAAS,GAAK,CAC7BiK,EAAU5D,KAAK,MACf,QACxB,CACA,CACA,CACY4D,EAAU5D,KAAK,CACX5C,KAAOA,EACPE,KAAOA,EACPgC,SAAWxG,EAAKwG,UAAY,EAC5BuE,SAAWA,EACXG,GAAKA,GAErB,CACQ,OAAOJ,CACf,CAEI,SAAAzB,GACI,MAAM2C,EAAUtJ,KAAKkI,eACrB,IAAK,IAAI9D,EAAI,EAAGA,EAAIkF,EAAQ7I,OAAQ2D,IAAK,CACrC,MAAMmF,EAASD,EAAQlF,GACvB,IAAKmF,EACD,SAEJvJ,KAAK8I,QAAQC,YACb,MAAMnH,EAAO2H,EAAa,KACtBzH,EAAOyH,EAAa,KACpBlB,EAAWkB,EAAiB,SAC5Bf,EAAKe,EAAW,GACpB,IAAIb,EAAIC,EACR,IAAK,IAAIvE,EAAIxC,EAAK,GAAIwC,GAAKxC,EAAK,GAAIwC,IAChCsE,EAAK1I,KAAKyI,WAAWrE,EAAGtC,EAAK,GAAIuG,GACjCM,EAAK3I,KAAKyI,WAAWrE,EAAGtC,EAAK,GAAIuG,GACjCrI,KAAK8I,QAAQE,OAAON,EAAGlK,EAAGkK,EAAGjK,GAC7BuB,KAAK8I,QAAQG,OAAON,EAAGnK,EAAGmK,EAAGlK,GAEjC,IAAK,IAAI2F,EAAItC,EAAK,GAAIsC,GAAKtC,EAAK,GAAIsC,IAChCsE,EAAK1I,KAAKyI,WAAW7G,EAAK,GAAIwC,EAAGiE,GACjCM,EAAK3I,KAAKyI,WAAW7G,EAAK,GAAIwC,EAAGiE,GACjCrI,KAAK8I,QAAQE,OAAON,EAAGlK,EAAGkK,EAAGjK,GAC7BuB,KAAK8I,QAAQG,OAAON,EAAGnK,EAAGmK,EAAGlK,GAEjCW,EAASgK,OAAOI,QAAQxJ,KAAK8I,QAAS9I,KAAK0G,mBAAgC,YAAG8B,EAAGhK,EAAGgK,EAAG/J,EACnG,CAEA,CAEI,kBAAA6J,CAAmBhL,GACf,MAAMG,EAAMuC,KAAKtC,SAEb+L,EAAShM,EAAIiM,eACbC,EAAQrM,EAAKsE,MAAQ,EAAEC,IAAUA,KACjC+H,EAAQtM,EAAKwE,MAAQ,EAAED,IAAUA,KACjClE,EAAa,IAAIyB,EAASxB,WAAWN,EAAKO,QAC1CA,EAASJ,EAAIK,kBAAkBH,GAC/BuF,EAAO9F,EAAiB4C,KAAK3C,MAAOC,GACpCY,EAAQgF,EAAK,GACb/E,EAAS+E,EAAK,GACd9D,EAASC,KAAK0C,MAAM4H,EAAM,MAAKA,EAAM,IAAM9H,KAC3CzC,EAASC,KAAK0C,MAAM4H,EAAM,MAAKA,EAAM,GAAK9H,KAC1CzC,EAASC,KAAK0C,MAAM6H,EAAM,MAAKA,EAAM,IAAM/H,KAC3CzC,EAASC,KAAK0C,MAAM6H,EAAM,MAAKA,EAAM,GAAK/H,KAC9C,MAAMgI,EAAa,IAAIzK,EAAS0K,YAC5BjM,EAAOW,EAAImL,EAAM,GAAKzL,EACtBL,EAAOY,EAAImL,EAAM,GAAKzL,EACtBN,EAAOW,EAAImL,EAAM,GAAKzL,EACtBL,EAAOY,EAAImL,EAAM,GAAKzL,GAEpB4L,EAAeN,EAAOM,aAAaF,GACzC,IAAKE,EACD,OAAO,KAEX,MAAMC,EAAQ,KASd,MAAO,CACHpI,KATS,EACRtD,KAAK2L,MAAMpM,EAAOW,EAAIuL,EAAa9H,KAAO+H,GAAS9L,GACpDI,KAAK2L,MAAMF,EAAa7H,KAAOrE,EAAOW,EAAIwL,GAAS9L,IAQnD4D,KANS,EACRxD,KAAK2L,MAAMpM,EAAOY,EAAIsL,EAAa5H,KAAO6H,GAAS7L,GACpDG,KAAK2L,MAAMF,EAAa3H,KAAOvE,EAAOY,EAAIuL,GAAS7L,IAKnD2F,SAAUxG,EAAKwG,UAAY,EAC3B5F,MAAQA,EACRC,OAASA,EACTN,OAASA,EACTqM,KAAO5M,EAAK4M,KAExB,CAEI,cAAA3B,CAAejL,EAAMwK,GACjB,MAAMrK,EAAMuC,KAAKtC,SAEb+L,EAAShM,EAAI0M,YACbxM,EAAa,IAAIyB,EAASxB,WAAWN,EAAKO,QAC1CgM,EAAa7J,KAAK3C,MAAMoE,cAAcqG,GACtCpG,EAAIpE,EAAKY,MACTyD,EAAIrE,EAAKa,OAEP4L,EAAeN,EAAOM,aAAaF,GACzC,IAAKE,EACD,OAAO,KAEX,MAAMC,EAAQ,KACd,IAAIpI,EAAME,EACV,GAAqB,UAAjBxE,EAAW,KAAe,CAC1B,MAAM8M,EAAM3M,EAAI6F,cAAc,IAAIlE,EAASxB,WAAWmM,EAAa9H,KAAMtE,EAAWc,GAAId,GACpF0M,EAAM5M,EAAI6F,cAAc,IAAIlE,EAASxB,WAAWmM,EAAa7H,KAAMvE,EAAWc,GAAId,GAEhF2M,EAAM7M,EAAI6F,cAAc,IAAIlE,EAASxB,WAAWD,EAAWa,EAAGuL,EAAa3H,MAAOzE,GACpF4M,EAAM9M,EAAI6F,cAAc,IAAIlE,EAASxB,WAAWD,EAAWa,EAAGuL,EAAa5H,MAAOxE,GACtFiE,EAAO,EACFtD,KAAKkM,MAAMJ,EAAM9M,EAAKY,OACvBI,KAAKkM,MAAMH,EAAM/M,EAAKY,QAE1B4D,EAAO,EACFxD,KAAKkM,MAAMF,EAAMhN,EAAKa,QACvBG,KAAKkM,MAAMD,EAAMjN,EAAKa,QAE7B,KAA2B,WAAjBb,EAAW,OAClBsE,EAAO,EACFtD,KAAK2L,MAAMtM,EAAWa,EAAIuL,EAAa9H,KAAO+H,GAAStI,GACxDpD,KAAK2L,MAAMF,EAAa7H,KAAOvE,EAAWa,EAAIwL,GAAStI,IAE3DI,EAAO,EACFxD,KAAK2L,MAAMF,EAAa3H,KAAOzE,EAAWc,EAAIuL,GAASrI,GACxDrD,KAAK2L,MAAMtM,EAAWc,EAAIsL,EAAa5H,KAAO6H,GAASrI,KAI/D,MAAO,CACHC,KAAOA,EACPE,KAAOA,EACPjE,OAASF,EACTmG,SAAUxG,EAAKwG,UAAY,EAC3BoG,KAAO5M,EAAK4M,KACZhM,MAAQZ,EAAKY,MACbC,OAASb,EAAKa,OAE1B,CAEI,eAAAsM,CAAgBlH,EAAKE,EAAK4E,EAAUqC,GAChC,MAAMjN,EAAMuC,KAAKtC,SACjB,GAAyB,eAArB2K,EAAe,KAAoB,CACnC,MAAMlF,EAAI,IAAI/D,EAASuL,MACnBtC,EAASxK,OAAOW,EAAI+E,EAAM8E,EAASnK,MACnCmK,EAASxK,OAAOY,EAAIgF,EAAM4E,EAASlK,QAEvC,OAAIV,EAAImN,oBACGnN,EAAImN,oBAAoBzH,EAAGuH,GAE3BjN,EAAIoN,mBAAmB1H,EAAG1F,EAAIqN,cAAcJ,GAE1D,CAAM,GAAyB,UAArBrC,EAAe,KAAe,CACrC,MAAMxK,EAASwK,EAASxK,OAClBE,EAASN,EAAImF,OAAO/E,EAAQwK,EAASnK,MAAQqF,GAAM8E,EAASlK,OAASsF,GAC3E,OAAOhG,EAAIsN,aAAahN,EAAQ2M,EACnC,CAAM,GAAyB,WAArBrC,EAAe,KAAgB,CACtC,MACMtK,EADSsK,EAASxK,OACFiF,IAAIS,EAAM8E,EAASnK,OAAQuF,EAAM4E,EAASlK,QAChE,OAAOV,EAAIsN,aAAahN,EAAQ2M,EAC5C,CACQ,OAAO,IACf,CAEI,UAAAjC,CAAWlF,EAAKE,EAAK4E,GACjB,MAAM2C,EAAQhL,KAAKyK,gBAAgBlH,EAAKE,EAAK4E,GAC7C,OAAOrI,KAAKtC,SAASuN,uBAAuBD,EACpD,CAEI,cAAAE,CAAe3H,EAAKE,EAAK4E,GACrB,MAAM5K,EAAMuC,KAAKtC,SACjB,GAAyB,eAArB2K,EAAe,KAAoB,CACnC,MAAMlF,EAAI,IAAI/D,EAASuL,MACnBtC,EAASxK,OAAOW,GAAK+E,EAAM,IAAS8E,EAASnK,MAC7CmK,EAASxK,OAAOY,GAAKgF,EAAM,IAAS4E,EAASlK,QAEjD,OAAOV,EAAIoG,kBAAkBV,EAChC,CAAM,GAAyB,UAArBkF,EAAe,KAAe,CACrC,MAAMxK,EAASwK,EAASxK,OACxB,OAAOJ,EAAImF,OAAO/E,EAAQwK,EAASnK,OAASqF,EAAM,KAAS8E,EAASlK,QAAUsF,EAAM,IACvF,CAAM,GAAyB,WAArB4E,EAAe,KAAgB,CAEtC,OADeA,EAASxK,OACViF,IAAIuF,EAASnK,OAASqF,EAAM,KAAS8E,EAASlK,QAAUsF,EAAM,IACxF,CACQ,OAAO,IACf,CAEI,SAAAmD,GACI,MAAMuB,EAAQnI,KAAK3C,MAAMmD,eACzB,IAAK,IAAI4D,EAAI,EAAGA,EAAI+D,EAAO/D,IAAK,CAC5B,MAAM9G,EAAO0C,KAAK3C,MAAMqD,QAAQ0D,GAC5BiE,EAA4B,eAAjB/K,EAAW,KAAqB0C,KAAKsI,mBAAmBhL,EAAM8G,GAAKpE,KAAKuI,eAAejL,EAAM8G,GACxGnD,EAAO3D,EAAW,KACtB,IAAK6C,MAAMC,QAAQa,KAAUA,EAAKR,OAC9B,OAEJQ,EAAKZ,SAAQ,CAAC8D,EAAU2D,KACf3D,EAAS,GAAW,QAAMkE,IAG/BrI,KAAKmL,cAAchH,EAAUnE,KAAKoH,iBAAiBhD,GAAG0D,GAAQO,GAC9DrI,KAAKoL,WAAWhH,EAAGD,EAAU2D,EAAOO,GAAS,GAE7D,CAEA,CAEI,aAAA8C,CAAchH,EAAUhF,EAAQkJ,GAC5B,MAAMgD,EAAMrL,KAAK8I,QAEbwC,EADMtL,KAAKtC,SACK6N,qBACpB,IAAIC,GAAU,EACd,MAAM5J,EAAOzB,MAAMC,QAAQ+D,EAAS,IAAMA,EAAS,GAAK,CAACA,EAAS,GAAIA,EAAS,IAC3ErC,EAAO3B,MAAMC,QAAQ+D,EAAS,IAAMA,EAAS,GAAK,CAACA,EAAS,GAAIA,EAAS,IACzEqE,EAAKxI,KAAKyI,WAAW7G,EAAK,GAAIE,EAAK,GAAIuG,GAC3C,IAAIK,EAAIC,EAAIC,EAAIC,EAAIgB,EACpB,IAAK,IAAIzF,EAAIxC,EAAK,GAAIwC,GAAKxC,EAAK,GAAIwC,IAChC,IAAK,IAAIE,EAAKxC,EAAK,GAAIwC,GAAMxC,EAAK,GAAIwC,IAClCoE,EAAK1I,KAAKyI,WAAWrE,EAAGE,EAAI+D,GAC5BM,EAAK3I,KAAKyI,WAAWrE,EAAI,EAAGE,EAAI+D,GAChCO,EAAK5I,KAAKyI,WAAWrE,EAAI,EAAGE,EAAK,EAAG+D,GACpCQ,EAAK7I,KAAKyI,WAAWrE,EAAGE,EAAK,EAAG+D,GAChCwB,EAAa,IAAIzK,EAAS0K,YAAYpB,EAAGlK,EAAGkK,EAAGjK,EAAGmK,EAAGpK,EAAGoK,EAAGnK,GAEvDoL,EAAW4B,WAAa,KAAO5B,EAAW6B,YAAc,MAAQJ,EAAUK,WAAW9B,KAGpF2B,IACDA,GAAU,EACVxL,KAAKyG,gBAAgBtH,GACrBkM,EAAItC,aAERsC,EAAIrC,OAAON,EAAGlK,EAAGkK,EAAGjK,GACpB4M,EAAIpC,OAAON,EAAGnK,EAAGmK,EAAGlK,GACpB4M,EAAIpC,OAAOL,EAAGpK,EAAGoK,EAAGnK,GACpB4M,EAAIpC,OAAOJ,EAAGrK,EAAGqK,EAAGpK,GACpB4M,EAAInC,aAGRsC,IACApM,EAASgK,OAAOC,WAAWgC,EAAKlM,EAAuB,eAAGqJ,EAAGhK,EAAGgK,EAAG/J,GACnEW,EAASgK,OAAOI,QAAQ6B,EAAKlM,EAAoB,aAE7D,CAEI,WAAAyM,CAAYzM,GACR,IAAK,IAAIiF,EAAIwB,EAAYnF,OAAS,EAAG2D,GAAK,EAAGA,IACzC,GAAIwB,EAAYxB,GAAGyH,KAAK1M,GACpB,OAAO,EAGf,OAAO,CACf,CAEI,UAAAiM,CAAWzK,EAAWwD,EAAU2D,EAAOO,GAUnC,GATKrI,KAAK8L,mBACN9L,KAAK8L,iBAAmB,CAAE,GAEzB9L,KAAK8L,iBAAiBnL,KACvBX,KAAK8L,iBAAiBnL,GAAa,IAEnCvB,EAASC,KAAK0C,MAAM/B,KAAK8L,iBAAiBnL,GAAWmH,MACrD9H,KAAK8L,iBAAiBnL,GAAWmH,GAAS9H,KAAK4L,YAAYzH,EAAS,GAAW,UAE9EnE,KAAK8L,iBAAiBnL,GAAWmH,GAClC,OAEJ,MAAM3I,EAASgF,EAAS,GAAW,OAE/BsF,EADQzJ,KAAKtC,SACAyM,YACZnK,KAAK+L,eACN/L,KAAK+L,aAAe,CAAE,GAE1B,IAAIC,EAAchM,KAAK+L,aAAapL,GAC/BqL,IACDhM,KAAK+L,aAAapL,GAAaqL,EAAc,IAEjD,MAAMC,EAAc,GACpB,GAAK9L,MAAMC,QAAQ+D,EAAS,KAAQhE,MAAMC,QAAQ+D,EAAS,IAKpD,CACH,MAAMvC,EAAOzB,MAAMC,QAAQ+D,EAAS,IAAMA,EAAS,GAAK,CAACA,EAAS,GAAIA,EAAS,IAC3ErC,EAAO3B,MAAMC,QAAQ+D,EAAS,IAAMA,EAAS,GAAK,CAACA,EAAS,GAAIA,EAAS,IAC7E,IAAK,IAAIC,EAAIxC,EAAK,GAAIwC,GAAKxC,EAAK,GAAIwC,IAChC,IAAK,IAAIE,EAAKxC,EAAK,GAAIwC,GAAMxC,EAAK,GAAIwC,IAAM,CACxC,MAAMnB,EAAInD,KAAKkL,eAAe9G,EAAGE,EAAI+D,GACjCoB,EAAOxG,SAASE,IAChB8I,EAAYzH,KAAKrB,EAEzC,CAEA,KAhBwE,CAC5D,MAAMA,EAAInD,KAAKkL,eAAe/G,EAAS,GAAIA,EAAS,GAAIkE,GACpDoB,EAAOxG,SAASE,IAChB8I,EAAYzH,KAAKrB,EAEjC,CAaQ,GAA2B,IAAvB8I,EAAYxL,OACZ,OAEJ,IAAIyL,EAAOF,EAAYlE,GACvB,MAAMhE,EAAWuE,EAASvE,UAAY9D,KAAK3C,MAAM6B,QAAkB,UAAK,GACxE,GAAI4E,EACA,IAAK,IAAIM,EAAI,EAAGA,EAAI6H,EAAYxL,OAAQ2D,IACpC6H,EAAY7H,GAAGL,EAAID,EAG3B,GAAKoI,EAaE,CACH,MAAMnL,EAASf,KAAKmM,UACpBD,EAAKE,eAAeH,GACpBjM,KAAKmM,UAAYpL,CAC7B,KAjBmB,CACP,MAAMsL,EAAajN,EAASC,KAAKC,OAAO,CAAA,EAAIH,GAC5CkN,EAA4B,gBAAI,QAChCA,EAA0B,cAAI,QAC9BA,EAAwB,YAAI,EAC5BA,EAA2B,eAAI,EAC/BH,EAAO,IAAI9M,EAASkN,WAAWL,EAAa,CACxC9M,OAAWkN,EACXE,WAAepI,EAAS,GAAe,WACvC5E,MAAUS,KAAK3C,MAAM6B,QAAe,QAExCgN,EAAKM,WAAWxM,KAAK3C,OACrB2O,EAAYlE,GAASoE,CACjC,CAKQA,EAAKO,cAAcC,OAC3B,CAEI,eAAAjG,CAAgBtH,GACZ,MAAM8I,EAAI7I,EAASC,KAAKC,OAAO,CAAE,EAAEZ,EAAeS,GAClDC,EAASgK,OAAO5C,cAAcxG,KAAK8I,QAASb,EAAGjI,KAAKiH,WAC5D,CAEI,QAAA0F,UACW3M,KAAK0G,0BACL1G,KAAKoH,wBACLpH,KAAK8L,wBACL9L,KAAK+L,YACpB,sIC/dA,IAAIa,EAAQ,WAqBZ,SAASA,EAAMC,EAAQC,EAAUC,EAAOC,GAEd,iBAAbF,IACTC,EAAQD,EAASC,MACjBC,EAAYF,EAASE,UACZF,EAASG,OAClBH,EAAWA,EAASA,UAItB,IAAII,EAAa,GACbC,EAAc,GAEdC,EAA6B,oBAAVC,OA4EvB,YA1EuB,IAAZP,IACTA,GAAW,QAEO,IAATC,IACTA,EAAQlL,KAGV,SAASyL,EAAOT,EAAQE,GAEtB,GAAe,OAAXF,EACF,OAAO,KAET,GAAa,GAATE,EACF,OAAOF,EAET,IAAIU,EACAC,EACJ,GAAqB,iBAAVX,EACT,OAAOA,EAGT,GAAID,EAAMa,UAAUZ,GAClBU,EAAQ,QACH,GAAIX,EAAMc,WAAWb,GAC1BU,EAAQ,IAAII,OAAOd,EAAOe,OAAQC,EAAiBhB,IAC/CA,EAAOiB,YAAWP,EAAMO,UAAYjB,EAAOiB,gBAC1C,GAAIlB,EAAMmB,SAASlB,GACxBU,EAAQ,IAAIS,KAAKnB,EAAOoB,eACnB,IAAIb,GAAaC,OAAOa,SAASrB,GAStC,OANEU,EAFEF,OAAOc,YAEDd,OAAOc,YAAYtB,EAAOpM,QAG1B,IAAI4M,OAAOR,EAAOpM,QAE5BoM,EAAOuB,KAAKb,GACLA,OAEiB,IAAbP,GACTQ,EAAQa,OAAOC,eAAezB,GAC9BU,EAAQc,OAAOE,OAAOf,KAGtBD,EAAQc,OAAOE,OAAOvB,GACtBQ,EAAQR,EAEhB,CAEI,GAAIF,EAAU,CACZ,IAAIhF,EAAQoF,EAAWsB,QAAQ3B,GAE/B,IAAa,GAAT/E,EACF,OAAOqF,EAAYrF,GAErBoF,EAAW1I,KAAKqI,GAChBM,EAAY3I,KAAK+I,EACvB,CAEI,IAAK,IAAInJ,KAAKyI,EAAQ,CACpB,IAAI4B,EACAjB,IACFiB,EAAQJ,OAAOK,yBAAyBlB,EAAOpJ,IAG7CqK,GAAsB,MAAbA,EAAME,MAGnBpB,EAAMnJ,GAAKkJ,EAAOT,EAAOzI,GAAI2I,EAAQ,GAC3C,CAEI,OAAOQ,CACX,CAESD,CAAOT,EAAQE,EACxB,CAoBA,SAAS6B,EAAWC,GAClB,OAAOR,OAAOrB,UAAU8B,SAASC,KAAKF,GAmBxC,SAAShB,EAAiBmB,GACxB,IAAIC,EAAQ,GAIZ,OAHID,EAAGE,SAAQD,GAAS,KACpBD,EAAGG,aAAYF,GAAS,KACxBD,EAAGI,YAAWH,GAAS,KACpBA,EAIT,OAxCArC,EAAMyC,eAAiB,SAAwBxC,GAC7C,GAAe,OAAXA,EACF,OAAO,KAET,IAAIpK,EAAI,WAAc,EAEtB,OADAA,EAAEuK,UAAYH,EACP,IAAIpK,CACZ,EAODmK,EAAMgC,WAAaA,EAKnBhC,EAAMmB,SAHN,SAAkBc,GAChB,MAAoB,iBAANA,GAAoC,kBAAlBD,EAAWC,IAO7CjC,EAAMa,UAHN,SAAmBoB,GACjB,MAAoB,iBAANA,GAAoC,mBAAlBD,EAAWC,IAO7CjC,EAAMc,WAHN,SAAoBmB,GAClB,MAAoB,iBAANA,GAAoC,oBAAlBD,EAAWC,IAW7CjC,EAAMiB,iBAAmBA,EAElBjB,CACN,CAjKW,GAmKsB0C,EAAOC,UACvCD,UAAiB1C,sCCnKf4C,ECCa,CAChBC,UAAa,CAAC,IAAK,IAAK,KACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,KAAQ,CAAC,EAAG,IAAK,KACjBC,WAAc,CAAC,IAAK,IAAK,KACzBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,EAAG,EAAG,GAChBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,KAAQ,CAAC,EAAG,EAAG,KACfC,WAAc,CAAC,IAAK,GAAI,KACxBC,MAAS,CAAC,IAAK,GAAI,IACnBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,WAAc,CAAC,IAAK,IAAK,GACzBC,UAAa,CAAC,IAAK,IAAK,IACxBC,MAAS,CAAC,IAAK,IAAK,IACpBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,GAAI,IACrBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,SAAY,CAAC,EAAG,EAAG,KACnBC,SAAY,CAAC,EAAG,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,IAC5BC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,EAAG,IAAK,GACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,EAAG,KACxBC,eAAkB,CAAC,GAAI,IAAK,IAC5BC,WAAc,CAAC,IAAK,IAAK,GACzBC,WAAc,CAAC,IAAK,GAAI,KACxBC,QAAW,CAAC,IAAK,EAAG,GACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,cAAiB,CAAC,GAAI,GAAI,KAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,EAAG,IAAK,KAC1BC,WAAc,CAAC,IAAK,EAAG,KACvBC,SAAY,CAAC,IAAK,GAAI,KACtBC,YAAe,CAAC,EAAG,IAAK,KACxBC,QAAW,CAAC,IAAK,IAAK,KACtBC,QAAW,CAAC,IAAK,IAAK,KACtBC,WAAc,CAAC,GAAI,IAAK,KACxBC,UAAa,CAAC,IAAK,GAAI,IACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,YAAe,CAAC,GAAI,IAAK,IACzBC,QAAW,CAAC,IAAK,EAAG,KACpBC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,KAAQ,CAAC,IAAK,IAAK,GACnBC,UAAa,CAAC,IAAK,IAAK,IACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,MAAS,CAAC,EAAG,IAAK,GAClBC,YAAe,CAAC,IAAK,IAAK,IAC1BC,KAAQ,CAAC,IAAK,IAAK,KACnBC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,IACvBC,OAAU,CAAC,GAAI,EAAG,KAClBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,SAAY,CAAC,IAAK,IAAK,KACvBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,GACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,qBAAwB,CAAC,IAAK,IAAK,KACnCC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,cAAiB,CAAC,GAAI,IAAK,KAC3BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,IAAK,GACjBC,UAAa,CAAC,GAAI,IAAK,IACvBC,MAAS,CAAC,IAAK,IAAK,KACpBC,QAAW,CAAC,IAAK,EAAG,KACpBC,OAAU,CAAC,IAAK,EAAG,GACnBC,iBAAoB,CAAC,IAAK,IAAK,KAC/BC,WAAc,CAAC,EAAG,EAAG,KACrBC,aAAgB,CAAC,IAAK,GAAI,KAC1BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,GAAI,IAAK,KAC5BC,gBAAmB,CAAC,IAAK,IAAK,KAC9BC,kBAAqB,CAAC,EAAG,IAAK,KAC9BC,gBAAmB,CAAC,GAAI,IAAK,KAC7BC,gBAAmB,CAAC,IAAK,GAAI,KAC7BC,aAAgB,CAAC,GAAI,GAAI,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,SAAY,CAAC,IAAK,IAAK,KACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,EAAG,KACfC,QAAW,CAAC,IAAK,IAAK,KACtBC,MAAS,CAAC,IAAK,IAAK,GACpBC,UAAa,CAAC,IAAK,IAAK,IACxBC,OAAU,CAAC,IAAK,IAAK,GACrBC,UAAa,CAAC,IAAK,GAAI,GACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,KACxBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,IACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,EAAG,KACnBC,cAAiB,CAAC,IAAK,GAAI,KAC3BC,IAAO,CAAC,IAAK,EAAG,GAChBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,YAAe,CAAC,IAAK,GAAI,IACzBC,OAAU,CAAC,IAAK,IAAK,KACrBC,WAAc,CAAC,IAAK,IAAK,IACzBC,SAAY,CAAC,GAAI,IAAK,IACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,OAAU,CAAC,IAAK,GAAI,IACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,YAAe,CAAC,EAAG,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,IAAO,CAAC,IAAK,IAAK,KAClBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,QAAW,CAAC,IAAK,IAAK,KACtBC,OAAU,CAAC,IAAK,GAAI,IACpBC,UAAa,CAAC,GAAI,IAAK,KACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,IAAK,GACrBC,YAAe,CAAC,IAAK,IAAK,KD/IvBC,EAAkB,CAAE,EACxB,IAAK,IAAIC,KAAOtJ,EACXA,EAAYuJ,eAAeD,KAC9BD,EAAgBrJ,EAAYsJ,IAAQA,GAItC,IAAIE,EAAUC,EAAA1J,QAAiB,CAC9B2J,IAAK,CAACC,SAAU,EAAGC,OAAQ,OAC3BC,IAAK,CAACF,SAAU,EAAGC,OAAQ,OAC3BE,IAAK,CAACH,SAAU,EAAGC,OAAQ,OAC3BG,IAAK,CAACJ,SAAU,EAAGC,OAAQ,OAC3BI,KAAM,CAACL,SAAU,EAAGC,OAAQ,QAC5BK,IAAK,CAACN,SAAU,EAAGC,OAAQ,OAC3BM,IAAK,CAACP,SAAU,EAAGC,OAAQ,OAC3BO,IAAK,CAACR,SAAU,EAAGC,OAAQ,OAC3BQ,IAAK,CAACT,SAAU,EAAGC,OAAQ,CAAC,QAC5BS,QAAS,CAACV,SAAU,EAAGC,OAAQ,CAAC,YAChCU,OAAQ,CAACX,SAAU,EAAGC,OAAQ,CAAC,WAC/BW,QAAS,CAACZ,SAAU,EAAGC,OAAQ,CAAC,YAChCY,IAAK,CAACb,SAAU,EAAGC,OAAQ,CAAC,IAAK,IAAK,MACtCa,MAAO,CAACd,SAAU,EAAGC,OAAQ,CAAC,MAAO,MAAO,QAC5CtG,KAAM,CAACqG,SAAU,EAAGC,OAAQ,CAAC,UAI9B,IAAK,IAAIc,KAASlB,EACjB,GAAIA,EAAQD,eAAemB,GAAQ,CAClC,KAAM,aAAclB,EAAQkB,IAC3B,MAAM,IAAIC,MAAM,8BAAgCD,GAGjD,KAAM,WAAYlB,EAAQkB,IACzB,MAAM,IAAIC,MAAM,oCAAsCD,GAGvD,GAAIlB,EAAQkB,GAAOd,OAAO3Y,SAAWuY,EAAQkB,GAAOf,SACnD,MAAM,IAAIgB,MAAM,sCAAwCD,GAGzD,IAAIf,EAAWH,EAAQkB,GAAOf,SAC1BC,EAASJ,EAAQkB,GAAOd,cACrBJ,EAAQkB,GAAOf,gBACfH,EAAQkB,GAAOd,OACtB/K,OAAO+L,eAAepB,EAAQkB,GAAQ,WAAY,CAAC7V,MAAO8U,IAC1D9K,OAAO+L,eAAepB,EAAQkB,GAAQ,SAAU,CAAC7V,MAAO+U,GAC1D,CAGAJ,EAAQE,IAAIG,IAAM,SAAUH,GAC3B,IAMIvX,EAEAoD,EARAsV,EAAInB,EAAI,GAAK,IACboB,EAAIpB,EAAI,GAAK,IACbrU,EAAIqU,EAAI,GAAK,IACbqB,EAAMjc,KAAKic,IAAIF,EAAGC,EAAGzV,GACrB2V,EAAMlc,KAAKkc,IAAIH,EAAGC,EAAGzV,GACrBmF,EAAQwQ,EAAMD,EA+BlB,OA1BIC,IAAQD,EACX5Y,EAAI,EACM0Y,IAAMG,EAChB7Y,GAAK2Y,EAAIzV,GAAKmF,EACJsQ,IAAME,EAChB7Y,EAAI,GAAKkD,EAAIwV,GAAKrQ,EACRnF,IAAM2V,IAChB7Y,EAAI,GAAK0Y,EAAIC,GAAKtQ,IAGnBrI,EAAIrD,KAAKic,IAAQ,GAAJ5Y,EAAQ,MAEb,IACPA,GAAK,KAGNoD,GAAKwV,EAAMC,GAAO,EAUX,CAAC7Y,EAAO,KARX6Y,IAAQD,EACP,EACMxV,GAAK,GACXiF,GAASwQ,EAAMD,GAEfvQ,GAAS,EAAIwQ,EAAMD,IAGA,IAAJxV,EACrB,EAEAiU,EAAQE,IAAII,IAAM,SAAUJ,GAC3B,IAAIuB,EACAC,EACAC,EACAhZ,EACAsG,EAEAoS,EAAInB,EAAI,GAAK,IACboB,EAAIpB,EAAI,GAAK,IACbrU,EAAIqU,EAAI,GAAK,IACb0B,EAAItc,KAAKkc,IAAIH,EAAGC,EAAGzV,GACnBgW,EAAOD,EAAItc,KAAKic,IAAIF,EAAGC,EAAGzV,GAC1BiW,EAAQ,SAAUrY,GACrB,OAAQmY,EAAInY,GAAK,EAAIoY,EAAO,EAC5B,EAwBD,OAtBa,IAATA,EACHlZ,EAAIsG,EAAI,GAERA,EAAI4S,EAAOD,EACXH,EAAOK,EAAMT,GACbK,EAAOI,EAAMR,GACbK,EAAOG,EAAMjW,GAETwV,IAAMO,EACTjZ,EAAIgZ,EAAOD,EACDJ,IAAMM,EAChBjZ,EAAK,EAAI,EAAK8Y,EAAOE,EACX9V,IAAM+V,IAChBjZ,EAAK,EAAI,EAAK+Y,EAAOD,GAElB9Y,EAAI,EACPA,GAAK,EACKA,EAAI,IACdA,GAAK,IAIA,CACF,IAAJA,EACI,IAAJsG,EACI,IAAJ2S,EAEF,EAEA5B,EAAQE,IAAIK,IAAM,SAAUL,GAC3B,IAAImB,EAAInB,EAAI,GACRoB,EAAIpB,EAAI,GACRrU,EAAIqU,EAAI,GAMZ,MAAO,CALCF,EAAQE,IAAIG,IAAIH,GAAK,GAKd,KAJP,EAAI,IAAM5a,KAAKic,IAAIF,EAAG/b,KAAKic,IAAID,EAAGzV,KAIlB,KAFxBA,EAAI,EAAI,EAAI,IAAMvG,KAAKkc,IAAIH,EAAG/b,KAAKkc,IAAIF,EAAGzV,KAG3C,EAEAmU,EAAQE,IAAIM,KAAO,SAAUN,GAC5B,IAMI6B,EANAV,EAAInB,EAAI,GAAK,IACboB,EAAIpB,EAAI,GAAK,IACbrU,EAAIqU,EAAI,GAAK,IAWjB,MAAO,CAAK,MAJP,EAAImB,GADTU,EAAIzc,KAAKic,IAAI,EAAIF,EAAG,EAAIC,EAAG,EAAIzV,MACZ,EAAIkW,IAAM,GAIR,MAHhB,EAAIT,EAAIS,IAAM,EAAIA,IAAM,GAGC,MAFzB,EAAIlW,EAAIkW,IAAM,EAAIA,IAAM,GAEU,IAAJA,EACpC,EAaA/B,EAAQE,IAAIW,QAAU,SAAUX,GAC/B,IAAI8B,EAAWnC,EAAgBK,GAC/B,GAAI8B,EACH,OAAOA,EAGR,IACIC,EAfwBzc,EAAGC,EAc3Byc,EAAyBrZ,IAG7B,IAAK,IAAIgY,KAAWrK,EACnB,GAAIA,EAAYuJ,eAAec,GAAU,CACxC,IAAIxV,EAAQmL,EAAYqK,GAGpBsB,GAtBsB3c,EAsBS0a,EAtBNza,EAsBW4F,EApBzC/F,KAAKwG,IAAItG,EAAE,GAAKC,EAAE,GAAI,GACtBH,KAAKwG,IAAItG,EAAE,GAAKC,EAAE,GAAI,GACtBH,KAAKwG,IAAItG,EAAE,GAAKC,EAAE,GAAI,IAqBjB0c,EAAWD,IACdA,EAAyBC,EACzBF,EAAwBpB,EAE5B,CAGC,OAAOoB,CACR,EAEAjC,EAAQa,QAAQX,IAAM,SAAUW,GAC/B,OAAOrK,EAAYqK,EACpB,EAEAb,EAAQE,IAAIO,IAAM,SAAUP,GAC3B,IAAImB,EAAInB,EAAI,GAAK,IACboB,EAAIpB,EAAI,GAAK,IACbrU,EAAIqU,EAAI,GAAK,IAWjB,MAAO,CAAK,KAJC,OAJbmB,EAAIA,EAAI,OAAU/b,KAAKwG,KAAMuV,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAIlC,OAH5BC,EAAIA,EAAI,OAAUhc,KAAKwG,KAAMwV,EAAI,MAAS,MAAQ,KAAQA,EAAI,OAGnB,OAF3CzV,EAAIA,EAAI,OAAUvG,KAAKwG,KAAMD,EAAI,MAAS,MAAQ,KAAQA,EAAI,QAMzC,KAHR,MAAJwV,EAAmB,MAAJC,EAAmB,MAAJzV,GAGT,KAFjB,MAAJwV,EAAmB,MAAJC,EAAmB,MAAJzV,GAGxC,EAEAmU,EAAQE,IAAIQ,IAAM,SAAUR,GAC3B,IAAIO,EAAMT,EAAQE,IAAIO,IAAIP,GACtB1a,EAAIib,EAAI,GACRhb,EAAIgb,EAAI,GACR1V,EAAI0V,EAAI,GAiBZ,OAXAhb,GAAK,IACLsF,GAAK,QAELvF,GAJAA,GAAK,QAIG,QAAWF,KAAKwG,IAAItG,EAAG,EAAI,GAAM,MAAQA,EAAM,GAAK,IAQrD,CAJF,KAHLC,EAAIA,EAAI,QAAWH,KAAKwG,IAAIrG,EAAG,EAAI,GAAM,MAAQA,EAAM,GAAK,KAG5C,GACZ,KAAOD,EAAIC,GACX,KAAOA,GAJXsF,EAAIA,EAAI,QAAWzF,KAAKwG,IAAIf,EAAG,EAAI,GAAM,MAAQA,EAAM,GAAK,MAO7D,EAEAiV,EAAQK,IAAIH,IAAM,SAAUG,GAC3B,IAGI+B,EACAC,EACAC,EACApC,EACAqC,EAPA5Z,EAAI0X,EAAI,GAAK,IACbpR,EAAIoR,EAAI,GAAK,IACbtU,EAAIsU,EAAI,GAAK,IAOjB,GAAU,IAANpR,EAEH,MAAO,CADPsT,EAAU,IAAJxW,EACOwW,EAAKA,GASnBH,EAAK,EAAIrW,GALRsW,EADGtW,EAAI,GACFA,GAAK,EAAIkD,GAETlD,EAAIkD,EAAIlD,EAAIkD,GAKlBiR,EAAM,CAAC,EAAG,EAAG,GACb,IAAK,IAAI9U,EAAI,EAAGA,EAAI,EAAGA,KACtBkX,EAAK3Z,EAAI,EAAI,IAAMyC,EAAI,IACd,GACRkX,IAEGA,EAAK,GACRA,IAIAC,EADG,EAAID,EAAK,EACNF,EAAiB,GAAXC,EAAKD,GAAUE,EACjB,EAAIA,EAAK,EACbD,EACI,EAAIC,EAAK,EACbF,GAAMC,EAAKD,IAAO,EAAI,EAAIE,GAAM,EAEhCF,EAGPlC,EAAI9U,GAAW,IAANmX,EAGV,OAAOrC,CACR,EAEAF,EAAQK,IAAIC,IAAM,SAAUD,GAC3B,IAAI1X,EAAI0X,EAAI,GACRpR,EAAIoR,EAAI,GAAK,IACbtU,EAAIsU,EAAI,GAAK,IACbmC,EAAOvT,EACPwT,EAAOnd,KAAKkc,IAAIzV,EAAG,KAUvB,OALAkD,IADAlD,GAAK,IACM,EAAKA,EAAI,EAAIA,EACxByW,GAAQC,GAAQ,EAAIA,EAAO,EAAIA,EAIxB,CAAC9Z,EAAQ,KAFL,IAANoD,EAAW,EAAIyW,GAASC,EAAOD,GAAS,EAAIvT,GAAMlD,EAAIkD,IAElC,MAHpBlD,EAAIkD,GAAK,GAIf,EAEA+Q,EAAQM,IAAIJ,IAAM,SAAUI,GAC3B,IAAI3X,EAAI2X,EAAI,GAAK,GACbrR,EAAIqR,EAAI,GAAK,IACbsB,EAAItB,EAAI,GAAK,IACboC,EAAKpd,KAAK8E,MAAMzB,GAAK,EAErBga,EAAIha,EAAIrD,KAAK8E,MAAMzB,GACnBwB,EAAI,IAAMyX,GAAK,EAAI3S,GACnB2T,EAAI,IAAMhB,GAAK,EAAK3S,EAAI0T,GACxBE,EAAI,IAAMjB,GAAK,EAAK3S,GAAK,EAAI0T,IAGjC,OAFAf,GAAK,IAEGc,GACP,KAAK,EACJ,MAAO,CAACd,EAAGiB,EAAG1Y,GACf,KAAK,EACJ,MAAO,CAACyY,EAAGhB,EAAGzX,GACf,KAAK,EACJ,MAAO,CAACA,EAAGyX,EAAGiB,GACf,KAAK,EACJ,MAAO,CAAC1Y,EAAGyY,EAAGhB,GACf,KAAK,EACJ,MAAO,CAACiB,EAAG1Y,EAAGyX,GACf,KAAK,EACJ,MAAO,CAACA,EAAGzX,EAAGyY,GAEjB,EAEA5C,EAAQM,IAAID,IAAM,SAAUC,GAC3B,IAIImC,EACAK,EACA/W,EANApD,EAAI2X,EAAI,GACRrR,EAAIqR,EAAI,GAAK,IACbsB,EAAItB,EAAI,GAAK,IACbyC,EAAOzd,KAAKkc,IAAII,EAAG,KAYvB,OAPA7V,GAAK,EAAIkD,GAAK2S,EAEdkB,EAAK7T,EAAI8T,EAKF,CAACpa,EAAQ,KAHhBma,GADAA,IAFAL,GAAQ,EAAIxT,GAAK8T,IAEF,EAAKN,EAAO,EAAIA,IACpB,GAGc,KAFzB1W,GAAK,GAGN,EAGAiU,EAAQO,IAAIL,IAAM,SAAUK,GAC3B,IAIInV,EACAwW,EACAe,EACAK,EAkBA3B,EACAC,EACAzV,EA3BAlD,EAAI4X,EAAI,GAAK,IACb0C,EAAK1C,EAAI,GAAK,IACd2C,EAAK3C,EAAI,GAAK,IACd4C,EAAQF,EAAKC,EAyBjB,OAlBIC,EAAQ,IACXF,GAAME,EACND,GAAMC,GAKPR,EAAI,EAAIha,GAFRyC,EAAI9F,KAAK8E,MAAM,EAAIzB,IAIV,EAAJyC,IACJuX,EAAI,EAAIA,GAGTK,EAAIC,EAAKN,IAPTf,EAAI,EAAIsB,GAOUD,GAKV7X,GACP,QACA,KAAK,EACL,KAAK,EAAGiW,EAAIO,EAAGN,EAAI0B,EAAGnX,EAAIoX,EAAI,MAC9B,KAAK,EAAG5B,EAAI2B,EAAG1B,EAAIM,EAAG/V,EAAIoX,EAAI,MAC9B,KAAK,EAAG5B,EAAI4B,EAAI3B,EAAIM,EAAG/V,EAAImX,EAAG,MAC9B,KAAK,EAAG3B,EAAI4B,EAAI3B,EAAI0B,EAAGnX,EAAI+V,EAAG,MAC9B,KAAK,EAAGP,EAAI2B,EAAG1B,EAAI2B,EAAIpX,EAAI+V,EAAG,MAC9B,KAAK,EAAGP,EAAIO,EAAGN,EAAI2B,EAAIpX,EAAImX,EAG5B,MAAO,CAAK,IAAJ3B,EAAa,IAAJC,EAAa,IAAJzV,EAC3B,EAEAmU,EAAQQ,KAAKN,IAAM,SAAUM,GAC5B,IAAI/W,EAAI+W,EAAK,GAAK,IACd4C,EAAI5C,EAAK,GAAK,IACd/a,EAAI+a,EAAK,GAAK,IACduB,EAAIvB,EAAK,GAAK,IASlB,MAAO,CAAK,KAJR,EAAIlb,KAAKic,IAAI,EAAG9X,GAAK,EAAIsY,GAAKA,IAIb,KAHjB,EAAIzc,KAAKic,IAAI,EAAG6B,GAAK,EAAIrB,GAAKA,IAGJ,KAF1B,EAAIzc,KAAKic,IAAI,EAAG9b,GAAK,EAAIsc,GAAKA,IAGnC,EAEA/B,EAAQS,IAAIP,IAAM,SAAUO,GAC3B,IAGIY,EACAC,EACAzV,EALArG,EAAIib,EAAI,GAAK,IACbhb,EAAIgb,EAAI,GAAK,IACb1V,EAAI0V,EAAI,GAAK,IA0BjB,OApBAa,GAAgB,MAAX9b,EAAoB,OAAJC,EAAmB,MAAJsF,EACpCc,EAAS,MAAJrG,QAAeC,EAAoB,MAAJsF,EAGpCsW,GALAA,EAAS,OAAJ7b,UAAeC,SAAgBsF,GAK5B,SACH,MAAQzF,KAAKwG,IAAIuV,EAAG,EAAM,KAAQ,KAChC,MAAJA,EAEHC,EAAIA,EAAI,SACH,MAAQhc,KAAKwG,IAAIwV,EAAG,EAAM,KAAQ,KAChC,MAAJA,EAEHzV,EAAIA,EAAI,SACH,MAAQvG,KAAKwG,IAAID,EAAG,EAAM,KAAQ,KAChC,MAAJA,EAMI,CAAK,KAJZwV,EAAI/b,KAAKic,IAAIjc,KAAKkc,IAAI,EAAGH,GAAI,IAIR,KAHrBC,EAAIhc,KAAKic,IAAIjc,KAAKkc,IAAI,EAAGF,GAAI,IAGC,KAF9BzV,EAAIvG,KAAKic,IAAIjc,KAAKkc,IAAI,EAAG3V,GAAI,IAG9B,EAEAmU,EAAQS,IAAIC,IAAM,SAAUD,GAC3B,IAAIjb,EAAIib,EAAI,GACRhb,EAAIgb,EAAI,GACR1V,EAAI0V,EAAI,GAiBZ,OAXAhb,GAAK,IACLsF,GAAK,QAELvF,GAJAA,GAAK,QAIG,QAAWF,KAAKwG,IAAItG,EAAG,EAAI,GAAM,MAAQA,EAAM,GAAK,IAQrD,CAJF,KAHLC,EAAIA,EAAI,QAAWH,KAAKwG,IAAIrG,EAAG,EAAI,GAAM,MAAQA,EAAM,GAAK,KAG5C,GACZ,KAAOD,EAAIC,GACX,KAAOA,GAJXsF,EAAIA,EAAI,QAAWzF,KAAKwG,IAAIf,EAAG,EAAI,GAAM,MAAQA,EAAM,GAAK,MAO7D,EAEAiV,EAAQU,IAAID,IAAM,SAAUC,GAC3B,IAGIlb,EACAC,EACAsF,EALAgB,EAAI2U,EAAI,GAQZlb,EAPQkb,EAAI,GAOJ,KADRjb,GAAKsG,EAAI,IAAM,KAEfhB,EAAItF,EAPIib,EAAI,GAOA,IAEZ,IAAI2C,EAAK/d,KAAKwG,IAAIrG,EAAG,GACjB6d,EAAKhe,KAAKwG,IAAItG,EAAG,GACjB+d,EAAKje,KAAKwG,IAAIf,EAAG,GASrB,OARAtF,EAAI4d,EAAK,QAAWA,GAAM5d,EAAI,GAAK,KAAO,MAC1CD,EAAI8d,EAAK,QAAWA,GAAM9d,EAAI,GAAK,KAAO,MAC1CuF,EAAIwY,EAAK,QAAWA,GAAMxY,EAAI,GAAK,KAAO,MAMnC,CAJPvF,GAAK,OACLC,GAAK,IACLsF,GAAK,QAGN,EAEAiV,EAAQU,IAAIC,IAAM,SAAUD,GAC3B,IAII/X,EAJAoD,EAAI2U,EAAI,GACR9U,EAAI8U,EAAI,GACR7U,EAAI6U,EAAI,GAcZ,OARA/X,EAAS,IADJrD,KAAKke,MAAM3X,EAAGD,GACJ,EAAItG,KAAKme,IAEhB,IACP9a,GAAK,KAKC,CAACoD,EAFJzG,KAAKoe,KAAK9X,EAAIA,EAAIC,EAAIA,GAEZlD,EACf,EAEAqX,EAAQW,IAAID,IAAM,SAAUC,GAC3B,IAKIgD,EALA5X,EAAI4U,EAAI,GACRlX,EAAIkX,EAAI,GAUZ,OAJAgD,EALQhD,EAAI,GAKH,IAAM,EAAIrb,KAAKme,GAIjB,CAAC1X,EAHJtC,EAAInE,KAAKse,IAAID,GACbla,EAAInE,KAAKue,IAAIF,GAGlB,EAEA3D,EAAQE,IAAIY,OAAS,SAAUgD,GAC9B,IAAIzC,EAAIyC,EAAK,GACTxC,EAAIwC,EAAK,GACTjY,EAAIiY,EAAK,GACTzY,EAAQ,KAAK0Y,UAAYA,UAAU,GAAK/D,EAAQE,IAAII,IAAIwD,GAAM,GAIlE,GAAc,KAFdzY,EAAQ/F,KAAKkM,MAAMnG,EAAQ,KAG1B,OAAO,GAGR,IAAI2Y,EAAO,IACN1e,KAAKkM,MAAM3F,EAAI,MAAQ,EACxBvG,KAAKkM,MAAM8P,EAAI,MAAQ,EACxBhc,KAAKkM,MAAM6P,EAAI,MAMlB,OAJc,IAAVhW,IACH2Y,GAAQ,IAGFA,CACR,EAEAhE,EAAQM,IAAIQ,OAAS,SAAUgD,GAG9B,OAAO9D,EAAQE,IAAIY,OAAOd,EAAQM,IAAIJ,IAAI4D,GAAOA,EAAK,GACvD,EAEA9D,EAAQE,IAAIa,QAAU,SAAU+C,GAC/B,IAAIzC,EAAIyC,EAAK,GACTxC,EAAIwC,EAAK,GACTjY,EAAIiY,EAAK,GAIb,OAAIzC,IAAMC,GAAKA,IAAMzV,EAChBwV,EAAI,EACA,GAGJA,EAAI,IACA,IAGD/b,KAAKkM,OAAQ6P,EAAI,GAAK,IAAO,IAAM,IAGhC,GACP,GAAK/b,KAAKkM,MAAM6P,EAAI,IAAM,GAC1B,EAAI/b,KAAKkM,MAAM8P,EAAI,IAAM,GAC1Bhc,KAAKkM,MAAM3F,EAAI,IAAM,EAGzB,EAEAmU,EAAQc,OAAOZ,IAAM,SAAU4D,GAC9B,IAAIG,EAAQH,EAAO,GAGnB,GAAc,IAAVG,GAAyB,IAAVA,EAOlB,OANIH,EAAO,KACVG,GAAS,KAKH,CAFPA,EAAQA,EAAQ,KAAO,IAERA,EAAOA,GAGvB,IAAIC,EAA6B,IAAL,KAAbJ,EAAO,KAKtB,MAAO,EAJW,EAARG,GAAaC,EAAQ,KACpBD,GAAS,EAAK,GAAKC,EAAQ,KAC3BD,GAAS,EAAK,GAAKC,EAAQ,IAGvC,EAEAlE,EAAQe,QAAQb,IAAM,SAAU4D,GAE/B,GAAIA,GAAQ,IAAK,CAChB,IAAIra,EAAmB,IAAdqa,EAAO,KAAY,EAC5B,MAAO,CAACra,EAAGA,EAAGA,EAChB,CAIC,IAAI0a,EAKJ,OAPAL,GAAQ,GAOD,CAJCxe,KAAK8E,MAAM0Z,EAAO,IAAM,EAAI,IAC5Bxe,KAAK8E,OAAO+Z,EAAML,EAAO,IAAM,GAAK,EAAI,IACvCK,EAAM,EAAK,EAAI,IAGzB,EAEAnE,EAAQE,IAAIU,IAAM,SAAUkD,GAC3B,IAIIM,KAJkC,IAAtB9e,KAAKkM,MAAMsS,EAAK,MAAe,MACpB,IAAtBxe,KAAKkM,MAAMsS,EAAK,MAAe,IACV,IAAtBxe,KAAKkM,MAAMsS,EAAK,MAEChO,SAAS,IAAIvN,cAClC,MAAO,SAAS8b,UAAUD,EAAO3c,QAAU2c,CAC5C,EAEApE,EAAQY,IAAIV,IAAM,SAAU4D,GAC3B,IAAIQ,EAAQR,EAAKhO,SAAS,IAAIwO,MAAM,4BACpC,IAAKA,EACJ,MAAO,CAAC,EAAG,EAAG,GAGf,IAAIC,EAAcD,EAAM,GAEA,IAApBA,EAAM,GAAG7c,SACZ8c,EAAcA,EAAYC,MAAM,IAAI/f,KAAI,SAAUggB,GACjD,OAAOA,EAAOA,CACjB,IAAKC,KAAK,KAGT,IAAIC,EAAUC,SAASL,EAAa,IAKpC,MAAO,CAJEI,GAAW,GAAM,IACjBA,GAAW,EAAK,IACP,IAAVA,EAGT,EAEA3E,EAAQE,IAAIc,IAAM,SAAUd,GAC3B,IAOI2E,EAPAxD,EAAInB,EAAI,GAAK,IACboB,EAAIpB,EAAI,GAAK,IACbrU,EAAIqU,EAAI,GAAK,IACbsB,EAAMlc,KAAKkc,IAAIlc,KAAKkc,IAAIH,EAAGC,GAAIzV,GAC/B0V,EAAMjc,KAAKic,IAAIjc,KAAKic,IAAIF,EAAGC,GAAIzV,GAC/BiZ,EAAUtD,EAAMD,EAyBpB,OAdCsD,EADGC,GAAU,EACP,EAEHtD,IAAQH,GACHC,EAAIzV,GAAKiZ,EAAU,EAExBtD,IAAQF,EACL,GAAKzV,EAAIwV,GAAKyD,EAEd,GAAKzD,EAAIC,GAAKwD,EAAS,EAG9BD,GAAO,EAGA,CAAO,KAFdA,GAAO,GAEqB,IAATC,EAA0B,KArBzCA,EAAS,EACAvD,GAAO,EAAIuD,GAEX,GAmBd,EAEA9E,EAAQK,IAAIW,IAAM,SAAUX,GAC3B,IAAIpR,EAAIoR,EAAI,GAAK,IACbtU,EAAIsU,EAAI,GAAK,IACb5W,EAAI,EACJkZ,EAAI,EAYR,OATClZ,EADGsC,EAAI,GACH,EAAMkD,EAAIlD,EAEV,EAAMkD,GAAK,EAAMlD,IAGd,IACP4W,GAAK5W,EAAI,GAAMtC,IAAM,EAAMA,IAGrB,CAAC4W,EAAI,GAAQ,IAAJ5W,EAAa,IAAJkZ,EAC1B,EAEA3C,EAAQM,IAAIU,IAAM,SAAUV,GAC3B,IAAIrR,EAAIqR,EAAI,GAAK,IACbsB,EAAItB,EAAI,GAAK,IAEb7W,EAAIwF,EAAI2S,EACRe,EAAI,EAMR,OAJIlZ,EAAI,IACPkZ,GAAKf,EAAInY,IAAM,EAAIA,IAGb,CAAC6W,EAAI,GAAQ,IAAJ7W,EAAa,IAAJkZ,EAC1B,EAEA3C,EAAQgB,IAAId,IAAM,SAAUc,GAC3B,IAAIrY,EAAIqY,EAAI,GAAK,IACbvX,EAAIuX,EAAI,GAAK,IACbM,EAAIN,EAAI,GAAK,IAEjB,GAAU,IAANvX,EACH,MAAO,CAAK,IAAJ6X,EAAa,IAAJA,EAAa,IAAJA,GAG3B,IAIIyD,EAJAC,EAAO,CAAC,EAAG,EAAG,GACdtC,EAAM/Z,EAAI,EAAK,EACfiZ,EAAIc,EAAK,EACTha,EAAI,EAAIkZ,EAGZ,OAAQtc,KAAK8E,MAAMsY,IAClB,KAAK,EACJsC,EAAK,GAAK,EAAGA,EAAK,GAAKpD,EAAGoD,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAKtc,EAAGsc,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAKpD,EAAG,MACxC,KAAK,EACJoD,EAAK,GAAK,EAAGA,EAAK,GAAKtc,EAAGsc,EAAK,GAAK,EAAG,MACxC,KAAK,EACJA,EAAK,GAAKpD,EAAGoD,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAG,MACxC,QACCA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGA,EAAK,GAAKtc,EAKtC,OAFAqc,GAAM,EAAMtb,GAAK6X,EAEV,CACe,KAApB7X,EAAIub,EAAK,GAAKD,GACM,KAApBtb,EAAIub,EAAK,GAAKD,GACM,KAApBtb,EAAIub,EAAK,GAAKD,GAEjB,EAEA/E,EAAQgB,IAAIV,IAAM,SAAUU,GAC3B,IAAIvX,EAAIuX,EAAI,GAAK,IAGbY,EAAInY,EAFAuX,EAAI,GAAK,KAEA,EAAMvX,GACnBkZ,EAAI,EAMR,OAJIf,EAAI,IACPe,EAAIlZ,EAAImY,GAGF,CAACZ,EAAI,GAAQ,IAAJ2B,EAAa,IAAJf,EAC1B,EAEA5B,EAAQgB,IAAIX,IAAM,SAAUW,GAC3B,IAAIvX,EAAIuX,EAAI,GAAK,IAGbjV,EAFIiV,EAAI,GAAK,KAEJ,EAAMvX,GAAK,GAAMA,EAC1BwF,EAAI,EASR,OAPIlD,EAAI,GAAOA,EAAI,GAClBkD,EAAIxF,GAAK,EAAIsC,GAEVA,GAAK,IAAOA,EAAI,IACnBkD,EAAIxF,GAAK,GAAK,EAAIsC,KAGZ,CAACiV,EAAI,GAAQ,IAAJ/R,EAAa,IAAJlD,EAC1B,EAEAiU,EAAQgB,IAAIT,IAAM,SAAUS,GAC3B,IAAIvX,EAAIuX,EAAI,GAAK,IAEbY,EAAInY,EADAuX,EAAI,GAAK,KACA,EAAMvX,GACvB,MAAO,CAACuX,EAAI,GAAc,KAATY,EAAInY,GAAoB,KAAT,EAAImY,GACrC,EAEA5B,EAAQO,IAAIS,IAAM,SAAUT,GAC3B,IAAI7X,EAAI6X,EAAI,GAAK,IAEbqB,EAAI,EADArB,EAAI,GAAK,IAEb9W,EAAImY,EAAIlZ,EACR4Y,EAAI,EAMR,OAJI7X,EAAI,IACP6X,GAAKM,EAAInY,IAAM,EAAIA,IAGb,CAAC8W,EAAI,GAAQ,IAAJ9W,EAAa,IAAJ6X,EAC1B,EAEAtB,EAAQiB,MAAMf,IAAM,SAAUe,GAC7B,MAAO,CAAEA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,IAAMA,EAAM,GAAK,MAAS,IAClF,EAEAjB,EAAQE,IAAIe,MAAQ,SAAUf,GAC7B,MAAO,CAAEA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,MAAQA,EAAI,GAAK,IAAO,MAC1E,EAEAF,EAAQlG,KAAKoG,IAAM,SAAU4D,GAC5B,MAAO,CAACA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,IAAKA,EAAK,GAAK,IAAM,IACnE,EAEA9D,EAAQlG,KAAKuG,IAAML,EAAQlG,KAAKwG,IAAM,SAAUwD,GAC/C,MAAO,CAAC,EAAG,EAAGA,EAAK,GACpB,EAEA9D,EAAQlG,KAAKyG,IAAM,SAAUzG,GAC5B,MAAO,CAAC,EAAG,IAAKA,EAAK,GACtB,EAEAkG,EAAQlG,KAAK0G,KAAO,SAAU1G,GAC7B,MAAO,CAAC,EAAG,EAAG,EAAGA,EAAK,GACvB,EAEAkG,EAAQlG,KAAK4G,IAAM,SAAU5G,GAC5B,MAAO,CAACA,EAAK,GAAI,EAAG,EACrB,EAEAkG,EAAQlG,KAAK8G,IAAM,SAAU9G,GAC5B,IAAIyI,EAAwC,IAAlCjd,KAAKkM,MAAMsI,EAAK,GAAK,IAAM,KAGjCsK,IAFW7B,GAAO,KAAOA,GAAO,GAAKA,GAEpBzM,SAAS,IAAIvN,cAClC,MAAO,SAAS8b,UAAUD,EAAO3c,QAAU2c,CAC5C,EAEApE,EAAQE,IAAIpG,KAAO,SAAUoG,GAE5B,MAAO,EADIA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM,EACzB,IAAM,IACrB,kBEn2BI+E,EAAcC,EA+BlB,SAASC,EAAUC,GAClB,IAAIC,EAnBL,WAKC,IAJA,IAAIA,EAAQ,CAAE,EAEVC,EAASjQ,OAAOkQ,KAAKN,GAEhBO,EAAMF,EAAO7d,OAAQ2D,EAAI,EAAGA,EAAIoa,EAAKpa,IAC7Cia,EAAMC,EAAOla,IAAM,CAGlB+W,UAAY,EACZtO,OAAQ,MAIV,OAAOwR,CACR,CAIaI,GACRC,EAAQ,CAACN,GAIb,IAFAC,EAAMD,GAAWjD,SAAW,EAErBuD,EAAMje,QAIZ,IAHA,IAAIke,EAAUD,EAAME,MAChBC,EAAYxQ,OAAOkQ,KAAKN,EAAYU,IAE/BH,EAAMK,EAAUpe,OAAQ2D,EAAI,EAAGA,EAAIoa,EAAKpa,IAAK,CACrD,IAAI0a,EAAWD,EAAUza,GACrB2a,EAAOV,EAAMS,QAEbC,EAAK5D,WACR4D,EAAK5D,SAAWkD,EAAMM,GAASxD,SAAW,EAC1C4D,EAAKlS,OAAS8R,EACdD,EAAMM,QAAQF,GAElB,CAGC,OAAOT,CACR,CAEA,SAASY,EAAKC,EAAMC,GACnB,OAAO,SAAUrC,GAChB,OAAOqC,EAAGD,EAAKpC,GACf,CACF,CAEA,SAASsC,EAAeC,EAAShB,GAKhC,IAJA,IAAIiB,EAAO,CAACjB,EAAMgB,GAASxS,OAAQwS,GAC/BE,EAAKtB,EAAYI,EAAMgB,GAASxS,QAAQwS,GAExCG,EAAMnB,EAAMgB,GAASxS,OAClBwR,EAAMmB,GAAK3S,QACjByS,EAAKN,QAAQX,EAAMmB,GAAK3S,QACxB0S,EAAKN,EAAKhB,EAAYI,EAAMmB,GAAK3S,QAAQ2S,GAAMD,GAC/CC,EAAMnB,EAAMmB,GAAK3S,OAIlB,OADA0S,EAAGE,WAAaH,EACTC,CACR,KC3EItB,EAAcC,EACdwB,ED4Ea,SAAUtB,GAK1B,IAJA,IAAIC,EAAQF,EAAUC,GAClBqB,EAAa,CAAE,EAEfnB,EAASjQ,OAAOkQ,KAAKF,GAChBG,EAAMF,EAAO7d,OAAQ2D,EAAI,EAAGA,EAAIoa,EAAKpa,IAAK,CAClD,IAAIib,EAAUf,EAAOla,GAGD,OAFTia,EAAMgB,GAERxS,SAKT4S,EAAWJ,GAAWD,EAAeC,EAAShB,GAChD,CAEC,OAAOoB,CACR,EC5FIzG,EAAU,CAAE,EAEH3K,OAAOkQ,KAAKN,GAuDlB5d,SAAQ,SAAU+d,GACxBpF,EAAQoF,GAAa,CAAE,EAEvB/P,OAAO+L,eAAepB,EAAQoF,GAAY,WAAY,CAAC/Z,MAAO4Z,EAAYG,GAAWjF,WACrF9K,OAAO+L,eAAepB,EAAQoF,GAAY,SAAU,CAAC/Z,MAAO4Z,EAAYG,GAAWhF,SAEnF,IAAIuG,EAASD,EAAMtB,GACD/P,OAAOkQ,KAAKoB,GAElBtf,SAAQ,SAAUgf,GAC7B,IAAIE,EAAKI,EAAON,GAEhBrG,EAAQoF,GAAWiB,GA5CrB,SAAqBE,GACpB,IAAIK,EAAY,SAAU9C,GACzB,GAAIA,QACH,OAAOA,EAGJC,UAAUtc,OAAS,IACtBqc,EAAO3c,MAAM6M,UAAUzM,MAAMwO,KAAKgO,YAGnC,IAAI8C,EAASN,EAAGzC,GAKhB,GAAsB,iBAAX+C,EACV,IAAK,IAAIrB,EAAMqB,EAAOpf,OAAQ2D,EAAI,EAAGA,EAAIoa,EAAKpa,IAC7Cyb,EAAOzb,GAAK9F,KAAKkM,MAAMqV,EAAOzb,IAIhC,OAAOyb,CACP,EAOD,MAJI,eAAgBN,IACnBK,EAAUH,WAAaF,EAAGE,YAGpBG,CACR,CAcgCE,CAAYP,GAC1CvG,EAAQoF,GAAWiB,GAASU,IAlE9B,SAAiBR,GAChB,IAAIK,EAAY,SAAU9C,GACzB,OAAIA,QACIA,GAGJC,UAAUtc,OAAS,IACtBqc,EAAO3c,MAAM6M,UAAUzM,MAAMwO,KAAKgO,YAG5BwC,EAAGzC,GACV,EAOD,MAJI,eAAgByC,IACnBK,EAAUH,WAAaF,EAAGE,YAGpBG,CACR,CA+CoCI,CAAQT,EAC5C,GACA,IAEA,IAAAU,EAAiBjH,EC5EbkH,ECCa,CAChBzQ,UAAa,CAAC,IAAK,IAAK,KACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,KAAQ,CAAC,EAAG,IAAK,KACjBC,WAAc,CAAC,IAAK,IAAK,KACzBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,EAAG,EAAG,GAChBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,KAAQ,CAAC,EAAG,EAAG,KACfC,WAAc,CAAC,IAAK,GAAI,KACxBC,MAAS,CAAC,IAAK,GAAI,IACnBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,WAAc,CAAC,IAAK,IAAK,GACzBC,UAAa,CAAC,IAAK,IAAK,IACxBC,MAAS,CAAC,IAAK,IAAK,IACpBC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,GAAI,IACrBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,SAAY,CAAC,EAAG,EAAG,KACnBC,SAAY,CAAC,EAAG,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,IAC5BC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,EAAG,IAAK,GACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,EAAG,KACxBC,eAAkB,CAAC,GAAI,IAAK,IAC5BC,WAAc,CAAC,IAAK,IAAK,GACzBC,WAAc,CAAC,IAAK,GAAI,KACxBC,QAAW,CAAC,IAAK,EAAG,GACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,cAAiB,CAAC,GAAI,GAAI,KAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,GAAI,GAAI,IAC1BC,cAAiB,CAAC,EAAG,IAAK,KAC1BC,WAAc,CAAC,IAAK,EAAG,KACvBC,SAAY,CAAC,IAAK,GAAI,KACtBC,YAAe,CAAC,EAAG,IAAK,KACxBC,QAAW,CAAC,IAAK,IAAK,KACtBC,QAAW,CAAC,IAAK,IAAK,KACtBC,WAAc,CAAC,GAAI,IAAK,KACxBC,UAAa,CAAC,IAAK,GAAI,IACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,YAAe,CAAC,GAAI,IAAK,IACzBC,QAAW,CAAC,IAAK,EAAG,KACpBC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,KAAQ,CAAC,IAAK,IAAK,GACnBC,UAAa,CAAC,IAAK,IAAK,IACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,MAAS,CAAC,EAAG,IAAK,GAClBC,YAAe,CAAC,IAAK,IAAK,IAC1BC,KAAQ,CAAC,IAAK,IAAK,KACnBC,SAAY,CAAC,IAAK,IAAK,KACvBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,IACvBC,OAAU,CAAC,GAAI,EAAG,KAClBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,SAAY,CAAC,IAAK,IAAK,KACvBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,GACxBC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,qBAAwB,CAAC,IAAK,IAAK,KACnCC,UAAa,CAAC,IAAK,IAAK,KACxBC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,cAAiB,CAAC,GAAI,IAAK,KAC3BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,eAAkB,CAAC,IAAK,IAAK,KAC7BC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,IAAK,GACjBC,UAAa,CAAC,GAAI,IAAK,IACvBC,MAAS,CAAC,IAAK,IAAK,KACpBC,QAAW,CAAC,IAAK,EAAG,KACpBC,OAAU,CAAC,IAAK,EAAG,GACnBC,iBAAoB,CAAC,IAAK,IAAK,KAC/BC,WAAc,CAAC,EAAG,EAAG,KACrBC,aAAgB,CAAC,IAAK,GAAI,KAC1BC,aAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAkB,CAAC,GAAI,IAAK,KAC5BC,gBAAmB,CAAC,IAAK,IAAK,KAC9BC,kBAAqB,CAAC,EAAG,IAAK,KAC9BC,gBAAmB,CAAC,GAAI,IAAK,KAC7BC,gBAAmB,CAAC,IAAK,GAAI,KAC7BC,aAAgB,CAAC,GAAI,GAAI,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,SAAY,CAAC,IAAK,IAAK,KACvBC,YAAe,CAAC,IAAK,IAAK,KAC1BC,KAAQ,CAAC,EAAG,EAAG,KACfC,QAAW,CAAC,IAAK,IAAK,KACtBC,MAAS,CAAC,IAAK,IAAK,GACpBC,UAAa,CAAC,IAAK,IAAK,IACxBC,OAAU,CAAC,IAAK,IAAK,GACrBC,UAAa,CAAC,IAAK,GAAI,GACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,UAAa,CAAC,IAAK,IAAK,KACxBC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,cAAiB,CAAC,IAAK,IAAK,KAC5BC,WAAc,CAAC,IAAK,IAAK,KACzBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,IACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,EAAG,KACnBC,cAAiB,CAAC,IAAK,GAAI,KAC3BC,IAAO,CAAC,IAAK,EAAG,GAChBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,YAAe,CAAC,IAAK,GAAI,IACzBC,OAAU,CAAC,IAAK,IAAK,KACrBC,WAAc,CAAC,IAAK,IAAK,IACzBC,SAAY,CAAC,GAAI,IAAK,IACtBC,SAAY,CAAC,IAAK,IAAK,KACvBC,OAAU,CAAC,IAAK,GAAI,IACpBC,OAAU,CAAC,IAAK,IAAK,KACrBC,QAAW,CAAC,IAAK,IAAK,KACtBC,UAAa,CAAC,IAAK,GAAI,KACvBC,UAAa,CAAC,IAAK,IAAK,KACxBC,UAAa,CAAC,IAAK,IAAK,KACxBC,KAAQ,CAAC,IAAK,IAAK,KACnBC,YAAe,CAAC,EAAG,IAAK,KACxBC,UAAa,CAAC,GAAI,IAAK,KACvBC,IAAO,CAAC,IAAK,IAAK,KAClBC,KAAQ,CAAC,EAAG,IAAK,KACjBC,QAAW,CAAC,IAAK,IAAK,KACtBC,OAAU,CAAC,IAAK,GAAI,IACpBC,UAAa,CAAC,GAAI,IAAK,KACvBC,OAAU,CAAC,IAAK,IAAK,KACrBC,MAAS,CAAC,IAAK,IAAK,KACpBC,MAAS,CAAC,IAAK,IAAK,KACpBC,WAAc,CAAC,IAAK,IAAK,KACzBC,OAAU,CAAC,IAAK,IAAK,GACrBC,YAAe,CAAC,IAAK,IAAK,KDnJ3B2E,EAAiB,CACd4C,QAASA,EACTC,QAASA,EACTC,OA4GH,SAAgBjD,GACb,IAAIkD,EAAOH,EAAQ/C,GACnB,OAAOkD,GAAQA,EAAK/f,MAAM,EAAG,EAChC,EA9GGggB,OAgHH,SAAgBnD,GACd,IAAIoD,EAAOJ,EAAQhD,GACnB,OAAOoD,GAAQA,EAAKjgB,MAAM,EAAG,EAC/B,EAlHGkgB,OAAQA,EACRC,SAmHH,SAAkBtD,GACf,IAAIuD,EAAOR,EAAQ/C,GACnB,GAAIuD,EACD,OAAOA,EAAK,GAEV,GAAIA,EAAOP,EAAQhD,GACrB,OAAOuD,EAAK,GAEV,GAAIA,EAAOF,EAAOrD,GACpB,OAAOuD,EAAK,EAElB,EA5HGC,UA+HH,SAAmB1H,GAChB,MAAO,IAAM2H,EAAU3H,EAAI,IAAM2H,EAAU3H,EAAI,IAClC2H,EAAU3H,EAAI,GAC9B,EAjIG4H,UAmIH,SAAmBR,EAAMS,GACtB,GAAIA,EAAQ,GAAMT,EAAK,IAAMA,EAAK,GAAK,EACpC,OAAOU,EAAWV,EAAMS,GAE3B,MAAO,OAAST,EAAK,GAAK,KAAOA,EAAK,GAAK,KAAOA,EAAK,GAAK,GAC/D,EAvIGU,WAAYA,EACZC,cAgJH,SAAuBX,EAAMS,GAC1B,GAAIA,EAAQ,GAAMT,EAAK,IAAMA,EAAK,GAAK,EACpC,OAAOY,EAAeZ,EAAMS,GAE/B,IAAI1G,EAAI/b,KAAKkM,MAAM8V,EAAK,GAAG,IAAM,KAC7BhG,EAAIhc,KAAKkM,MAAM8V,EAAK,GAAG,IAAM,KAC7Bzb,EAAIvG,KAAKkM,MAAM8V,EAAK,GAAG,IAAM,KAEjC,MAAO,OAASjG,EAAI,MAAQC,EAAI,MAAQzV,EAAI,IAC/C,EAxJGqc,eAAgBA,EAChBC,UAgKH,SAAmBX,EAAMO,GACtB,GAAIA,EAAQ,GAAMP,EAAK,IAAMA,EAAK,GAAK,EACpC,OAAOY,EAAWZ,EAAMO,GAE3B,MAAO,OAASP,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,IAChE,EApKGY,WAAYA,EACZC,UA+KH,SAAmB9H,EAAKwH,QACPO,IAAVP,IACDA,OAAoBO,IAAX/H,EAAI,GAAmBA,EAAI,GAAK,GAE5C,MAAO,OAASA,EAAI,GAAK,KAAOA,EAAI,GAAK,MAAQA,EAAI,GAAK,UACrC+H,IAAVP,GAAiC,IAAVA,EAAc,KAAOA,EAAQ,IAAM,GACxE,EApLGlH,QAsLH,SAAiBX,GACf,OAAOqI,EAAarI,EAAI3Y,MAAM,EAAG,GACnC,GArLA,SAAS4f,EAAQ/C,GACd,GAAKA,EAAL,CAGA,IAMIlE,EAAM,CAAC,EAAG,EAAG,GACbtU,EAAI,EACJ0Y,EAAQF,EAAOE,MARP,uBASZ,GAAIA,EAAO,CACRA,EAAQA,EAAM,GACd,IAAK,IAAIlZ,EAAI,EAAGA,EAAI8U,EAAIzY,OAAQ2D,IAC7B8U,EAAI9U,GAAKwZ,SAASN,EAAMlZ,GAAKkZ,EAAMlZ,GAAI,GAEhD,MACQ,GAAIkZ,EAAQF,EAAOE,MAdb,uBAcyB,CACjCA,EAAQA,EAAM,GACd,IAASlZ,EAAI,EAAGA,EAAI8U,EAAIzY,OAAQ2D,IAC7B8U,EAAI9U,GAAKwZ,SAASN,EAAM/c,MAAU,EAAJ6D,EAAW,EAAJA,EAAQ,GAAI,GAE1D,MACQ,GAAIkZ,EAAQF,EAAOE,MAnBb,2FAmB0B,CAClC,IAASlZ,EAAI,EAAGA,EAAI8U,EAAIzY,OAAQ2D,IAC7B8U,EAAI9U,GAAKwZ,SAASN,EAAMlZ,EAAI,IAE/BQ,EAAI4c,WAAWlE,EAAM,GAC3B,MACQ,GAAIA,EAAQF,EAAOE,MAxBd,6GAwB0B,CACjC,IAASlZ,EAAI,EAAGA,EAAI8U,EAAIzY,OAAQ2D,IAC7B8U,EAAI9U,GAAK9F,KAAKkM,MAAiC,KAA3BgX,WAAWlE,EAAMlZ,EAAI,KAE5CQ,EAAI4c,WAAWlE,EAAM,GAC3B,MACQ,GAAIA,EAAQF,EAAOE,MA7BV,SA6B0B,CACrC,GAAgB,eAAZA,EAAM,GACP,MAAO,CAAC,EAAG,EAAG,EAAG,GAGpB,KADApE,EAAMgH,EAAW5C,EAAM,KAEpB,MAET,CAEG,IAASlZ,EAAI,EAAGA,EAAI8U,EAAIzY,OAAQ2D,IAC7B8U,EAAI9U,GAAKqd,EAAMvI,EAAI9U,GAAI,EAAG,KAS7B,OAHGQ,EAJEA,GAAU,GAALA,EAIH6c,EAAM7c,EAAG,EAAG,GAHZ,EAKPsU,EAAI,GAAKtU,EACFsU,CAtDV,CAuDA,CAEA,SAASkH,EAAQhD,GACd,GAAKA,EAAL,CAGA,IACIE,EAAQF,EAAOE,MADT,4GAEV,GAAIA,EAAO,CACR,IAAIyD,EAAQS,WAAWlE,EAAM,IAK7B,MAAO,CAJCmE,EAAM7D,SAASN,EAAM,IAAK,EAAG,KAC7BmE,EAAMD,WAAWlE,EAAM,IAAK,EAAG,KAC/BmE,EAAMD,WAAWlE,EAAM,IAAK,EAAG,KAC/BmE,EAAMC,MAAMX,GAAS,EAAIA,EAAO,EAAG,GAEjD,CAVA,CAWA,CAEA,SAASN,EAAOrD,GACb,GAAKA,EAAL,CAGA,IACIE,EAAQF,EAAOE,MADT,0GAEV,GAAIA,EAAO,CACV,IAAIyD,EAAQS,WAAWlE,EAAM,IAK3B,MAAO,CAJCmE,EAAM7D,SAASN,EAAM,IAAK,EAAG,KAC7BmE,EAAMD,WAAWlE,EAAM,IAAK,EAAG,KAC/BmE,EAAMD,WAAWlE,EAAM,IAAK,EAAG,KAC/BmE,EAAMC,MAAMX,GAAS,EAAIA,EAAO,EAAG,GAEjD,CAVA,CAWA,CAsCA,SAASC,EAAWV,EAAMS,GAIvB,YAHcO,IAAVP,IACDA,OAAqBO,IAAZhB,EAAK,GAAmBA,EAAK,GAAK,GAEvC,QAAUA,EAAK,GAAK,KAAOA,EAAK,GAAK,KAAOA,EAAK,GAC9C,KAAOS,EAAQ,GAC5B,CAaA,SAASG,EAAeZ,EAAMS,GAI3B,MAAO,QAHCziB,KAAKkM,MAAM8V,EAAK,GAAG,IAAM,KAGZ,MAFbhiB,KAAKkM,MAAM8V,EAAK,GAAG,IAAM,KAEA,MADzBhiB,KAAKkM,MAAM8V,EAAK,GAAG,IAAM,KACY,OAASS,GAAST,EAAK,IAAM,GAAK,GAClF,CASA,SAASc,EAAWZ,EAAMO,GAIvB,YAHcO,IAAVP,IACDA,OAAqBO,IAAZd,EAAK,GAAmBA,EAAK,GAAK,GAEvC,QAAUA,EAAK,GAAK,KAAOA,EAAK,GAAK,MAAQA,EAAK,GAAK,MACpDO,EAAQ,GACrB,CAiBA,SAASU,EAAME,EAAKpH,EAAKC,GACtB,OAAOlc,KAAKic,IAAIjc,KAAKkc,IAAID,EAAKoH,GAAMnH,EACvC,CAEA,SAASqG,EAAUc,GACjB,IAAIC,EAAMD,EAAI7S,SAAS,IAAIvN,cAC3B,OAAQqgB,EAAInhB,OAAS,EAAK,IAAMmhB,EAAMA,CACxC,CAIA,IAAIL,EAAe,CAAE,EACrB,IAAK,IAAIM,KAAQ3B,EACdqB,EAAarB,EAAW2B,IAASA,EE1NpC,IAAIjV,EAAQsR,EACRlF,EAAU8I,EACV1E,EAAS2E,EAETC,EAAQ,SAAUC,GACrB,GAAIA,aAAeD,EAClB,OAAOC,EAER,KAAMjiB,gBAAgBgiB,GACrB,OAAO,IAAIA,EAAMC,GAalB,IAAItB,EACJ,GAXA3gB,KAAKkiB,OAAS,CACbhJ,IAAK,CAAC,EAAG,EAAG,GACZG,IAAK,CAAC,EAAG,EAAG,GACZC,IAAK,CAAC,EAAG,EAAG,GACZC,IAAK,CAAC,EAAG,EAAG,GACZC,KAAM,CAAC,EAAG,EAAG,EAAG,GAChBuH,MAAO,GAKW,iBAARkB,EAEV,GADAtB,EAAOvD,EAAO+C,QAAQ8B,GAErBjiB,KAAKmiB,UAAU,MAAOxB,QAChB,GAAIA,EAAOvD,EAAOgD,QAAQ6B,GAChCjiB,KAAKmiB,UAAU,MAAOxB,OAChB,MAAIA,EAAOvD,EAAOqD,OAAOwB,IAG/B,MAAM,IAAI9H,MAAM,sCAAwC8H,EAAM,KAF9DjiB,KAAKmiB,UAAU,MAAOxB,EAGzB,MACQ,GAAmB,iBAARsB,EAEjB,QAAeX,KADfX,EAAOsB,GACE5H,QAAgCiH,IAAbX,EAAK1J,IAChCjX,KAAKmiB,UAAU,MAAOxB,QAChB,QAAeW,IAAXX,EAAK5b,QAAsCuc,IAAnBX,EAAKyB,UACvCpiB,KAAKmiB,UAAU,MAAOxB,QAChB,QAAeW,IAAXX,EAAK/F,QAAkC0G,IAAfX,EAAKtc,MACvCrE,KAAKmiB,UAAU,MAAOxB,QAChB,QAAeW,IAAXX,EAAKjf,QAAsC4f,IAAnBX,EAAK0B,UACvCriB,KAAKmiB,UAAU,MAAOxB,OAChB,SAAeW,IAAXX,EAAKle,QAAiC6e,IAAdX,EAAK9P,KAGvC,MAAM,IAAIsJ,MAAM,qCAAuCmI,KAAKC,UAAUN,IAFtEjiB,KAAKmiB,UAAU,OAAQxB,EAG1B,CAEA,EAEAqB,EAAMhV,UAAY,CACjBkM,IAAK,WACJ,OAAOlZ,KAAKwiB,SAAS,MAAOzF,UAC5B,EACD1D,IAAK,WACJ,OAAOrZ,KAAKwiB,SAAS,MAAOzF,UAC5B,EACDzD,IAAK,WACJ,OAAOtZ,KAAKwiB,SAAS,MAAOzF,UAC5B,EACDxD,IAAK,WACJ,OAAOvZ,KAAKwiB,SAAS,MAAOzF,UAC5B,EACDvD,KAAM,WACL,OAAOxZ,KAAKwiB,SAAS,OAAQzF,UAC7B,EAED0F,SAAU,WACT,OAAOziB,KAAKkiB,OAAOhJ,GACnB,EACDwJ,SAAU,WACT,OAAO1iB,KAAKkiB,OAAO7I,GACnB,EACDsJ,SAAU,WACT,OAAO3iB,KAAKkiB,OAAO5I,GACnB,EACDsJ,SAAU,WACT,OAA0B,IAAtB5iB,KAAKkiB,OAAOnB,MACR/gB,KAAKkiB,OAAO3I,IAAIjS,OAAO,CAACtH,KAAKkiB,OAAOnB,QAErC/gB,KAAKkiB,OAAO3I,GACnB,EACDsJ,UAAW,WACV,OAAO7iB,KAAKkiB,OAAO1I,IACnB,EACDsJ,UAAW,WAEV,OADU9iB,KAAKkiB,OAAOhJ,IACX5R,OAAO,CAACtH,KAAKkiB,OAAOnB,OAC/B,EACDgC,oBAAqB,WAGpB,IAFA,IAAI7J,EAAMlZ,KAAKkiB,OAAOhJ,IAClB8J,EAAS,GACJ5e,EAAI,EAAGA,EAAI,EAAGA,IACtB4e,EAAO5e,GAAK8U,EAAI9U,GAAK,IAGtB,OADA4e,EAAOxe,KAAKxE,KAAKkiB,OAAOnB,OACjBiC,CACP,EACDC,UAAW,WAEV,OADUjjB,KAAKkiB,OAAO7I,IACX/R,OAAO,CAACtH,KAAKkiB,OAAOnB,OAC/B,EACDA,MAAO,SAAUxF,GAChB,YAAY+F,IAAR/F,EACIvb,KAAKkiB,OAAOnB,OAEpB/gB,KAAKmiB,UAAU,QAAS5G,GACjBvb,KACP,EAEDiX,IAAK,SAAUsE,GACd,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACDxI,MAAO,SAAUwI,GAChB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACDrL,KAAM,SAAUqL,GACf,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACDsC,IAAK,SAAUtC,GAKd,OAJIA,IAEHA,GADAA,GAAO,KACK,EAAI,IAAMA,EAAMA,GAEtBvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACD4H,WAAY,SAAU5H,GACrB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACD6G,UAAW,SAAU7G,GACpB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACD6H,YAAa,SAAU7H,GACtB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACD8G,UAAW,SAAU9G,GACpB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACD8H,UAAW,SAAU9H,GACpB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACDlX,MAAO,SAAUkX,GAChB,OAAOvb,KAAKkjB,WAAW,MAAO,EAAG3H,EACjC,EACD1K,KAAM,SAAU0K,GACf,OAAOvb,KAAKkjB,WAAW,OAAQ,EAAG3H,EAClC,EACDzG,QAAS,SAAUyG,GAClB,OAAOvb,KAAKkjB,WAAW,OAAQ,EAAG3H,EAClC,EACD5C,OAAQ,SAAU4C,GACjB,OAAOvb,KAAKkjB,WAAW,OAAQ,EAAG3H,EAClC,EACDvL,MAAO,SAAUuL,GAChB,OAAOvb,KAAKkjB,WAAW,OAAQ,EAAG3H,EAClC,EAEDqF,UAAW,WACV,OAAOxD,EAAOwD,UAAU5gB,KAAKkiB,OAAOhJ,IACpC,EACD4H,UAAW,WACV,OAAO1D,EAAO0D,UAAU9gB,KAAKkiB,OAAOhJ,IAAKlZ,KAAKkiB,OAAOnB,MACrD,EACDC,WAAY,WACX,OAAO5D,EAAO4D,WAAWhhB,KAAKkiB,OAAOhJ,IAAKlZ,KAAKkiB,OAAOnB,MACtD,EACDE,cAAe,WACd,OAAO7D,EAAO6D,cAAcjhB,KAAKkiB,OAAOhJ,IAAKlZ,KAAKkiB,OAAOnB,MACzD,EACDI,UAAW,WACV,OAAO/D,EAAO+D,UAAUnhB,KAAKkiB,OAAO7I,IAAKrZ,KAAKkiB,OAAOnB,MACrD,EACDK,WAAY,WACX,OAAOhE,EAAOgE,WAAWphB,KAAKkiB,OAAO7I,IAAKrZ,KAAKkiB,OAAOnB,MACtD,EACDM,UAAW,WACV,OAAOjE,EAAOiE,UAAUrhB,KAAKkiB,OAAO3I,IAAKvZ,KAAKkiB,OAAOnB,MACrD,EACDlH,QAAS,WACR,OAAOuD,EAAOvD,QAAQ7Z,KAAKkiB,OAAOhJ,IAAKlZ,KAAKkiB,OAAOnB,MACnD,EAEDuC,UAAW,WACV,OAAQtjB,KAAKkiB,OAAOhJ,IAAI,IAAM,GAAOlZ,KAAKkiB,OAAOhJ,IAAI,IAAM,EAAKlZ,KAAKkiB,OAAOhJ,IAAI,EAChF,EAEDqK,WAAY,WAIX,IAFA,IAAIrK,EAAMlZ,KAAKkiB,OAAOhJ,IAClBsK,EAAM,GACDpf,EAAI,EAAGA,EAAI8U,EAAIzY,OAAQ2D,IAAK,CACpC,IAAIqf,EAAOvK,EAAI9U,GAAK,IACpBof,EAAIpf,GAAMqf,GAAQ,OAAWA,EAAO,MAAQnlB,KAAKwG,KAAM2e,EAAO,MAAS,MAAQ,IAClF,CACE,MAAO,MAASD,EAAI,GAAK,MAASA,EAAI,GAAK,MAASA,EAAI,EACxD,EAEDE,SAAU,SAAUC,GAEnB,IAAIC,EAAO5jB,KAAKujB,aACZM,EAAOF,EAAOJ,aAClB,OAAIK,EAAOC,GACFD,EAAO,MAASC,EAAO,MAExBA,EAAO,MAASD,EAAO,IAC/B,EAEDE,MAAO,SAAUH,GAChB,IAAII,EAAgB/jB,KAAK0jB,SAASC,GAClC,OAAII,GAAiB,IACb,MAGAA,GAAiB,IAAO,KAAO,EACvC,EAEDC,KAAM,WAEL,IAAI9K,EAAMlZ,KAAKkiB,OAAOhJ,IAEtB,OADoB,IAATA,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,IAC5C,GACb,EAED+K,MAAO,WACN,OAAQjkB,KAAKgkB,MACb,EAEDE,OAAQ,WAEP,IADA,IAAIhL,EAAM,GACD9U,EAAI,EAAGA,EAAI,EAAGA,IACtB8U,EAAI9U,GAAK,IAAMpE,KAAKkiB,OAAOhJ,IAAI9U,GAGhC,OADApE,KAAKmiB,UAAU,MAAOjJ,GACflZ,IACP,EAEDmkB,QAAS,SAAUhI,GAGlB,OAFAnc,KAAKkiB,OAAO7I,IAAI,IAAMrZ,KAAKkiB,OAAO7I,IAAI,GAAK8C,EAC3Cnc,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO7I,KAC3BrZ,IACP,EAEDokB,OAAQ,SAAUjI,GAGjB,OAFAnc,KAAKkiB,OAAO7I,IAAI,IAAMrZ,KAAKkiB,OAAO7I,IAAI,GAAK8C,EAC3Cnc,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO7I,KAC3BrZ,IACP,EAEDqkB,SAAU,SAAUlI,GAGnB,OAFAnc,KAAKkiB,OAAO7I,IAAI,IAAMrZ,KAAKkiB,OAAO7I,IAAI,GAAK8C,EAC3Cnc,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO7I,KAC3BrZ,IACP,EAEDskB,WAAY,SAAUnI,GAGrB,OAFAnc,KAAKkiB,OAAO7I,IAAI,IAAMrZ,KAAKkiB,OAAO7I,IAAI,GAAK8C,EAC3Cnc,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO7I,KAC3BrZ,IACP,EAEDukB,OAAQ,SAAUpI,GAGjB,OAFAnc,KAAKkiB,OAAO3I,IAAI,IAAMvZ,KAAKkiB,OAAO3I,IAAI,GAAK4C,EAC3Cnc,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO3I,KAC3BvZ,IACP,EAEDwkB,QAAS,SAAUrI,GAGlB,OAFAnc,KAAKkiB,OAAO3I,IAAI,IAAMvZ,KAAKkiB,OAAO3I,IAAI,GAAK4C,EAC3Cnc,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO3I,KAC3BvZ,IACP,EAEDykB,UAAW,WACV,IAAIvL,EAAMlZ,KAAKkiB,OAAOhJ,IAElBqC,EAAe,GAATrC,EAAI,GAAoB,IAATA,EAAI,GAAqB,IAATA,EAAI,GAE7C,OADAlZ,KAAKmiB,UAAU,MAAO,CAAC5G,EAAKA,EAAKA,IAC1Bvb,IACP,EAED0kB,QAAS,SAAUvI,GAElB,OADAnc,KAAKmiB,UAAU,QAASniB,KAAKkiB,OAAOnB,MAAS/gB,KAAKkiB,OAAOnB,MAAQ5E,GAC1Dnc,IACP,EAED2kB,QAAS,SAAUxI,GAElB,OADAnc,KAAKmiB,UAAU,QAASniB,KAAKkiB,OAAOnB,MAAS/gB,KAAKkiB,OAAOnB,MAAQ5E,GAC1Dnc,IACP,EAED4kB,OAAQ,SAAUC,GACjB,IAAIhH,EAAM7d,KAAKkiB,OAAO7I,IAAI,GAK1B,OAHAwE,GADAA,GAAOA,EAAMgH,GAAW,KACZ,EAAI,IAAMhH,EAAMA,EAC5B7d,KAAKkiB,OAAO7I,IAAI,GAAKwE,EACrB7d,KAAKmiB,UAAU,MAAOniB,KAAKkiB,OAAO7I,KAC3BrZ,IACP,EAMD8kB,IAAK,SAAUC,EAAYC,GAC1B,IAAIC,EAASjlB,KACT2jB,EAASoB,EACT5hB,OAAeme,IAAX0D,EAAuB,GAAMA,EAEjCtjB,EAAI,EAAIyB,EAAI,EACZyB,EAAIqgB,EAAOlE,QAAU4C,EAAO5C,QAE5BmE,IAAQxjB,EAAIkD,IAAQ,EAAIlD,GAAKA,EAAIkD,IAAM,EAAIlD,EAAIkD,IAAM,GAAK,EAC1DugB,EAAK,EAAID,EAEb,OAAOllB,KACLkZ,IACAgM,EAAKD,EAAOhO,MAAQkO,EAAKxB,EAAO1M,MAChCiO,EAAKD,EAAOlS,QAAUoS,EAAKxB,EAAO5Q,QAClCmS,EAAKD,EAAO/U,OAASiV,EAAKxB,EAAOzT,QAEjC6Q,MAAMkE,EAAOlE,QAAU5d,EAAIwgB,EAAO5C,SAAW,EAAI5d,GACnD,EAEDiC,OAAQ,WACP,OAAOpF,KAAKkZ,KACZ,EAEDtM,MAAO,WACN,IAAIrJ,EAAM,IAAIye,EAEd,OADAze,EAAI2e,OAAStV,EAAM5M,KAAKkiB,QACjB3e,CACT,GAGAye,EAAMhV,UAAUoY,UAAY,SAAUC,GAGrC,IAFA,IAAI1E,EAAO,CAAE,EAEJvc,EAAI,EAAGA,EAAIihB,EAAM5kB,OAAQ2D,IACjCuc,EAAK0E,EAAMC,OAAOlhB,IAAMpE,KAAKkiB,OAAOmD,GAAOjhB,GAQ5C,OAL0B,IAAtBpE,KAAKkiB,OAAOnB,QACfJ,EAAK/b,EAAI5E,KAAKkiB,OAAOnB,OAIfJ,CACR,EAEAqB,EAAMhV,UAAUmV,UAAY,SAAUkD,EAAO1E,GAC5C,IAgBIvc,EAgCAmhB,EAhDAC,EAAS,CACZtM,IAAK,CAAC,MAAO,QAAS,QACtBG,IAAK,CAAC,MAAO,aAAc,aAC3BC,IAAK,CAAC,MAAO,aAAc,SAC3BC,IAAK,CAAC,MAAO,YAAa,aAC1BC,KAAM,CAAC,OAAQ,UAAW,SAAU,UAGjCiM,EAAQ,CACXvM,IAAK,CAAC,IAAK,IAAK,KAChBG,IAAK,CAAC,IAAK,IAAK,KAChBC,IAAK,CAAC,IAAK,IAAK,KAChBC,IAAK,CAAC,IAAK,IAAK,KAChBC,KAAM,CAAC,IAAK,IAAK,IAAK,MAInBuH,EAAQ,EACZ,GAAc,UAAVsE,EACHtE,EAAQJ,OACF,GAAIA,EAAKlgB,OAEfT,KAAKkiB,OAAOmD,GAAS1E,EAAKpgB,MAAM,EAAG8kB,EAAM5kB,QACzCsgB,EAAQJ,EAAK0E,EAAM5kB,aACb,QAA8B6gB,IAA1BX,EAAK0E,EAAMC,OAAO,IAAmB,CAE/C,IAAKlhB,EAAI,EAAGA,EAAIihB,EAAM5kB,OAAQ2D,IAC7BpE,KAAKkiB,OAAOmD,GAAOjhB,GAAKuc,EAAK0E,EAAMC,OAAOlhB,IAG3C2c,EAAQJ,EAAK/b,CACf,MAAQ,QAA+B0c,IAA3BX,EAAK6E,EAAOH,GAAO,IAAmB,CAEhD,IAAIK,EAAQF,EAAOH,GAEnB,IAAKjhB,EAAI,EAAGA,EAAIihB,EAAM5kB,OAAQ2D,IAC7BpE,KAAKkiB,OAAOmD,GAAOjhB,GAAKuc,EAAK+E,EAAMthB,IAGpC2c,EAAQJ,EAAKI,KACf,CAIC,GAFA/gB,KAAKkiB,OAAOnB,MAAQziB,KAAKkc,IAAI,EAAGlc,KAAKic,IAAI,OAAc+G,IAAVP,EAAsB/gB,KAAKkiB,OAAOnB,MAAQA,IAEzE,UAAVsE,EACH,OAAO,EAMR,IAAKjhB,EAAI,EAAGA,EAAIihB,EAAM5kB,OAAQ2D,IAC7BmhB,EAASjnB,KAAKkc,IAAI,EAAGlc,KAAKic,IAAIkL,EAAMJ,GAAOjhB,GAAIpE,KAAKkiB,OAAOmD,GAAOjhB,KAClEpE,KAAKkiB,OAAOmD,GAAOjhB,GAAK9F,KAAKkM,MAAM+a,GAIpC,IAAK,IAAII,KAASH,EAMjB,IALIG,IAAUN,IACbrlB,KAAKkiB,OAAOyD,GAAS3M,EAAQqM,GAAOM,GAAO3lB,KAAKkiB,OAAOmD,KAInDjhB,EAAI,EAAGA,EAAIuhB,EAAMllB,OAAQ2D,IAC7BmhB,EAASjnB,KAAKkc,IAAI,EAAGlc,KAAKic,IAAIkL,EAAME,GAAOvhB,GAAIpE,KAAKkiB,OAAOyD,GAAOvhB,KAClEpE,KAAKkiB,OAAOyD,GAAOvhB,GAAK9F,KAAKkM,MAAM+a,GAIrC,OAAO,CACR,EAEAvD,EAAMhV,UAAUwV,SAAW,SAAU6C,EAAOvI,GAC3C,IAAI6D,EAAO7D,EAAK,GAEhB,YAAawE,IAATX,EAEI3gB,KAAKolB,UAAUC,IAIH,iBAAT1E,IACVA,EAAOxgB,MAAM6M,UAAUzM,MAAMwO,KAAK+N,IAGnC9c,KAAKmiB,UAAUkD,EAAO1E,GACf3gB,KACR,EAEAgiB,EAAMhV,UAAUkW,WAAa,SAAUmC,EAAOvd,EAAOyT,GACpD,YAAY+F,IAAR/F,EAEIvb,KAAKkiB,OAAOmD,GAAOvd,IAChByT,IAAQvb,KAAKkiB,OAAOmD,GAAOvd,KAMtC9H,KAAKkiB,OAAOmD,GAAOvd,GAASyT,EAC5Bvb,KAAKmiB,UAAUkD,EAAOrlB,KAAKkiB,OAAOmD,KAL1BrlB,KAQT,EAEA,QAAiBgiB,GCtcjB,MAAM4D,EAAU,CACZC,aAAiB,gLAUjBC,eAAmB,sMAajBC,EAAkB,CACpBF,aAAiB,+VAejBC,eAAmB,yOAaR,MAAME,UAAuB9f,EAExC,IAAAK,GACiBvG,KAAK3C,MAAMqD,WAKxBV,KAAKwG,gBACLxG,KAAKyG,gBAAgBzG,KAAK0G,oBAC1B1G,KAAK2G,YACL3G,KAAKimB,kBACLjmB,KAAKkmB,gBACLlmB,KAAKmmB,iBACLnmB,KAAK6G,kBATD7G,KAAK6G,gBAUjB,CAEI,iBAAAC,GACI9G,KAAKuG,MACb,CAEI,KAAAgB,GACIxH,MAAMwH,eACCvH,KAAKomB,sBACLpmB,KAAKqmB,qBACLrmB,KAAKsmB,mBACLtmB,KAAKumB,aACRvmB,KAAKwmB,IACDxmB,KAAKymB,UACLzmB,KAAKymB,SAASpmB,SAAQqmB,IAClB1mB,KAAKwmB,GAAGG,aAAaD,EAAO,WAIjC1mB,KAAK4mB,kBACL5mB,KAAK6mB,sBACL7mB,KAAK8mB,2BACL9mB,KAAK+mB,iBACZ/mB,KAAKymB,SAAW,EACxB,CAEI,aAAAO,CAAcnpB,EAAQiG,GAClB,MAAMrG,EAAMuC,KAAKtC,SACjB,GAAID,EAAIwpB,UAAW,CAEf,MAAMljB,EAAItG,EAAIwpB,YACRlpB,EAASN,EAAImF,OAAO/E,EAAQiG,EAAU,GACtC0E,EAAK/K,EAAIsN,aAAalN,EAAQkG,GAChC2E,EAAKjL,EAAIsN,aAAahN,EAAQgG,GAClC,OAAOzF,KAAKC,IAAImK,EAAGlK,EAAIgK,EAAGhK,GAAKY,EAASC,KAAK6nB,KAAKpjB,EAC9D,CAAe,GAAIrG,EAAI0pB,gBAIX,OAHKnnB,KAAKonB,aACNpnB,KAAKonB,WAAa3pB,EAAI0pB,gBAAgB,EAAG1pB,EAAI4pB,aAE1CrnB,KAAKonB,WAAatjB,EACtB,CACH,MAAMwjB,EAAM7pB,EAAI4pB,WACVtpB,EAASN,EAAImF,OAAO/E,EAAQiG,EAAU,GACtC0E,EAAK/K,EAAI8pB,kBAAkB1pB,EAAQypB,GACrC5e,EAAKjL,EAAI8pB,kBAAkBxpB,EAAQupB,GACvC,OAAOhpB,KAAKC,IAAImK,EAAGlK,EAAIgK,EAAGhK,GAAKY,EAASC,KAAK6nB,KAAKpjB,EAC9D,CACA,CAEI,eAAA0jB,GACexnB,KAAKwmB,GACbiB,iBAAiBznB,KAAK0nB,QAAkB,UAAG,EAAO1nB,KAAKtC,SAASiqB,eAC3E,CAEI,eAAAC,GACS5nB,KAAK6nB,cACN7nB,KAAK6nB,YAAc7nB,KAAK8nB,cAAclC,EAAsB,aAAGA,EAAwB,eAAG,CAAC,WAAY,UAAW,eAEtH5lB,KAAK+nB,WAAW/nB,KAAK6nB,aACrB7nB,KAAK0nB,QAAU1nB,KAAK6nB,WAC5B,CAEI,SAAAlhB,GACS3G,KAAK4mB,aACN5mB,KAAK4mB,WAAa,IAEtB5mB,KAAK4nB,kBACL,MAAMte,EAAUtJ,KAAKkI,eACfzK,EAAMuC,KAAKtC,SACXsqB,EAAgBhoB,KAAK3C,MAAM6B,QAAkB,UAAK,EACxD,IAAK,IAAIkF,EAAI,EAAGA,EAAIkF,EAAQ7I,OAAQ2D,IAAK,CACrC,MAAMmF,EAASD,EAAQlF,GACvB,IAAKmF,EACD,SAEJ,MAAM3H,EAAO2H,EAAa,KACtBzH,EAAOyH,EAAa,KACpBlB,EAAWkB,EAAiB,SAChC,IAAIb,EAAIC,EACJ5E,EAAI,EACR,MAAMD,GAAYyF,EAAOzF,UAAY,GAAKkkB,EACtClkB,IACAC,EAAI/D,KAAKgnB,cAAcvpB,EAAIwqB,YAAankB,IAG5C,MAAMqE,EAAkC,GAAzBvG,EAAK,GAAKA,EAAK,GAAK,GAAmC,GAAzBE,EAAK,GAAKA,EAAK,GAAK,GAC3DomB,EAAW,IAAIC,aAAahgB,GAClC,IAAI1F,EAAI,EACR,MAAMkM,EAAMxL,IACR+kB,EAASzlB,KAAOU,CAAC,EAGrB,IAAK,IAAIiB,EAAIxC,EAAK,GAAIwC,GAAKxC,EAAK,GAAIwC,IAChCsE,EAAK1I,KAAKyK,gBAAgBrG,EAAGtC,EAAK,GAAIuG,GACtCM,EAAK3I,KAAKyK,gBAAgBrG,EAAGtC,EAAK,GAAIuG,GACtC,CAACK,EAAGlK,EAAGkK,EAAGjK,EAAGsF,EAAG4E,EAAGnK,EAAGmK,EAAGlK,EAAGsF,GAAG1D,QAAQsO,GAE3C,IAAK,IAAIvK,EAAItC,EAAK,GAAIsC,GAAKtC,EAAK,GAAIsC,IAChCsE,EAAK1I,KAAKyK,gBAAgB7I,EAAK,GAAIwC,EAAGiE,GACtCM,EAAK3I,KAAKyK,gBAAgB7I,EAAK,GAAIwC,EAAGiE,GACtC,CAACK,EAAGlK,EAAGkK,EAAGjK,EAAGsF,EAAG4E,EAAGnK,EAAGmK,EAAGlK,EAAGsF,GAAG1D,QAAQsO,GAGtC3O,KAAK4mB,WAAWxiB,KACjBpE,KAAK4mB,WAAWxiB,GAAKpE,KAAKooB,gBAE9B,MAAM5B,EAAKxmB,KAAKwmB,GAChBA,EAAG5nB,UAAUoB,KAAK0G,mBAAmB9H,WAAa,GAElDoB,KAAKwnB,kBAELhB,EAAG6B,UAAUroB,KAAK0nB,QAAmB,UAAG1nB,KAAK0G,mBAAmB7H,aAAe,GAC/E,MAAMoe,EAAQ+E,EAAMhiB,KAAK0G,mBAAmB/H,WAAa,QAAQokB,sBACjEyD,EAAG8B,WAAWtoB,KAAK0nB,QAAiB,QAAGzK,GAAS,CAAC,EAAG,EAAG,EAAG,IAE1DuJ,EAAG+B,WAAW/B,EAAGgC,aAAcxoB,KAAK4mB,WAAWxiB,IAC/CoiB,EAAGiC,WAAWjC,EAAGgC,aAAcN,EAAU1B,EAAGkC,cAC5C1oB,KAAK2oB,mBAAmB,CAAC,aAAc,IACvCnC,EAAGoC,WAAWpC,EAAGqC,MAAO,EAAGX,EAASznB,OAAS,GAC7C+lB,EAAG5nB,UAAU,EACzB,CACA,CAEI,mBAAAkqB,GACS9oB,KAAK+oB,kBACN/oB,KAAK+oB,gBAAkB/oB,KAAK8nB,cAAc/B,EAA8B,aAAGA,EAAgC,eAAG,CAAC,cAEnH/lB,KAAK+nB,WAAW/nB,KAAK+oB,iBACrB/oB,KAAK0nB,QAAU1nB,KAAK+oB,eAC5B,CAEI,eAAA9C,GACSjmB,KAAKomB,iBACNpmB,KAAKomB,eAAiB,GACtBpmB,KAAKqmB,cAAgB,GACrBrmB,KAAKsmB,YAAc,GACnBtmB,KAAKumB,aAAe,GACpBvmB,KAAK6mB,eAAiB,GACtB7mB,KAAK8mB,oBAAsB,GAC3B9mB,KAAK+mB,iBAAmB,IAE5B,MAAMP,EAAKxmB,KAAKwmB,GAChBxmB,KAAK8oB,sBACL,MAAM3gB,EAAQnI,KAAK3C,MAAMmD,eACzB,IAAK,IAAI4D,EAAI,EAAGA,EAAI+D,EAAO/D,IAAK,CAC5B,MAAM9G,EAAO0C,KAAK3C,MAAMqD,QAAQ0D,GAC5BiE,EAA4B,eAAjB/K,EAAW,KAAqB0C,KAAKsI,mBAAmBhL,EAAM8G,GAAKpE,KAAKuI,eAAejL,EAAM8G,GACxGnD,EAAO3D,EAAW,KACtB,IAAK+K,IAAalI,MAAMC,QAAQa,KAAUA,EAAKR,OAC3C,SAGJ,MAAMuoB,EAAY5pB,EAASC,KAAKwB,WAAWvD,EAAKsD,QAChD,IAAIsnB,EAAWloB,KAAKqmB,cAAcjiB,IAAM,GAAI6kB,EAASjpB,KAAKsmB,YAAYliB,IAAM,GACxE8kB,EAAUlpB,KAAKumB,aAAaniB,IAAM,GACtC,IAAKpE,KAAKomB,eAAehiB,IAAM4kB,EAAW,CACtC,IAAIvmB,EAAI,EACRxB,EAAKZ,SAAQ,CAAC8D,EAAU2D,KACf3D,EAAS,GAAW,SAGzB1B,EAAIzC,KAAKmL,cAAc,CAAE+c,WAAUe,SAAQC,WAAWzmB,EAAG0B,EAAUnE,KAAKoH,iBAAiBhD,GAAG0D,GAAQO,GAAS,GAEjI,CAEiBrI,KAAK6mB,eAAeziB,KACrB8jB,EAAWloB,KAAKqmB,cAAcjiB,GAAK,IAAI+jB,aAAaD,GACpDe,EAASjpB,KAAKsmB,YAAYliB,GAAK,IAAI+kB,WAAWF,GAC9CC,EAAUlpB,KAAKumB,aAAaniB,GAAK,IAAIglB,YAAYF,GACjDlpB,KAAK6mB,eAAeziB,GAAKpE,KAAKooB,eAC9BpoB,KAAK8mB,oBAAoB1iB,GAAKpE,KAAKooB,eACnCpoB,KAAK+mB,iBAAiB3iB,GAAKpE,KAAKooB,gBAGpCpoB,KAAKwnB,kBAELhB,EAAG+B,WAAW/B,EAAGgC,aAAcxoB,KAAK6mB,eAAeziB,IACnDpE,KAAK2oB,mBAAmB,CAAC,CAAC,aAAc,KACpCT,EAASznB,OAAS,GAClB+lB,EAAGiC,WAAWjC,EAAGgC,aAAcN,EAAUc,EAAYxC,EAAGkC,aAAelC,EAAG6C,aAG9E7C,EAAG+B,WAAW/B,EAAGgC,aAAcxoB,KAAK+mB,iBAAiB3iB,IACrDpE,KAAK2oB,mBAAmB,CAAC,CAAC,UAAW,EAAG,iBAAkB,CAAC,YAAa,EAAG,mBACvEM,EAAOxoB,OAAS,GAChB+lB,EAAGiC,WAAWjC,EAAGgC,aAAcS,EAAQD,EAAYxC,EAAGkC,aAAelC,EAAG6C,aAI5E7C,EAAG+B,WAAW/B,EAAG8C,qBAAsBtpB,KAAK8mB,oBAAoB1iB,IAC5D8kB,EAAQzoB,OAAS,IACjB+lB,EAAGiC,WAAWjC,EAAG8C,qBAAsBJ,EAASF,EAAYxC,EAAGkC,aAAelC,EAAG6C,aACjFrpB,KAAKomB,eAAehiB,GAAK8kB,EAAQzoB,QAErC+lB,EAAG+C,aAAa/C,EAAGgD,UAAWxpB,KAAKomB,eAAehiB,GAAIoiB,EAAGiD,aAAc,EAEnF,CAEQjD,EAAGkD,yBAAyBlD,EAAGmD,kBAAkBnD,EAAGkB,QAAS,eAC7DlB,EAAGkD,yBAAyBlD,EAAGmD,kBAAkBnD,EAAGkB,QAAS,YAC7DlB,EAAGkD,yBAAyBlD,EAAGmD,kBAAkBnD,EAAGkB,QAAS,aACrE,CAEI,aAAAvc,EAAc+c,SAAEA,EAAQgB,QAAEA,EAAOD,OAAEA,GAAUxmB,EAAG0B,EAAUhF,EAAQkJ,GAC9D,MAAM5K,EAAMuC,KAAKtC,SACXkE,EAAOzB,MAAMC,QAAQ+D,EAAS,IAAMA,EAAS,GAAK,CAACA,EAAS,GAAIA,EAAS,IAC3ErC,EAAO3B,MAAMC,QAAQ+D,EAAS,IAAMA,EAAS,GAAK,CAACA,EAAS,GAAIA,EAAS,IACvEL,GAAY9D,KAAK3C,MAAM6B,QAAkB,UAAK,IAAMmJ,EAASvE,UAAY,GAC/E,IAAIC,EAAI,EACJD,IACAC,EAAI/D,KAAKgnB,cAAcvpB,EAAIwqB,YAAankB,IAG5C,IAAIe,EAAIpC,EAAI,EAAI,EACZmC,EAAInC,EAAI,EAEZ,MAAMkM,EAAMxL,IACR+kB,EAASzlB,KAAOU,CAAC,EAGfymB,EAAazmB,IACf+lB,EAAQtkB,KAAOzB,CAAC,EAGd0mB,EAAW1mB,IACb8lB,EAAOpkB,KAAO1B,CAAC,EAGnB,IAAI8Z,EAAQ9d,EAAoB,YAC5B2qB,OAAuCxI,IAA7BniB,EAAuB,eAAkB,EAAIA,EAAuB,eAC7E8d,IACDA,EAAQ,OACR6M,EAAU,GAGd,MAAMC,EAAQ/H,EAAM/E,GAAO6F,YAG3B,IAAIpa,EAAIC,EAAIC,EAAIC,EAFhBkhB,EAAM,IAAgB,IAAVD,EAGZ,IAAK,IAAI1lB,EAAIxC,EAAK,GAAIwC,GAAKxC,EAAK,GAAIwC,IAChC,IAAK,IAAIE,EAAKxC,EAAK,GAAIwC,GAAMxC,EAAK,GAAIwC,IAAM,CACxCoE,EAAK1I,KAAKyK,gBAAgBrG,EAAGE,EAAI+D,GACjCO,EAAK5I,KAAKyK,gBAAgBrG,EAAI,EAAGE,EAAK,EAAG+D,GAEzCM,EAAKD,EAAG5F,IAAI8F,EAAGpK,EAAIkK,EAAGlK,EAAG,GAEzBqK,EAAKH,EAAG5F,IAAI,EAAG8F,EAAGnK,EAAIiK,EAAGjK,GACzB,MAAMwG,EAAMxC,EAAI,EAChBmnB,EAAW3kB,GACX2kB,EAAW3kB,EAAM,GACjB2kB,EAAW3kB,EAAM,GACjB2kB,EAAW3kB,GACX2kB,EAAW3kB,EAAM,GACjB2kB,EAAW3kB,EAAM,GACjB0J,EAAIjG,EAAGlK,GACPmQ,EAAIjG,EAAGjK,GACPkQ,EAAI5K,GACJgmB,EAAM1pB,QAAQwpB,GACdlb,EAAIhG,EAAGnK,GACPmQ,EAAIhG,EAAGlK,GACPkQ,EAAI5K,GACJgmB,EAAM1pB,QAAQwpB,GACdlb,EAAI/F,EAAGpK,GACPmQ,EAAI/F,EAAGnK,GACPkQ,EAAI5K,GACJgmB,EAAM1pB,QAAQwpB,GACdlb,EAAI9F,EAAGrK,GACPmQ,EAAI9F,EAAGpK,GACPkQ,EAAI5K,GACJgmB,EAAM1pB,QAAQwpB,EAC9B,CAGQ,OAAOpnB,CACf,CAII,eAAAgI,CAAgBlH,EAAKE,EAAK4E,GACtB,MAAM5K,EAAMuC,KAAKtC,SACX4pB,EAAM7pB,EAAI4pB,SAAW5pB,EAAI4pB,WAAa,KACtC2C,EAASvsB,EAAIwpB,UAAYxpB,EAAIwpB,YAAc,KACjD,GAAyB,eAArB5e,EAAe,KAAoB,CACnC,MAAMlF,EAAI,IAAI/D,EAASuL,MACnBtC,EAASxK,OAAOW,EAAI+E,EAAM8E,EAASnK,MACnCmK,EAASxK,OAAOY,EAAIgF,EAAM4E,EAASlK,QAEvC,OAAY,OAARmpB,EACO7pB,EAAIoN,mBAAmB1H,EAAGmkB,GAE1B7pB,EAAImN,oBAAoBzH,EAAG6mB,EAEzC,CAAM,GAAyB,UAArB3hB,EAAe,KAAe,CACrC,MAAMxK,EAASwK,EAASxK,OAClBE,EAASN,EAAImF,OAAO/E,EAAQwK,EAASnK,MAAQqF,GAAM8E,EAASlK,OAASsF,GAC3E,OAAY,OAAR6jB,EACO7pB,EAAI8pB,kBAAkBxpB,EAAQupB,GAE9B7pB,EAAIsN,aAAahN,EAAQisB,EAEvC,CAAM,GAAyB,WAArB3hB,EAAe,KAAgB,CACtC,MACMtK,EADSsK,EAASxK,OACFiF,IAAIS,EAAM8E,EAASnK,OAAQuF,EAAM4E,EAASlK,QAChE,OAAY,OAARmpB,EACO7pB,EAAI8pB,kBAAkBxpB,EAAQupB,GAE9B7pB,EAAIsN,aAAahN,EAAQisB,EAEhD,CACQ,OAAO,IACf,CAII,cAAA7D,GACI,MAAMhe,EAAQnI,KAAK3C,MAAMmD,eACzB,IAAK,IAAI4D,EAAI,EAAGA,EAAI+D,EAAO/D,IAAK,CAC5B,MAAM9G,EAAO0C,KAAK3C,MAAMqD,QAAQ0D,GAC5BiE,EAA4B,eAAjB/K,EAAW,KAAqB0C,KAAKsI,mBAAmBhL,EAAM8G,GAAKpE,KAAKuI,eAAejL,EAAM8G,GACxGnD,EAAO3D,EAAW,KACjB+K,GAAalI,MAAMC,QAAQa,IAAUA,EAAKR,QAG/CQ,EAAKZ,SAAQ,CAAC8D,EAAU2D,KACpB9H,KAAKoL,WAAWhH,EAAGD,EAAU2D,EAAOO,EAAS,GAE7D,CAEA,CAEI,QAAAsE,GACI5M,MAAM4M,WAEN,MAAM6Z,EAAKxmB,KAAKwmB,GAChB,IAAKA,EACD,OAEAxmB,KAAKymB,WACLzmB,KAAKymB,SAASpmB,SAAQ,SAAUwE,GAC5B2hB,EAAGG,aAAa9hB,EAChC,WACmB7E,KAAKymB,UAEZzmB,KAAKiqB,YACLjqB,KAAKiqB,UAAU5pB,SAAQwb,GAAK2K,EAAG0D,cAAcrO,YACtC7b,KAAKiqB,WAEhB,MAAMvC,EAAUlB,EAAGkB,QACnBlB,EAAG2D,cAAczC,GACjBlB,EAAG4D,aAAa1C,EAAQ5B,gBACxBU,EAAG4D,aAAa1C,EAAQ7B,qBACjB7lB,KAAKomB,sBACLpmB,KAAKqmB,qBACLrmB,KAAKsmB,mBACLtmB,KAAKumB,YACpB,CAEI,cAAA8D,GAGIrqB,KAAKsqB,QAAUlrB,EAASgK,OAAOmhB,aAAavqB,KAAKwqB,OAAOtsB,MAAO8B,KAAKwqB,OAAOrsB,QAC3E,MAAMqoB,EAAKxmB,KAAKwmB,GAAKxmB,KAAKyqB,iBAAiBzqB,KAAKsqB,QAAStqB,KAAK3C,MAAM6B,QAAmB,WACvFsnB,EAAGkE,aAAa,0BAChBlE,EAAGmE,OAAOnE,EAAGoE,OACbpE,EAAGqE,UAAUrE,EAAGsE,IAAKtE,EAAGuE,qBACxBvE,EAAGwE,WAAW,EAAK,EAAK,EAAK,GAC7BxE,EAAGyE,SAAS,EAAG,EAAGjrB,KAAKwqB,OAAOtsB,MAAO8B,KAAKwqB,OAAOrsB,OAKzD,CAEI,YAAA+sB,CAAaC,GACJnrB,KAAKwqB,SAGVzqB,MAAMmrB,aAAaC,GACfnrB,KAAKsqB,QAAQpsB,QAAU8B,KAAKwqB,OAAOtsB,OAAS8B,KAAKsqB,QAAQnsB,SAAW6B,KAAKwqB,OAAOrsB,SAChF6B,KAAKsqB,QAAQpsB,MAAQ8B,KAAKwqB,OAAOtsB,MACjC8B,KAAKsqB,QAAQnsB,OAAS6B,KAAKwqB,OAAOrsB,OAClC6B,KAAKwmB,GAAGyE,SAAS,EAAG,EAAGjrB,KAAKwqB,OAAOtsB,MAAO8B,KAAKwqB,OAAOrsB,SAElE,CAEI,WAAAitB,GACSprB,KAAKwqB,SAGVzqB,MAAMqrB,cACNprB,KAAKwmB,GAAGnlB,MAAMrB,KAAKwmB,GAAG6E,kBAC9B,CAEI,aAAAnF,GACI,MAAM7a,EAAMrL,KAAK8I,QACXrL,EAAMuC,KAAKtC,SACX4tB,EAAM7tB,EAAI8tB,oBAAsB9tB,EAAI8tB,sBAAwB,EAC9DnsB,EAASosB,QAAQC,SACjBpgB,EAAIqgB,OAEJrgB,EAAIoW,MAAM,EAAI6J,EAAK,EAAIA,IAG3BjgB,EAAIsgB,UAAU3rB,KAAKsqB,QAAS,EAAG,EAAGtqB,KAAKsqB,QAAQpsB,MAAO8B,KAAKsqB,QAAQnsB,QAC/DiB,EAASosB,QAAQC,QACjBpgB,EAAIugB,SAEhB,CAII,YAAAxD,GACI,MAEM1B,EAFK1mB,KAAKwmB,GAEE4B,eAClB,IAAK1B,EACD,MAAM,IAAIvM,MAAM,sCAMpB,OAJKna,KAAKymB,WACNzmB,KAAKymB,SAAW,IAEpBzmB,KAAKymB,SAASjiB,KAAKkiB,GACZA,CACf,CAMI,kBAAAiC,CAAmBkD,GACf,MAAMrF,EAAKxmB,KAAKwmB,GAChB,GAAIrmB,MAAMC,QAAQyrB,EAAW,IAAK,CAC9B,IAAIC,EAAS,EACb,IAAK,IAAI1nB,EAAI,EAAGA,EAAIynB,EAAWprB,OAAQ2D,IACnC0nB,GAAWD,EAAWznB,GAAG,IAAM,EAEnC,IAAIxD,EAAS,EACb,IAAK,IAAIwD,EAAI,EAAGA,EAAIynB,EAAWprB,OAAQ2D,IAAK,CACxC,MAAM2nB,EAAOvF,EAAGmD,kBAAkBnD,EAAGkB,QAASmE,EAAWznB,GAAG,IAC5D,GAAI2nB,EAAO,EACP,MAAM,IAAI5R,MAAM,yCAA2C0R,EAAWznB,GAAG,IAE7E,IAAI4nB,EAIAA,EAHCH,EAAWznB,GAAG,IAA2B,UAArBynB,EAAWznB,GAAG,GAEP,SAArBynB,EAAWznB,GAAG,IAAsC,kBAArBynB,EAAWznB,GAAG,GAC5C,EAEA,EAJA,EAMZoiB,EAAGyF,wBAAwBF,GAC3BvF,EAAG0F,oBAAoBH,EAAMF,EAAWznB,GAAG,GAAIoiB,EAAGqF,EAAWznB,GAAG,IAAM,UAAU,EAAO4nB,EAAQF,EAAQE,EAAQprB,GAC/GA,GAAWirB,EAAWznB,GAAG,IAAM,CAE/C,CACA,KAAe,CACH,MAAM2nB,EAAOvF,EAAGmD,kBAAkBnD,EAAGkB,QAASmE,EAAW,IACzDrF,EAAGyF,wBAAwBF,GAC3BvF,EAAG0F,oBAAoBH,EAAMF,EAAW,GAAIrF,EAAGqF,EAAW,IAAM,UAAU,EAAO,EAAG,EAChG,CACA,CAQI,aAAA/D,CAAcqE,EAASC,EAASC,GAC5B,MAAM7F,EAAKxmB,KAAKwmB,GAEVX,EAAe7lB,KAAKssB,eAAe9F,EAAIA,EAAG+F,cAAeJ,GACzDrG,EAAiB9lB,KAAKssB,eAAe9F,EAAIA,EAAGgG,gBAAiBJ,GACnE,IAAKvG,IAAiBC,EAClB,OAAO,KAIX,MAAM4B,EAAUlB,EAAGsB,gBACnB,IAAKJ,EACD,OAAO,KAIXlB,EAAGiG,aAAa/E,EAAS7B,GACzBW,EAAGiG,aAAa/E,EAAS5B,GAGzBU,EAAGkG,YAAYhF,GACflB,EAAGX,aAAeA,EAClBW,EAAGV,eAAiBA,EAGpB,IADeU,EAAGmG,oBAAoBjF,EAASlB,EAAGoG,aACrC,CACT,MAAMC,EAAQrG,EAAGsG,kBAAkBpF,GAInC,MAHAlB,EAAG2D,cAAczC,GACjBlB,EAAG4D,aAAatE,GAChBU,EAAG4D,aAAavE,GACV,IAAI1L,MAAM,2BAA6B0S,EACzD,CAIQ,OAFA7sB,KAAK+sB,cAAcrF,EAAS2E,GAErB3E,CACf,CAEI,UAAAK,CAAWL,GACP,MAAMlB,EAAKxmB,KAAKwmB,GAGhB,OAFAA,EAAGuB,WAAWL,GACdlB,EAAGkB,QAAUA,EACN1nB,IACf,CAEI,aAAAgtB,CAAcC,EAASC,GACnB,MAAM1G,EAAKxmB,KAAKwmB,GACV2G,EAAWntB,KAAKotB,YAAY5G,EAAGkB,QAASuF,GAM9C,OALKC,IACDA,EAAS,GAGb1G,EAAG6G,UAAUF,EAAUD,GAChBC,CACf,CAEI,gBAAA1C,CAAiBD,GACb,MAAMqB,EAAa,CACf9K,OAAS,EACTuM,uBAAyB,GAEvBC,EAAQ,CAAC,QAAS,sBACxB,IAAIzkB,EAAU,KAEd,IAAK,IAAI1E,EAAI,EAAGA,EAAImpB,EAAM9sB,SAAU2D,EAAG,CACnC,IACI0E,EAAU0hB,EAAOgD,WAAWD,EAAMnpB,GAAIynB,EACzC,CAAC,MAAO4B,GAAG,CACZ,GAAI3kB,EACA,KAEhB,CACQ,OAAOA,CAEf,CASI,cAAAwjB,CAAe9F,EAAInhB,EAAMuI,GAErB,MAAM8f,EAASlH,EAAGmH,aAAatoB,GAC/B,GAAc,MAAVqoB,EACA,MAAM,IAAIvT,MAAM,2BAIpBqM,EAAGoH,aAAaF,EAAQ9f,GAExB4Y,EAAGqH,cAAcH,GAIjB,IADiBlH,EAAGsH,mBAAmBJ,EAAQlH,EAAGuH,gBACnC,CACX,MAAMlB,EAAQrG,EAAGwH,iBAAiBN,GAGlC,MADAlH,EAAG4D,aAAasD,GACV,IAAIvT,MAAM,6BAA+B0S,EAC3D,CAEQ,OAAOa,CACf,CAEI,aAAAX,CAAcrF,EAAS2E,GACnB,IAAK,IAAIjoB,EAAI,EAAGA,EAAIioB,EAAS5rB,OAAQ2D,IAAK,CACtC,IAAIyd,EAAOwK,EAASjoB,GAChB6pB,EAAU5B,EAASjoB,GACvB,MAAMS,EAAIgd,EAAKrT,QAAQ,KACnB3J,GAAK,IACLgd,EAAOA,EAAKxE,UAAU,EAAGxY,GACzBopB,EAAUA,EAAQ5Q,UAAU,EAAGxY,IAEnC6iB,EAAQ7F,GAAQ7hB,KAAKotB,YAAY1F,EAASuG,EACtD,CACA,CAEI,WAAAb,CAAY1F,EAASwG,GACjB,MACMD,EADKjuB,KAAKwmB,GACG2H,mBAAmBzG,EAASwG,GAC/C,IAAKD,EACD,MAAM,IAAI9T,MAAM,yCAA2C+T,GAE/D,OAAOD,CACf,EAGAjI,EAAeoI,QAAQ,CAEnBC,OAAQ,WACJ,MAAMjS,EAAIhd,EAASosB,QAAQ8C,IAAM,KAAO,IAAInG,aAAa,IACzD,OAAO,SAAUoG,GACb,IAAK,IAAInqB,EAAI,EAAGA,EAAI,GAAIA,IACpBgY,EAAEhY,GAAKmqB,EAAInqB,GAEf,OAAOgY,CACV,CACJ,CARO,KC5pBZ5c,EAAUgvB,iBAAiB,SAAUtoB,GACrC1G,EAAUgvB,iBAAiB,KAAMxI,GAEjCxmB,EAAUkG,aAAa,CACnBxE,SAAa","x_google_ignoreList":[3,4,5,6,7,8,9,10]}